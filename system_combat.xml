<triggers>
<!--Defs-->
	<trigger
   enabled="y"
   group="System_Combat"
   match="^You begin to examine your surroundings with a keen eye\.$"
   name="ondef_keeneye"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:add_queue ("keeneye")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Combat"
   match="^You cease using your keen eye\.$"
   name="lostdef_keeneye"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:del_queue ("keeneye")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Combat"
   match="^You are already alerted by a keen eye\.$"
   name="has_keeneye"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:add_queue ("keeneye")</send>
  </trigger>
  <trigger
   enabled="n"
   group="System_Def"
   match="^You are observing with a keen eye\.$"
   name="def_keeneye"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("keeneye")</send>
  </trigger>
<!-- Parrying -->
  <trigger
   enabled="y"
   group="System_Combat"
   match="^You cease parrying\.$"
   name="unparry"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if flags:get ("parry") then
parry ["current"] = {}
parry ["unparried"] = true
flags:del ("parry")
fst:disable ("parry")
end --if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Combat"
   match="^You already are not putting any attention on parrying anything\.$"
   name="not_parrying"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if flags:get ("parry") then
parry ["current"] = {} --parry parts changed
parry ["unparried"] = true
flags:del ("parry")
fst:disable ("parry")
end --if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Combat"
   match="^You adjust your attention spent parrying your (head|chest|gut|left arm|right arm|left leg|right leg)\.$"
   name="parry_done"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>bodypart = string.gsub ("%1", " ", "")
if flags:get ("parry") == bodypart then
parry:done (bodypart)
end --if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Combat"
   match="^You enter a stance to protect your (.*)\.$"
   name="stance_done"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>if flags:get ("stance") then
stance:done ()
end --if</send>
  </trigger>
  <trigger
  enabled="n"
   group="System_Combat"
   match="^(?:.*)(Head|Chest|Gut|Lleg|Rleg|Larm|Rarm)\:(?:\s+)(\d+)"
   name="parry_sync"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>amnt = "%2"
if
amnt == "0"
then
amnt = nil
end --if
parry:set ("%1", amnt, "silent")</send>
  </trigger>
  <trigger
  enabled="n"
   group="System_Combat"
   match="^You are weighing your attention spent parrying yourself as follows\:$"
   name="parry_start"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:del ("waiting_for_parry")
fst:disable ("parry")
parry:reset ("silent")
EnableTrigger ("parry_sync", true)
prompt:queue (function () EnableTrigger ("parry_sync", false) end, "parry_start")</send>
  </trigger>
  <trigger
  enabled="n"
   group="System_Parry_Check"
   match="^Note\: Percentages are approximations only\.$"
   name="parry_end"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTriggerGroup ("System_Parry_Check", false)</send>
  </trigger>
</triggers>
