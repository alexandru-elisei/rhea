<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Saturday, August 25, 2012, 10:16 AM -->
<!-- MuClient version 4.72 -->
<!-- Written by Nick Gammon -->
<!-- Home Page: http://www.mushclient.com/ -->
<muclient>
<world
   muclient_version="4.72"
   world_file_version="15"
   date_saved="2012-08-25 10:16:24"

   auto_log_file_name="F:\Lusternia\Logs\Lusternia%a%d%b%Y.html"
   auto_say_override_prefix="-"
   auto_say_string="say "
   chat_name="Name-not-set"
   command_stack_character=";"
   id="4368c94de56c3f3b853c3401"
   input_font_name="Lucida Console"
   mapping_failure="Alas, you cannot go that way."
   name="Lusternia"
   new_activity_sound="(No sound)"
   output_font_name="Lucida Console"
   player="Faymar"
   script_editor="F:\Lusternia\wscite\SciTE.exe"
   script_filename="F:\Lusternia\System\dummy.lua"
   script_language="Lua"
   script_prefix="/"
   site="lusternia.com"
   spam_message="look"
   speed_walk_prefix="#"
   terminal_identification="mushclient"

   alt_arrow_recalls_partial="y"
   arrows_change_history="y"
   auto_repeat="y"
   auto_resize_minimum_lines="1"
   auto_resize_maximum_lines="20"
   chat_foreground_colour="red"
   chat_background_colour="black"
   chat_port="4050"
   confirm_on_paste="y"
   confirm_on_send="y"
   copy_selection_to_clipboard="y"
   default_trigger_sequence="100"
   default_alias_sequence="100"
   detect_pueblo="y"
   display_my_input="y"
   echo_colour="2"
   echo_hyperlink_in_output_window="y"
   enable_aliases="y"
   enable_beeps="y"
   enable_scripts="y"
   enable_timers="y"
   enable_triggers="y"
   escape_deletes_input="y"
   flash_taskbar_icon="y"
   history_lines="1000"
   hyperlink_adds_to_command_history="y"
   hyperlink_colour="#0080FF"
   input_background_colour="white"
   input_font_height="10"
   input_font_weight="400"
   input_font_charset="1"
   input_text_colour="black"
   line_information="y"
   log_html="y"
   log_input="y"
   log_in_colour="y"
   log_notes="y"
   log_output="y"
   max_output_lines="5000"
   mud_can_change_link_colour="y"
   mud_can_change_options="y"
   note_text_colour="#040000"
   output_font_height="9"
   output_font_weight="400"
   output_font_charset="1"
   paste_delay_per_lines="1"
   pixel_offset="1"
   port="23"
   proxy_port="1080"
   save_deleted_command="y"
   save_world_automatically="y"
   script_errors_to_output_window="y"
   send_file_delay_per_lines="1"
   send_mxp_afk_response="y"
   show_connect_disconnect="y"
   show_italic="y"
   show_underline="y"
   spam_line_count="20"
   tab_completion_lines="200"
   timestamp_input_text_colour="maroon"
   timestamp_notes_text_colour="blue"
   timestamp_output_text_colour="white"
   timestamp_input_back_colour="black"
   timestamp_notes_back_colour="black"
   timestamp_output_back_colour="black"
   treeview_triggers="y"
   underline_hyperlinks="y"
   unpause_on_send="y"
   use_custom_link_colour="y"
   warn_if_scripting_inactive="y"
   wrap="y"
   wrap_column="80"
   write_world_name_to_log="y"
   > <!-- end of general world attributes -->
  <connect_text>
</connect_text>
  <filter_triggers>function send_to_script (s)
  return GetTriggerInfo (s, 15) == 12 and -- send to script
         GetTriggerInfo (s, 8)            -- enabled
end -- send_to_script 

function enabled (s)
  return GetTriggerInfo (s, 8)  -- enabled
end -- enabled 

function disabled (s)
  return not GetTriggerInfo (s, 8)  -- not enabled
end -- disabled 

function keep_evaluating (s)
  return GetTriggerInfo (s, 7)  -- keep-evaluating flag
end -- keep_evaluating 

function badscript (s)
  return not GetTriggerInfo (s, 34) and  -- script not found
             GetTriggerInfo (s, 4) ~= "" -- but name given
end -- badscript 

function temporary (s)
  return GetTriggerInfo (s, 23)  -- temporary
end -- temporary 

function matched (s)
  return GetTriggerInfo (s, 21) &gt; 0 -- match count
end -- matched 

function unmatched (s)
  return GetTriggerInfo (s, 21) == 0 -- match count
end -- unmatched

function group (s)
&#9;return GetTriggerOption (s, "group") == trig_group
end --group

function multimatch (s)
&#9;return GetTriggerOption (s, "lines_to_match") == ltmatch
end --multimatch

-- if they cancel, show everything
function everything (s) 
  return true
end -- everything 

-- choose which function to use
result = utils.listbox ("Choose type of filtering", "Triggers",
           { 
           send_to_script = "Send to script and enabled",
           enabled = "Enabled items",
           disabled = "Disabled items",
           badscript = "Script name not found",
           keep_evaluating = "Keep evaluating",
           temporary = "Temporary triggers",
           matched = "Ones that matched something",
           unmatched = "Ones that never matched",
           group = "Pertaining to a certain group",
&#9;   multimatch = "Multiline triggers",&#9;
           },
           "group") -- default

-- use that function
filter = _G [result] or everything

trig_group = "PB"
ltmatch = 2
</filter_triggers>
  <log_file_postamble>&lt;/font&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/body&gt;
&lt;/html&gt;
</log_file_postamble>
  <log_file_preamble>&lt;html&gt;
 &lt;head&gt;
 &lt;title&gt;Log of %N session&lt;/title&gt;
 &lt;/head&gt;
 &lt;body&gt;
   &lt;table border=0 cellpadding=5 bgcolor="#000000"&gt;
   &lt;tr&gt;&lt;td&gt;
   &lt;pre&gt;&lt;code&gt;&lt;font size=2 face="FixedSys, Lucida Console, Courier New, Courier"&gt;
</log_file_preamble>

</world>

<!-- triggers -->

<triggers
   muclient_version="4.72"
   world_file_version="15"
   date_saved="2012-08-25 10:16:24"
  >
  <trigger
   enabled="y"
   group="System_Tracking"
   keep_evaluating="y"
   match="A pile of rubble lies here\, blocking the way (\w+)\..+"
   name="look_rubble"
   regexp="y"
   send_to="12"
   sequence="1"
  >
  <send>prompt:queue (function ()
 local blocked = {}
 local to_display = ""
 for w in string.gmatch ("%0", "blocking the way %a+") do
  local dir = string.sub (w, 18)
  blocked [dir]=true
  to_display=to_display..", "..dir
 end
 to_display=string.sub (to_display, 3)
 display.system ("Rubble - "..to_display)
 local to_check = {}
 if next (system ["exits"]) then
  for k, e in ipairs (system ["exits"]) do
   e=string.sub (e, 1,string.find(e, " ")-1)
   to_check [e] = true
   if blocked [e] or e == "down" or e =="up" then
    to_check [e]=nil
   end--if
  end--for
 end--if
 if not next (to_check) then
  display.warning ("EXITS BLOCKED")
  prompt:add_alert ("exits_blocked", "ExitBlock", 5)
 end--if
end, "look_rubble")</send>
  </trigger>
  <trigger
   group="System_Offense"
   keep_evaluating="y"
   match="^(.*)\.$"
   name="get_powers"
   regexp="y"
   repeat="y"
   send_to="12"
   sequence="1"
  >
  <send>EnableTrigger ("get_powers", false)
if string.find ("%1", "None") then
offense ["powers"] = {}
return
end
 --something wrong here, I should be comparing both the name of the power as well as the number of the power
local last_power = offense ["powers"] [#offense ["powers"]]
local no_power = #offense ["powers"]
offense ["powers"] = {}
for p in string.gmatch (string.lower ("%1"), "%(?%a+%)?") do
 if p ~= "and" then
  table.insert (offense ["powers"], p)
 end --if
end --for
display.system ("Current Powers:")
for k, v in ipairs (offense ["powers"]) do
 ColourNote ("red", "", " "..v)
end--for
if GetVariable ("demon_power") == "0" then
 SetVariable ("demon_power", "1")
  --if I have discharged the last power, and I invest more powers than I previously had, it will discharged the next power in the NEXT power list
elseif GetVariable ("demon_power") == "1"  
  and #offense ["powers"] &gt; no_power and
  offense.powers.last_power
   then
 SetVariable ("demon_power", no_power + 1) 
elseif tonumber (GetVariable ("demon_power")) &gt; #offense ["powers"] then
 SetVariable ("demon_power", "1")
end--if
Note ("")
display.system ("Discharging:")
ColourNote ("red", "", " "..offense ["powers"] [tonumber (GetVariable ("demon_power"))])
if GetVariable ("demon_lasthit") == "-1" then
 SetVariable ("demon_lasthit", "0")
 SetVariable ("demon_willhit", "8")
end--if</send>
  </trigger>
  <trigger
   group="System_Skills"
   match="^(Athletics|Kata|Cosmic|Rituals|Acrobatics|Astrology|Dreamweaving|Harmony|Healing|Hexes|Runes|Stealth|Tarot|Combat|Resilience|Discernment|Planar|Discipline|Environment|Influence|Beastmastery|Dramatics|Arts|Aethercraft|Lowmagic|Highmagic)(?:\s+)(Inept|Novice|Apprentice|Capable|Adept|Master|Gifted|Expert|Virtuoso|Fabled|Mythical|Transcendent)(?:\s+)(?:[A-Z][a-z]+)$"
   name="skills"
   regexp="y"
   send_to="12"
   sequence="1"
  >
  <send>skills:set (string.lower ("%1"), string.lower ("%2"))</send>
  </trigger>
  <trigger
   group="System_Tracking"
   lines_to_match="2"
   keep_evaluating="y"
   match="^([A-Z][a-z]+(\, .+?)?)\.\n\(\*\) Currently\, there are \d+ Lusternians on this Plane(.+?)?\.$"
   multi_line="y"
   name="qw_getenemy"
   regexp="y"
   repeat="y"
   send_to="12"
   sequence="1"
  >
  <send>for n in string.gmatch ("%1", "%a+") do
 if adven:is_enemy (n) then
  table.insert (adven.to_enemy, n)
 end--if
end--for
adven:enemied (nil, true)
EnableTrigger ("qw_getenemy", false)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You see (?:a single )?exits? leading (.+?)\.$"
   name="exits"
   regexp="y"
   send_to="12"
   sequence="1"
  >
  <send>system ["exits"] = {}
system:get_exits ("%1")</send>
  </trigger>
  <trigger
   custom_colour="11"
   enabled="y"
   expand_variables="y"
   group="System_Tracking"
   keep_evaluating="y"
   match="@!highlight_enemies"
   name="highlight_enemies"
   regexp="y"
   repeat="y"
   sequence="2"
  >
  </trigger>
  <trigger
   custom_colour="11"
   enabled="y"
   expand_variables="y"
   group="System_Tracking"
   keep_evaluating="y"
   make_underline="y"
   match="@!highlight_enemy_list"
   name="highlight_enemy_list"
   regexp="y"
   repeat="y"
   sequence="2"
  >
  </trigger>
  <trigger
   custom_colour="17"
   enabled="y"
   expand_variables="y"
   group="System_Ent"
   keep_evaluating="y"
   make_underline="y"
   match="@system_target"
   name="highlight_enemy"
   regexp="y"
   sequence="2"
   other_text_colour="crimson"
  >
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   keep_evaluating="y"
   match="^There are no obvious exits\.$"
   name="no_exits"
   regexp="y"
   send_to="12"
   sequence="2"
  >
  <send>system:get_exits ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="(?:An icewall|A stonewall) is here\, blocking passage to the (\w+)\."
   name="look_wall"
   regexp="y"
   repeat="y"
   send_to="12"
   sequence="10"
  >
  <send>prompt:queue (function () display.system ("Wall - "..string.upper ("%1")) end,"wall_%1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="A look of complete concentration and menace glitters in ([A-Z][a-z]+)\'s eyes\."
   name="look_contagion"
   regexp="y"
   send_to="12"
   sequence="10"
  >
  <send>for i=1,3 do
display.enemy ("Puissance - %1")
end
prompt:add_alert ("puissance_%1", "Puissance %1", 5)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="Looming high into the air\, tendrils of darkness form an ominous black tower of shadows\."
   name="look_broomtower"
   regexp="y"
   send_to="12"
   sequence="10"
  >
  <send>prompt:queue (function () display.system ("Broomtower - NO TREES") end,"look_broomtower")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="The shadows have been gathered here\."
   name="look_shadows"
   regexp="y"
   send_to="12"
   sequence="10"
  >
  <send>prompt:queue (function () display.system ("Shadows Released") end,"look_shadows")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="There are (\d+) large walls of ice here\."
   name="look_icewalls"
   regexp="y"
   repeat="y"
   send_to="12"
   sequence="10"
  >
  <send>prompt:queue (function () display.system ("Icewalls - %1") end,"walls_%1")</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="Tilting back your head and closing your eyes\, you concentrate upon the sensory web of veins on your neck and face\, and search out vibrations in the local area\. You sense the following minds\:"
   name="start_mindsense"
   regexp="y"
   send_to="12"
   sequence="10"
  >
  <send>EnableTrigger ("start_mindsense", false)
EnableTrigger ("mindsense_getenemy", true)
prompt:queue (function () 
 EnableTrigger ("mindsense_getenemy", false) 
 adven:enemied (nil, true)
end, "start_mindsense")</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="You snort and snuffle at the air\, sensing through .+? the faint traces of others in the surrounding area\."
   name="start_scent"
   regexp="y"
   send_to="12"
   sequence="10"
  >
  <send>EnableTrigger ("start_scent", false)
EnableTrigger ("scent_getenemy", true)
prompt:queue (function () 
 EnableTrigger ("scent_getenemy", false) 
 adven:enemied (nil, true)
end, "start_mindsense")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^(?:An icewall rises up|[A-Z][a-z]+ raises [hH](?:is|er) hands dramatically\, and summons an icewall) to the (\w+)\.$"
   name="trapped_icewall"
   regexp="y"
   send_to="12"
   sequence="10"
  >
  <send>display.system ("Icewalled - " .. string.upper("%1"))</send>
  </trigger>
  <trigger
   custom_colour="17"
   enabled="y"
   group="System_Tracking"
   match="^(?:Clasping [hH](?:is|er) hands to [hH](?:is|er) breast\, ([A-Z][a-z]+) sings to you\, wishing you well on your journey to the Halls of the Fates\. A white light surrounds [hH](?:im|er) as the voices of an angelic choir join [hH](?:is|er) in this somber hymn|The throat of ([A-Z][a-z]+) undulates and warbles as (?:[sS]h|[hH])e continues to maintain the moaning note of [hH](?:is|er) song\. Ominous black shadows rise out of the ground\, slowly circling around you|Sweat breaks out on ([A-Z][a-z]+)'s forehead, as (?:[sS]h|[hH])e continues to maintain the screaming note of [hH](?:is|er) song\. Ghostly spiked bands materialize around you\, which slowly begin to spin and screech like rusty iron cogs|([A-Z][a-z]+)\'s eyes roll up in [hH](?:is|er) head\, as (?:[sS]h|[hH])e sings a throbbing note\. Unseen drums begin to beat and invisible spirits begin to chant\, as mists rise up from the ground and swirl around you)\.$"
   name="deathsong2"
   regexp="y"
   send_to="12"
   sequence="10"
   other_text_colour="deeppink"
  >
  <send>local name = ""
if #"%1" &gt; 0 then
  name = "%1"
elseif #"%2" &gt; 0 then
  name = "%2"
elseif #"%3" &gt; 0 then
  name = "%3"
elseif #"%4" &gt; 0 then
  name = "%4"
end
for i=1,5 do
display.warning ("Deathsong - Stage Two - " .. name .. " - EAT EARWORT, RUB FEAR, OR GET OUT!")
end
prompt:add_alert ("dsong2_"..name, "DSong2 "..name, 4, -1)
system:set_auto ("truehearing", 1, "silent")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^([A-Z][a-z]+) begins to chant and raises [hH](?:is|er) arms\. Shafts of blue light rise up around the location\, like the bars of a prison\."
   name="enemy_carcer"
   regexp="y"
   send_to="12"
   sequence="10"
  >
  <send>prompt:queue (function () display.system ("Carcer") end, "look_carcer")
prompt:add_alert ("carcer", "Carcer", 10)</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^(health|mana|ego) cursed by Papaxi\.$"
   name="diag94"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("%1_curse")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^(left|right) (arm|leg) lashed in thorny vines\.$"
   name="diag114"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("lashed_%1%2")</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^A strange surge is growing inside of you\.$"
   name="def_prepotion"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>display.ondef ("waiting for orgpotion")</send>
  </trigger>
  <trigger
   custom_colour="17"
   enabled="y"
   group="System_Tracking"
   match="^A wall blocks your way\.$"
   name="trapped_wall"
   regexp="y"
   send_to="12"
   sequence="10"
   other_text_colour="deeppink"
  >
  <send>display.system ("Wall in the way!")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^Desperately in love with [A-Z][a-z]+\.$"
   name="diag6"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("lovers")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Eyes flashing with anger\, [A-Z][a-z]+ points a finger imperiously at you and utters a series of guttural croaks\. A strange thrumming fills your stomach\, and you watch in horror as warts break out over your skin which then turns green and slimy\. The world seems to suddenly become much larger\.\.\.or are you becoming smaller\? Hmm\, why do you have a sudden craving for flies\?$"
   name="toadcurse"
   regexp="y"
   send_to="12"
   sequence="10"
  >
  <send>display.warning ("Toadcurse - GET OUT NOW!")
defs:reset()
affs:reset()
wounds:reset()
if not system:is_on () then
  flags:add_check ("toad")
  system:off ()
end
prompt:add_alert ("toad", "Toad", 1000)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Shafts of blue light form crisscrossing patterns here\."
   name="look_carcer"
   regexp="y"
   send_to="12"
   sequence="10"
  >
  <send>prompt:queue (function () display.system ("Carcer") end, "look_carcer")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Slowly turning in a circle\,? ([A-Z][a-z]+) stretches out [hH](?:is|er) hands\. As (?:[hH]|[sS]h)e completes a revolution\, you notice bright flashes of light out of the corners of your eyes\.$"
   name="ill_reality1"
   regexp="y"
   send_to="12"
   sequence="10"
  >
  <send>display.warning (string.upper("%1") .. " Altered Reality!")</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^Sounds are heard through your true hearing\.$"
   name="def_truehearing"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>system:cured ("no_truehearing", "silent")
defs:ondef ("truehearing", nil, nil, true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Tentacles whip out from the torso of [A-Z][a-z]+\, blocking the exit to the (.+?)\.$"
   name="trapped_torso"
   regexp="y"
   send_to="12"
   sequence="10"
  >
  <send>display.system ("Torso - " .. string.upper("%1"))</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^The power of the elixir vitae flows through your veins\.$"
   name="def_vitae"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("vitae", nil, nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^The world is seen through your sixth sense\.$"
   name="def_sixthsense"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>system:cured ("no_sixthsense", "silent")
fst:disable ("ondef_sixthsense")
defs:ondef ("sixthsense", nil, nil, true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^With a sudden lurch\, the world around you becomes a blur as your body stretches and lengthens into its familiar .+? shape\. Your time as a toad has ended\, though the troublesome craving for flies lingers\.$"
   name="untoaded"
   regexp="y"
   send_to="12"
   sequence="10"
  >
  <send>display.system("Not a Toad!")
display.free ()
if flags:get_check ("toad") then
  system:on ()
  flags:del_check ("toad")
end
prompt:del_alert ("toad")</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are a Moonchilde\.$"
   name="def_moonchilde"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("moonchilde", nil, nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are a Nightwraith\.$"
   name="def_nightwraith"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("nightwraith", nil, nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are a lich\.$"
   name="def_enraged"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef ("lich", nil, nil, true)
skills ["available"] ["adroitness"] = {
 ["use"] = "defs_free",
 ["syntax"] = "adroitness"}</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are able to beseech the Princess\.$"
   name="def_princess"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("princess", nil, nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are acting drunker than you actually (?:is|are)\.$"
   name="def_drunkard"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("drunkard", nil, nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are acting more (sober|wounded) than you actually are\.$"
   name="def_soberwounded"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("%1", nil, nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are attuned to being in (.+?) environment\.$"
   name="def_attuned"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("attuned", "%1", nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are carrying yourself with a lawyerly demeanor\.$"
   name="def_lawyerly"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef ("attitude", "lawyerly", nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are carrying yourself with a saintly demeanor\.$"
   name="def_saintly"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef ("attitude", "saintly", nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are carrying yourself with the demeanor of a zealot\.$"
   name="def_zealot"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("attitude", "zealot", nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are compellingly charismatic\.$"
   name="def_charismaticaura"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("charismaticaura", nil, nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are concentrating on maintaining distance from the dreamworld\.$"
   name="def_metawake"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef ("metawake", nil, nil, true)
affs:del ("no_metawake")
fst:disable ("no_metawake")</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are demonstrating increased musical aptitude\.$"
   name="defup_tempo"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("tempo", nil, nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are experiencing a (\d+) percent experience boost\.$"
   name="def_xpboost"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef ("xp_boost", "%1\%", nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are feeling quite selfish\.$"
   name="def_selfishness"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef ("selfishness", nil, nil, true)
affs:del ("no_selfishness")
fst:disable ("no_selfishness")</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are filled with the greed of Acquisitio\.$"
   name="def_acquisitio"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("acquisitio", nil, nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are filtering air from water for breathing\.$"
   name="def_waterbreathe"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("waterbreathe", nil, nil, true)
affs:del ("no_waterbreathe")
fst:disable ("no_waterbreathe")</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are gaining increased experience in your bloodrage\.$"
   name="def_bloodrage"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("bloodrage", nil, true, true)
display.system ("Bloodrage")</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are gifted with increased speed by the shield shrine\.$"
   name="def_shrinecelerity"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("celerity", nil, nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are in performance mode\.$"
   name="def_performance"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef ("performance", nil, nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are lightly coated with a layer of (\w+)\.$"
   name="def_dragonsblood"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef ("%1", nil, nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are lipreading to overcome deafness\.$"
   name="def_lipread"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("lipread", nil, nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are more ready to handle electric currents\.$"
   name="def_galvanism"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("galvanism", nil, nil, true)
if flags:get ("no_galvanism") then
  system:cured ("no_galvanism", "silent")
end--if</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are performing the role of a (bully|bureaucrat|gorgeous|sycophant|vagabond)(?: beauty)?\.$"
   name="def_roles"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("role", "%1", nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are prepared to make use of (moonwater|holy water|nightsweats|unholy water) coursing through your body\.$"
   name="def_potion"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>local d = string.gsub("%1", " ", "_")
defs:ondef ("orgpotion", "%1", nil, true)
flags:del ("ondef_orgpotion")
fst:disable ("ondef_orgpotion")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You are prepared to make use of nightsweats coursing through your body\.$"
   name="def_nightsweats"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("nightsweats", nil, nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are protected by (\d+) defences\.$"
   name="defdone"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>EnableTriggerGroup ("System_Def", false)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are protected by a psionic barrier\.$"
   name="def_psishield"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("psishield", nil, nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are protected from hand\-held weapons with an aura of rebounding\.$"
   name="def_rebound"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("rebound", nil, nil, true)
fst:disable ("ondef_rebound")
affs:del ("no_rebound")</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are reviewing performances of others\.$"
   name="def_review"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("review", nil, nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are riding (.+?)\.$"
   name="def_mounted"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef ("mounted", "%1", nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are seeing death\.$"
   name="def_deathsight"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("deathsight", nil, nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are sensing disruptions in the aether\.$"
   name="def_aethersight"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef ("aethersight", nil, nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are soaring high above the ground\.$"
   name="def_flying"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("flying", nil, nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are standing within a prismatic barrier\.$"
   name="def_prismatic"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("prismatic", nil, nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are surrounded by a nearly invisible magical shield\.$"
   name="def_shield"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("shield", nil, nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are surrounded by a regal aura\.$"
   name="def_throne"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("throne", nil, nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are surrounded by one reflection of yourself\.$"
   name="def_reflection"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef ("reflection", nil, nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are tempered against fire damage\.$"
   name="def_frost"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("frost", nil, nil, true)
if flags:get ("no_frost") then
  system:cured ("no_frost", "silent")
end--if</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are under a (Lesser|Minor|Major) Blessing of the Domotheos of (Beauty|Knowledge|Justice|Death|Nature|Chaos|War|Harmony|Life)\.$"
   name="def_domoth"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:domoth ("%2", string.lower("%1"), nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are viewing the world through the third eye\.$"
   name="def_thirdeye"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef ("thirdeye", nil, nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are walking on a small cushion of air\.$"
   name="def_levitate"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("levitate", nil, nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are wearing a magic shroud\.$"
   name="def_shroud"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("shroud", nil, nil, true)</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^You are\:$"
   name="diag_start"
   regexp="y"
   send_to="12"
   sequence="10"
  >
  <send>affs:diag_start ()</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You can walk upon water\.$"
   name="def_waterwalk"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("waterwalk", nil, nil, true)
affs:del ("no_waterwalk")
fst:disable ("no_waterwalk")</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You have a powermask hiding your actions\.$"
   name="def_powermask"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef ("powermask", nil, nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You have an aura of protection around you\.$"
   name="def_protection"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef ("protection", nil, nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You have an?(?: divine)? (health|mana|ego) blessing\.$"
   name="def_divineblessing"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("%1_blessing", nil, nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You have ingested the kafe bean and are feeling extremely energetic\.$"
   name="def_kafe"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("kafe", nil, nil, true)
system:cured ("no_kafe", "silent")</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You have insomnia\, and cannot easily go to sleep\.$"
   name="def_insomnia"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>system:cured ("no_insomnia", "silent")
fst:disable ("no_insomnia")
defs:ondef ("insomnia", nil, nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You have taken on a glamour of ([A-Z][a-z]+)\.$"
   name="def_glamour"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef ("glamour", "%1", nil, true)</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^You have the following defen[sc]es active\:$"
   name="defstart"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>display.system ("Active Defenses:")
EnableTriggerGroup ("System_Def", true)
EnableTrigger ("defstart", false)
defs:start ()</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^You make out the scent of ([A-Z][a-z]+) coming from .+?\.$"
   name="scent_getenemy"
   regexp="y"
   send_to="12"
   sequence="10"
  >
  <send>if adven:is_enemy ("%1") then
 table.insert (adven.to_enemy, "%1")
end--if</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^Your (\w+) has been enhanced through fine food\.$"
   name="def_food"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef ("food_%1", nil, nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^Your (\w+) is under a Minor Blessing of the Domotheos of Chaos\.$"
   name="def_domothchaos"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:domoth ("Chaos", "minor", nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^Your aggression is stoked by alcohol\.$"
   name="def_darkbeer"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("beer", "dark", nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^Your blood is clotting by virtue of the Ray of the Kingdom\.$"
   name="def_kingdom"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("kingdom", nil, nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^Your body is prepared for lichdom when death comes knocking\.$"
   name="def_lichseed"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("lichseed", nil, true, true)
display.system ("Lichseed")</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^Your ego is regenerating by virtue of the Ray of Beauty\.$"
   name="def_beauty"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("beauty", nil, nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^Your fighting stance is defending your (\w+)(?: \w+)?\.$"
   name="def_stance"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>if "%1" == "vital" then
  stance:set ("vitals")
else
  stance:set ("%1")
end</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^Your health is regenerating by virtue of the Ray of the Merciful Hand\.$"
   name="def_mercy"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("mercy", nil, nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^Your insides are warmed by a fire potion\.$"
   name="def_fire"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("fire", nil, nil, true)
if flags:get ("no_fire") then
  system:cured ("no_fire", "silent")
end--if</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^Your insight is herbally heightened\.$"
   name="def_whitetea"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("tea", "white", nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^Your mana is regenerating by virtue of the Ray of Perfection\.$"
   name="def_perfection"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("perfection", nil, nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^Your mind is sensing the death of others\.$"
   name="def_deathsense"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("deathsense", nil, nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^Your movements are herbally heightened\.$"
   name="def_greentea"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("tea", "green", nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^Your pain is deadened by alcohol\.$"
   name="def_amberbeer"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("beer", "amber", nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^Your passion is herbally heightened\.$"
   name="def_oolongtea"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("tea", "oolong", nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^Your sense of time is heightened\, and your reactions are speeded\.$"
   name="def_speed"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("speed", nil, nil, true)
system:cured ("no_speed", "silent")
fst:disable ("speed")
fst:disable ("ondef_speed")</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^Your vision is heightened to see in the dark\.$"
   name="def_nightsight"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef ("nightsight", nil, nil, true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^Your vivaciousness is herbally heightened\.$"
   name="def_blacktea"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef("tea", "black", nil, true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   lines_to_match="2"
   match="^[A-Z][a-z]+ faces (\w+) and sharply claps [hH](?:is|er) hands together\, the sound of which is like two bricks being slammed against each other\.\nThe earth erupts and pushes up a massive wall of stone\.$"
   multi_line="y"
   name="trapped_stonewall"
   regexp="y"
   send_to="12"
   sequence="10"
  >
  <send>display.system ("Stonewalled - " .. string.upper("%1"))</send>
  </trigger>
  <trigger
   custom_colour="17"
   enabled="y"
   group="System_Tracking"
   match="^\&quot;.+?\&quot; sings ([A-Z][a-z]+)\, (?:somber notes tumbling out of .+?|as .+? plays deep\, dark melodies|tragically playing .+? with a mournful thrum|while .+? lets loose with screaming melodies)\, and (?:[sS]h|[hH])e looks directly at you\.$"
   name="deathsong1"
   regexp="y"
   send_to="12"
   sequence="10"
   other_text_colour="deeppink"
  >
  <send>for i=1,5 do
display.warning ("Deathsong - Stage One - %1 - EAT EARWORT, RUB FEAR, OR GET OUT!")
end
prompt:add_alert ("dsong1_%1", "DSong1 %1" 4, -1)</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^\* ([A-Z][a-z]+)\.$"
   name="mindsense_getenemy"
   regexp="y"
   send_to="12"
   sequence="10"
  >
  <send>if adven:is_enemy ("%1") then
 table.insert (adven.to_enemy, "%1")
end--if</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^a certified hypochondriac\.$"
   name="diag35"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("hypochondria")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^ablaze\.$"
   name="diag47"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("ablaze")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^addicted to elixirs\.$"
   name="diag64"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("addiction")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^afflicted by a crippled (left|right) (arm|leg)\.$"
   name="diag150"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("broken_%1%2")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^afflicted by fear\.$"
   name="diag107"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("fear")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^afflicted by ha?emophilia\.$"
   name="diag65"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("hemophilia")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^afflicted by horrible asthma\.$"
   name="diag39"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("asthma")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^afflicted by lapses in consciousness\.$"
   name="diag109"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("drunk")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^afflicted by thin blood\.$"
   name="diag12"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("relapsing")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^afflicted by unbearable shyness\.$"
   name="diag16"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("shyness")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^afflicted with .+? \((first|second|third|fourth) degree burns\)\.$"
   name="diag170"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:burned("%1")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^afflicted with a blood clot in the (left|right) (hip|shoulder)\.$"
   name="diag154"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>if "%2" == "shoulder" then
  affs:add("clot_%1arm")
else
  affs:add("clot_%1leg")
end</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^afflicted with a mental powersink\.$"
   name="diag7"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("powersink")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^afflicted with an achromatic aura\.$"
   name="diag120"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("achromatic")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^afflicted with clumsiness\.$"
   name="diag10"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("clumsiness")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^afflicted with the curse of the Aeon\.$"
   name="diag13"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:aeon()</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^afflicted with the darkseed inplanted beneath the skin\.$"
   name="diag115"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("darkseed")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^afraid of clothing\.$"
   name="diag20"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("vestiphobia")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^afraid of heights\.$"
   name="diag19"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("vertigo")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^afraid of the world\.$"
   name="diag80"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("omniphobia")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^agoraphobic\.$"
   name="diag61"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("agoraphobia")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^allergic to sunlight\.$"
   name="diag25"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>if flags:get_check ("sunallergy") then
affs:add ("sunallergy_"..flags:get_check ("sunallergy"))
else
 affs:add ("sunallergy_2")
end --if</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^an insomniac\.$"
   name="diag157"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>defs:ondef ("insomnia")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^anorexic\.$"
   name="diag18"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("anorexia")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^attracted to ([A-Z][a-z]+)\.$"
   name="diag161"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>if not system:is_auto("truehearing") then
  system:auto ("truehearing", 1)
end</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^beset by dazzling rainbow coloured patterns\.$"
   name="diag132"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("rainbowpatterns")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^bleeding through a furrowed brow\.$"
   name="diag128"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("furrowedbrow")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^blind\.$"
   name="diag181"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>if defs:has ("sixthsense") then
display.ondef ("sixthsense")
else
affs:add ("blindness")
end --if</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^bound and tied\.$"
   name="diag3"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("roped")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^choked by shadows\.$"
   name="diag167"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:choke ()</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^clamped on the (left|right) arm by a hound\'s jaws\.$"
   name="diag88"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("clamped_%1")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^claustrophobic\.$"
   name="diag68"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("claustrophobia")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^confounded by circuitous logic in a debate\.$"
   name="diag92"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("debate_circuitous")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^confused\.$"
   name="diag14"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("confusion")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^coughing up dreadful black phlegm\.$"
   name="diag75"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("blacklung")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^covered in ectoplasm\.$"
   name="diag77"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("ectoplasm")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^covered in green mucous\.$"
   name="diag184"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add ("mucous")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^covered in sticky mud\.$"
   name="diag90"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("muddy")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^covered in vile sticky gunk\.$"
   name="diag116"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("gunk")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^covered in viscous sap\.$"
   name="diag102"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:sap ()</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^crucified\.$"
   name="diag169"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("crucified")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^cursed by ego vice\.$"
   name="diag117"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("ego_vice")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^cursed by manabarbs\.$"
   name="diag118"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("manabarbs")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^cursed by power spikes\.$"
   name="diag119"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("powerspikes")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^cursed with (Bat|Herb|Snake) Bane\.$"
   name="diag164"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("bane_" .. string.lower("%1"))</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^cursed with a powerful jinx\.$"
   name="diag182"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add ("jinx")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^cursed with the healthleech\.$"
   name="diag52"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("healthleech")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^deaf\.$"
   name="diag180"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>if defs:has ("truehearing") then
display.ondef ("truehearing")
else
affs:add ("deafness")
end --if</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^demented\.$"
   name="diag40"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("dementia")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^devoid of senses\.$"
   name="diag108"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("blackout")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^disemboweled\.$"
   name="diag81"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("disemboweled")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^dying from crotamine\.$"
   name="diag29"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>if not flags:get_check ("crotamine") then
affs:add("crotamine_4")
else
affs:add ("crotamine_"..flags:get_check ("crotamine"))
end--if</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^enfeebled\.$"
   name="diag155"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("enfeebled")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^entangled\.$"
   name="diag2"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("entangled")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^experiencing heavy chest pain\.$"
   name="diag136"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("chestpain")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^extremely generous\.$"
   name="diag34"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("generosity")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^extremely oily\.$"
   name="diag15"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("slickness")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^feeling anxious in a debate\.$"
   name="diag91"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("debate_hurry")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^feeling rather lethargic\.$"
   name="diag70"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("lethargy")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^feeling unnaturally tranquil\.$"
   name="diag51"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("pacifism")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^feeling very sluggish\.$"
   name="diag185"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>if IsTimer ("alert_sluggish") ~= 0 then
 prompt:add_alert ("sluggish", "Sluggish", 30, -1)
end--if
prompt:unqueue ("del_sluggish")--I treat sluggish like an alert</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^frozen stiff\.$"
   name="diag159"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("frozen")
defs:del("fire")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^gluttonous\.$"
   name="diag49"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("gluttony")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^grappled by ([A-Z][a-z]+)\.$"
   name="diag162"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>if not next(affs ["grapples"]) then
  affs:grappled ("body", "%1")
else
  affs:add("grappled")
end</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^hallucinating\.$"
   name="diag27"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("hallucinations")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^has a dissonant nature\.$"
   name="diag112"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("dissonance")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^has a mangled (left|right) (arm|leg)\.$"
   name="diag151"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("mangled_%1%2")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^has a numbed (chest|gut|head|left arm|left leg|right arm|right leg)\.$"
   name="diag163"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>local part = string.gsub("%1", " ", "")
affs:numb (part, true)
</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^has a partially damaged head\.$"
   name="diag22"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("damagedhead")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^has a scrambled brain\.$"
   name="diag139"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("scrambledbrain")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^has a serious concussion\.$"
   name="diag41"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("concussion")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^has a twisted (left|right) (arm|leg)\.$"
   name="diag141"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("twisted_%1%2")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^has an aura of repugnance\.$"
   name="diag67"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("disloyalty")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^has stiff (.+?) muscles\.$"
   name="diag156"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>if "%1" == "face" then
  affs:add("stiff_head")
elseif "%1" == "right arm" then
  affs:add("stiff_rightarm")
elseif "%1" == "left arm" then
  affs:add("stiff_leftarm")
else
  affs:add("stiff_%1")
end</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^hated by the trees\.$"
   name="diag103"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("treebane")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^having difficulty breathing due to a severed phrenic nerve\.$"
   name="diag126"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("phrenicnerve")
flags:clear("phrenic_smoke")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^hypersomnic\.$"
   name="diag30"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("hypersomnia")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^immobile due to a severed spine\.$"
   name="diag124"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("severedspine")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^impaled through the gut\.$"
   name="diag165"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>if affs ["impales"] ["number"] == 0 then
flags:add_check ("impales", 1)
end--if</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^impatient\.$"
   name="diag66"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("impatience")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^infected with a parasite of the dreaming\.$"
   name="diag144"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("void")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^infected with scabies mites\.$"
   name="diag21"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("scabies")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^infected with stomach worms\.$"
   name="diag48"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("worms")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^inflicted with a cracked (left|right) (kneecap|elbow)\.$"
   name="diag85"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>local aff
if "%2" == "elbow" then
  aff = "elbow_%1arm"
  parry:reset ("silent")
else
 aff = "kneecap_%1leg"
 stance:reset ("silent")
end--if
affs:add(aff)</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^inflicted with a sliced (left|right) (bicep|thigh)\.$"
   name="diag84"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>bodypart = "%2"
  if
  bodypart == "bicep"
  then
  bodypart = "arm"
  else
  bodypart = "leg"
  end--if
  affs:add("sliced_%1"..bodypart)</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^limping on a crushed (left|right) foot\.$"
   name="diag133"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("crushedfoot_%1leg")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^limping with a shattered (left|right) ankle\.$"
   name="diag138"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("shatteredankle_%1leg")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^marked by a murky blotch on the throat\.$"
   name="diag183"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add ("deathmark", (flags:get_check ("deathmark") or 1))</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^marked with the aura of an? (heretic|infidel)\.$"
   name="diag97"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("%1")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^masochistic\.$"
   name="diag37"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("masochism")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^missing the (left|right) ear\.$"
   name="diag24"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("severedear_%1")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^muted by a crushed windpipe\.$"
   name="diag129"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("windpipe")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^muted by a mangled tongue\.$"
   name="diag134"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("mangledtongue")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^narcoleptic\.$"
   name="diag72"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("narcolepsy")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^of a deadened mind\.$"
   name="diag110"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("deadened")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^overcome by dizziness\.$"
   name="diag23"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("dizziness")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^pacified\.$"
   name="diag69"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("peace")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^pained by a snapped rib\.$"
   name="diag127"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("snappedrib")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^paraly[sz]ed on the (left|right) side\.$"
   name="diag43"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("hemiplegy_%1")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^paraly[zs]ed on the lower body\.$"
   name="diag140"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("hemiplegy_lower")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^paralysed\.$"
   name="diag1"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("paralysis")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^paranoid\.$"
   name="diag17"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("paranoia")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^plagued by a bedeviling sickness\.$"
   name="diag147"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("bedeviled")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^plagued by an illusory phantom\.$"
   name="diag105"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("phantoms")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^plagued by childish daydreams\.$"
   name="diag71"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("daydreaming")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^plagued by illusory wounds\.$"
   name="diag168"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("illusory_wounds")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^punctured in the etheric substance of your aura\.$"
   name="diag73"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("lightheaded")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^ravaged by an imbalanced homeostasis\.$"
   name="diag145"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("homeostasis")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^reckless\.$"
   name="diag11"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("recklessness")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^scalped\.$"
   name="diag86"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("scalped")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^seeing illusory stars\.$"
   name="diag104"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("stars")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^sensitive to pain\.$"
   name="diag26"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("sensitivity")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^shackled\.$"
   name="diag5"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("shackled")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^shivering\.$"
   name="diag158"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("chills")
defs:del("fire")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^sickened by the earth\'s taint\.$"
   name="diag101"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("taintsick")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^sprawled on the ground\.$"
   name="diag149"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:prone()</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^stricken by the vapors\.$"
   name="diag38"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("vapors")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^succumbing to Mother Moon\.$"
   name="diag89"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("succumb")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^suffering (\d+) burst blood vessels\.$"
   name="diag153"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add ("vessel", %1)</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^suffering a broken (left|right) wrist(?:\.)?$"
   name="diag63"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("brokenwrist_%1arm")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^suffering a broken nose\.$"
   name="diag59"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("brokennose")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^suffering a chest that has been opened up\.$"
   name="diag83"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("slicedopenchest")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^suffering a crushed chest\.$"
   name="diag58"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("crushedchest")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^suffering a locked throat\.$"
   name="diag78"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("throatlock")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^suffering from a bad bout of dysentery\.$"
   name="diag32"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("dysentery")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^suffering from a broken chest\.$"
   name="diag57"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("brokenchest")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^suffering from a broken jaw\.$"
   name="diag53"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("brokenjaw")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^suffering from a collapsed (left|right) arm nerve\.$"
   name="diag166"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("collapsednerve_%1arm")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^suffering from a dazzling afterimage\.$"
   name="diag130"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("afterimage")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^suffering from a dislocated (left|right) (arm|leg)\.$"
   name="diag137"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("dislocated_%1%2")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^suffering from a fractured (left|right) arm\.$"
   name="diag56"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("fractured_%1arm")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^suffering from a fractured skull\.$"
   name="diag54"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("fracturedskull")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^suffering from a lacerated (left|right) (arm|leg)\.$"
   name="diag122"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add ("lacerated", "%1%2")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^suffering from a pierced (left|right) (arm|leg)\.$"
   name="diag46"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("pierced_%1%2")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^suffering from a pox\.$"
   name="diag44"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("pox")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^suffering from a punctured (chest|lung)\.$"
   name="diag74"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("punctured%1")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^suffering from a ruptured stomach\.$"
   name="diag123"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("rupturedstomach")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^suffering from a severed artery in the (left|right) (arm|leg)\.$"
   name="diag9"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add ("artery", "%1%2")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^suffering from a shattered jaw\.$"
   name="diag125"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("shatteredjaw")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^suffering from a sliced open forehead\.$"
   name="diag42"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("artery", "head")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^suffering from a sliced open gut\.$"
   name="diag45"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("slicedopengut")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^suffering from a sliced tendon in the (left|right) leg\.$"
   name="diag62"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("tendon_%1leg")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^suffering from a slit throat\.$"
   name="diag82"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("slitthroat")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^suffering from collapsed lungs\.$"
   name="diag60"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("collapsedlungs")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^suffering from epilepsy\.$"
   name="diag28"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("epilepsy")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^suffering from massive organ failure\.$"
   name="diag95"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("burstorgans")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^suffering from ritualistic inquisition\.$"
   name="diag98"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("inquisition")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^suffering from the blues\.$"
   name="diag146"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("depression")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^suffering from the effects of blank note\.$"
   name="diag131"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("blanknote")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^suffering locked leg muscles\.$"
   name="diag79"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("leglock")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^suffering under a warped aura of infirmity\.$"
   name="diag148"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("aurawarp")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^surrounded by a colourful light\.$"
   name="diag87"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("illuminated")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^surrounded by the Binah Sphere\.$"
   name="diag113"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("binah_sphere")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^surrounded by the aura of justice\.$"
   name="diag50"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("justice")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^tightly trussed up\.$"
   name="diag143"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("trussed")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^tracked by (\d+) ruby crystals\.$"
   name="diag186"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add ("rubies", true, %1)</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^transfixed\.$"
   name="diag4"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("transfixed")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^trapped by a loophole in a debate\.$"
   name="diag93"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("debate_loophole")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^trapped inside a bubble\.$"
   name="diag99"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("bubble")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^trembling weakly\.$"
   name="diag142"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("trembling")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^turned into a statue\.$"
   name="diag100"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("statue")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^turning stiff like a corpse\.$"
   name="diag36"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("rigormortis")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^twitching in the face due to a gash\.$"
   name="diag121"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("gashedcheek")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^under an ill omen\.$"
   name="diag96"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("omen")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^under the curse of the dark moon\.$"
   name="diag106"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("darkmoon")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^under the influence of a love potion\.$"
   name="diag160"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>if system:is_auto ("love") then
affs:add("love", true, "silent")
display.ondef ("love")
else
affs:add ("love")
end --if</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^unnaturally stupid\.$"
   name="diag8"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("stupidity")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^very lonely\.$"
   name="diag111"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("loneliness")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^very short of breath\.$"
   name="diag135"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("shortbreath")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^violently ill\.$"
   name="diag33"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("vomiting")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^vomiting blood\.$"
   name="diag55"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("vomitingblood")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^wearied in body\.$"
   name="diag31"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("weakness")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^without a (left|right) (arm|leg)\.$"
   name="diag152"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("amputated_%1%2")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^without a (left|right) eye\.$"
   name="diag76"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="10"
  >
  <send>affs:add("peckedeye_%1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The earth erupts and pushes up a massive wall of stone\.$"
   name="trapped_stonewall2"
   regexp="y"
   send_to="12"
   sequence="20"
  >
  <send>display.warning ("Stonewall!")
display.warning ("Stonewall!")</send>
  </trigger>
  <trigger
   group="System_Blackout"
   keep_evaluating="y"
   match="^\d+h\, \d+\m\, \d+e\, \d+p\, \d+en\, \d+w(?:\, \d+mo)? .*?\-$"
   name="prompt_cureblackout"
   regexp="y"
   send_to="14"
   sequence="70"
  >
  <send>system:cured ("blackout")</send>
  </trigger>
  <trigger
   group="System_Blackout"
   keep_evaluating="y"
   match="^(?:\&lt;\&gt;)?\-$"
   name="prompt_blackout"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="80"
  >
  <send>prompt:normal(prompt ["vitals"] ["c_health"], prompt ["vitals"] ["c_mana"], prompt ["vitals"] ["c_ego"], prompt ["vitals"] ["c_power"], prompt ["vitals"] ["c_endurance"], prompt ["vitals"] ["c_willpower"], "*")</send>
  </trigger>
  <trigger
   group="System_Prompt"
   match="^(\d+)h\, (\d+)m\, (\d+)e\, (\d+)p\, (\d+)en\, (\d+)w(?:\, \d+mo)?( .*?)\-$"
   name="prompt_aeon"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="85"
  >
  <send>sca:cure ("aeon", %1, %2, %3, %4, %5, %6, "%7")</send>
  </trigger>
  <trigger
   group="System_Prompt"
   match="^(\d+)h\, (\d+)m\, (\d+)e\, (\d+)p\, (\d+)en\, (\d+)w(?:\, \d+mo)?( .*?)\-$"
   name="prompt_sap"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="86"
  >
  <send>sca:cure ("sap", %1, %2, %3, %4, %5, %6, "%7")</send>
  </trigger>
  <trigger
   group="System_Prompt"
   match="^(\d+)h\, (\d+)m\, (\d+)e\, (\d+)p\, (\d+)en\, (\d+)w(?:\, \d+mo)?( .*?)\-$"
   name="prompt_choke"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="87"
  >
  <send>sca:cure ("choke", %1, %2, %3, %4, %5, %6, "%7")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   keep_evaluating="y"
   match="[Ww]arm water showers down upon you"
   name="cleansed"
   regexp="y"
   send_to="12"
   sequence="90"
  >
  <send>if flags:get ("cleanse")then
  affs:del ({"stun", "unconscious"})
  fst:disable ("stun")
  flags:del("cleanse")
  fst:disable("cleanse")
  if flags:get_check ("magic") == "cleanse" then
 magic:used ("cleanse")
  end--if
  EnableTriggerGroup("System_Cleanse", true)
  prompt:queue(function () EnableTriggerGroup("System_Cleanse", false)end, "cleansed", true)
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   keep_evaluating="y"
   match="\, but your \w+ hits [hH](?:is|er) powerful aura and rebounds back into you\."
   name="wound_rebound"
   regexp="y"
   send_to="12"
   sequence="90"
  >
  <send>display.mult ("magenta", "skyblue", "REBOUND")
wounds:warrior_attack ("hammer", {}, "%0")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   keep_evaluating="y"
   match="\bwho brandishes (.+?)\."
   name="wound_coule"
   regexp="y"
   send_to="12"
   sequence="90"
  >
  <send>flags:add_check ("coule", "%1")
EnableTrigger("wound_coule2", true)
prompt:queue (function () EnableTrigger("wound_coule2", false) flags:del_check ("coule") end, "wounds_coule")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Prompt"
   match="^(?P&lt;ch&gt;\d+)h\, (?P&lt;cm&gt;\d+)m\, (?P&lt;ce&gt;\d+)e\, (?P&lt;cp&gt;\d+)p\, (?P&lt;cen&gt;\d+)en\, (?P&lt;cw&gt;\d+)w(?:\, \d+mo)?(?P&lt;cs&gt; .*?)\-$"
   name="prompt_normal"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="90"
  >
  <send>prompt:normal (%&lt;ch&gt;, %&lt;cm&gt;, %&lt;ce&gt;, %&lt;cp&gt;, %&lt;cen&gt;, %&lt;cw&gt;, "%&lt;cs&gt;")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Tracking"
   keep_evaluating="y"
   match="^Cleaving through your defenses\, [A-Z][a-z]+ makes a slow deadly strike at your (?:.+?) with (.+?)(?:(@!system_miss)|\, and you partially parry the blow with .+?)?\."
   name="wound_attack1"
   regexp="y"
   send_to="12"
   sequence="90"
  >
  <send>wounds:warrior_attack("%1", "%2", "%0")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Tracking"
   keep_evaluating="y"
   match="^Flourishing (.+?) above (?:[hH]is|[hH]er) head\, [A-Z][a-z]+ takes a swing at you(?:(@!system_miss)|\, and you partially parry the blow with .+?)?\."
   name="wound_attack7"
   regexp="y"
   send_to="12"
   sequence="90"
  >
  <send>wounds:warrior_attack("%1", "%2", "%0")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Tracking"
   keep_evaluating="y"
   match="^Holding (.+?) poised at an angle overhead\, [A-Z][a-z]+ unleashes a violent assault at your .+?(?:(@!system_miss)|\, and you partially parry the blow with .+?)?\."
   name="wound_attack11"
   regexp="y"
   send_to="12"
   sequence="90"
  >
  <send>wounds:warrior_attack("%1", "%2", "%0")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Tracking"
   keep_evaluating="y"
   match="^Letting (.+?) droop\, [A-Z][a-z]+ suddenly heaves it up at you(?:(@!system_miss)|\, and you partially parry the blow with .+?)?\."
   name="wound_attack6"
   regexp="y"
   send_to="12"
   sequence="90"
  >
  <send>wounds:warrior_attack("%1", "%2", "%0")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Tracking"
   keep_evaluating="y"
   match="^Sweeping (.+?) through the air overhead\, [A-Z][a-z]+ sends it whooshing straight towards your .+?(?:(@!system_miss)|\, and you partially parry the blow with .+?)?\."
   name="wound_attack4"
   regexp="y"
   send_to="12"
   sequence="90"
  >
  <send>wounds:warrior_attack("%1", "%2", "%0")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Tracking"
   keep_evaluating="y"
   match="^Swinging (.+?) in an underhand arc\, [A-Z][a-z]+ strikes at you(?:(@!system_miss)|\, and you partially parry the blow with .+?)?\."
   name="wound_attack8"
   regexp="y"
   send_to="12"
   sequence="90"
  >
  <send>wounds:warrior_attack("%1", "%2", "%0")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Tracking"
   keep_evaluating="y"
   match="^With a deft move\, [A-Z][a-z]+ retaliates with a quick swing of (.+?) at you(?:(@!system_miss)|\, and you partially parry the blow with .+?)?\."
   name="wound_riposte"
   regexp="y"
   send_to="12"
   sequence="90"
  >
  <send>wounds:warrior_attack("%1", "%2", "%0")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Tracking"
   keep_evaluating="y"
   match="^With a focused look\, [A-Z][a-z]+ strikes at you with (.+?)(?:(@!system_miss)|\, and you partially parry the blow with .+?)?\."
   name="wound_attack2"
   regexp="y"
   send_to="12"
   sequence="90"
  >
  <send>wounds:warrior_attack("%1", "%2", "%0")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Tracking"
   keep_evaluating="y"
   match="^With a heavy overhand stroke\, [A-Z][a-z]+ slams (.+?) down upon you(?:(@!system_miss)|\, and you partially parry the blow with .+?)?\."
   name="wound_attack5"
   regexp="y"
   send_to="12"
   sequence="90"
  >
  <send>wounds:warrior_attack("%1", "%2", "%0")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Tracking"
   keep_evaluating="y"
   match="^With a powerful lunge\, [A-Z][a-z]+ strikes at you with (.+?)(?:(@!system_miss)|\, and you partially parry the blow with .+?)?\."
   name="wound_attack10"
   regexp="y"
   send_to="12"
   sequence="90"
  >
  <send>wounds:warrior_attack("%1", "%2", "%0")</send>
  </trigger>
  <trigger
   group="System_Arena"
   keep_evaluating="y"
   match="^You have been slain by"
   name="arena_dead"
   regexp="y"
   send_to="12"
   sequence="90"
  >
  <send>system:cond ({"arena_dead_ffa", "arena_dead_wargames"})
prompt:queue (function () system:cond ()end, "arena_dead")</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^You remove (\d+) (\w+)\, bringing the total in the [Rr]ift to \d+\.$"
   name="outrifting"
   regexp="y"
   send_to="12"
   sequence="90"
  >
  <send>act:add_inv ("%2", %1)
EnableTrigger ("outrifting", false)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Tracking"
   keep_evaluating="y"
   match="^[A-Z][a-z]+ (?:wildly )?swings (.+?) at you(?:(@!system_miss)|\, and you partially parry the blow with .+?)?\."
   name="wound_attack3"
   regexp="y"
   send_to="12"
   sequence="90"
  >
  <send>wounds:warrior_attack("%1", "%2", "%0")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   keep_evaluating="y"
   match="^[A-Z][a-z]+ razes your (?:aura of rebounding|speed defence) with .*?(?:moonblade|shofa|staghorn|bull\-horn).*?\.$"
   name="shofangi_raze2"
   regexp="y"
   send_to="12"
   sequence="90"
  >
  <send>wounds:monk_attack ({"Shofangi"})</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Tracking"
   keep_evaluating="y"
   match="^[A-Z][a-z]+ wildly jabs (.+?) at you(?:(@!system_miss)|\, and you partially parry the blow with .+?)?\."
   name="wound_attack9"
   regexp="y"
   send_to="12"
   sequence="90"
  >
  <send>wounds:warrior_attack("%1", "%2", "%0")</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="System_Tracking"
   keep_evaluating="y"
   match="^[A-Z][a-z]+\'s blade runs down the shaft of your weapon(?:(@!system_miss)|\, and you partially parry the blow with .+?)?\."
   name="wound_coule2"
   regexp="y"
   send_to="12"
   sequence="90"
  >
  <send>wounds:warrior_attack(flags:get_check("coule"), "%1", "%0")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   keep_evaluating="y"
   match="(?: sends it whooshing straight towards your | unleashes a violent assault at your )"
   name="wound_power2"
   regexp="y"
   send_to="12"
   sequence="91"
  >
  <send>flags:add_check("multiply", 1.4)</send>
  </trigger>
  <trigger
   group="System_Wounds"
   keep_evaluating="y"
   match="(?:^With a powerful lunge\,| crushed )"
   name="wound_power1"
   regexp="y"
   send_to="12"
   sequence="91"
  >
  <send>flags:add_check ("multiply", 1.6)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You (?:point|rub) .+? (?:towards .+?\, and sparks fly out of it|and it begins to glow with a pulsating light)\.$"
   name="using_enchantments"
   regexp="y"
   send_to="12"
   sequence="91"
  >
  <send>if flags:get_check ("magic") then
magic:used (flags:get_check ("magic"))
end --if</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" A long\, bleeding rend is \w+ into your belly\.$"
   name="wound_add9"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add("gut")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" An enormous bruise rises on your (left|right) arm from getting \w+ hard\.$"
   name="wound_add40"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("%1arm")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" The \w+ to your (left|right) leg leaves only a nick on your thigh\.$"
   name="wound_add5"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add("%1leg")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" The blade bounces off your sternum\, delivering only a shallow puncture\.$"
   name="wound_add18"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add("chest")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" The blade is driven cleanly through the meat of your (left|right) thigh\.$"
   name="wound_add31"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("%1leg")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" The blade is driven into your throat\, which begins to spurt blood\.$"
   name="wound_add27"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("head")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" The blade slides between your ribs\, opening a hole that gushes blood\.$"
   name="wound_add28"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("chest")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" The bones of your (left|right) wrist breaks? as it is \w+\.$"
   name="wound_aff24"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff ("%1arm", "brokenwrist_%1arm")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" The stab to your (left|right) thigh leaves a gaping hole\.$"
   name="wound_add26"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("%1leg")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" The strike to your (left|right) arm \w+ down to the bone\.$"
   name="wound_add15"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add("%1arm")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" The strike to your (left|right) arm barely \w+ through the skin\.$"
   name="wound_add4"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add("%1arm")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" The stroke to your (left|right) leg \w+ a long wound to your calf\.$"
   name="wound_add11"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add("%1leg")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You are \w+ across the chest\, laying open a flap of skin which bleeds profusely\.$"
   name="wound_aff50"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff("chest", "slicedchest")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You are \w+ deep into your (left|right) leg\, gushing blood pooling at your feet\.$"
   name="wound_add16"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add("%1leg")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You are \w+ in the (left|right) arm\, which becomes limp and falls to your side\."
   name="wound_aff11"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff("%1arm", "fractured_%1arm")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You are \w+ in the (left|right) elbow\, cutting deep into the bone and causing the arm to hang uselessly\.$"
   name="wound_aff5"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff("%1arm", "elbow_%1arm")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You are \w+ in the (left|right) thigh\, cutting almost to the bone and causing your leg to buckle\.$"
   name="wound_aff3"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff ("%1leg", "pierced_%1leg")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You are \w+ in the belly for a mere scratch\.$"
   name="wound_add3"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add("gut")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You are \w+ in the cheek for a small flesh wound\.$"
   name="wound_add1"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add("head")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You are \w+ in the chest and receive a small bruise\.$"
   name="wound_add33"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("chest")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You are \w+ in the chest for a small surface wound\.$"
   name="wound_add2"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add("chest")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You are \w+ in the chest with great force and hear a disturbing crunch\.$"
   name="wound_add43"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("chest")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You are \w+ in the eye\, which turns purple and swells shut\.$"
   name="wound_aff15"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("head", 4)
affs:blackout ()</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You are \w+ in the forehead and blink away blood\.$"
   name="wound_add6"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add("head")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You are \w+ in the gut\, and the wind is knocked out of you\.$"
   name="wound_add62"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("gut")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You are \w+ in your (left|right) arm\, lacerating flesh\.$"
   name="wound_add10"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add("%1arm")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You are \w+ in your (left|right) bicep and blood freely flows down your arm\.$"
   name="wound_aff6"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff("%1arm", "sliced_%1arm")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You are \w+ in your head\, leaving an ugly bruise\.$"
   name="wound_add37"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("head")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You are \w+ squarely in the nose\, which bleeds profusely\.$"
   name="wound_aff14"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("head")
affs:bleeding(50)</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You are barely fazed from getting \w+ in the gut\.$"
   name="wound_add34"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("gut")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You are brutally whacked in the chest and are forced to take several steps back\.$"
   name="wound_add58"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("chest")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You are cuffed lightly in the side of your face\.$"
   name="wound_add47"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("head")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You are dealt only a glancing blow to the side of your head from the \w+ swing\.$"
   name="wound_add32"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("head")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You are feebly struck in your (left|right) leg with the blade\.$"
   name="wound_add21"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("%1leg")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You are hit on the (left|right) arm and get only a small bruise\.$"
   name="wound_add50"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("%1arm")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You are hit on the (left|right) thigh for a minor bruise\.$"
   name="wound_add51"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("%1leg")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You are merely clipped on your (left|right) arm for a small cut\.$"
   name="wound_add20"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("%1arm")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You are mortally wounded when \w+ in the gut\. Your internal organs have ruptured and turned to jelly\. If you do not heal soon\, you shall die\.$"
   name="wound_aff27"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff ("gut", "burstorgans")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You are painfully pounded in the face\.$"
   name="wound_add52"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("head")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You are pierced in the side of your face\, leaving a bleeding wound\.$"
   name="wound_add22"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("head")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You are poked in the chin for a small puncture\.$"
   name="wound_add17"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add("head")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You are pricked in the gut and bleed slightly\.$"
   name="wound_add19"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("gut")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You are smacked in the chest with a solid blow\.$"
   name="wound_add53"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("chest")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You are stabbed in the side of your chest\, blood oozing from the gash\.$"
   name="wound_add23"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("chest")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You are stabbed in your (left|right) arm\, the blade painfully burrowing into your flesh\.$"
   name="wound_add25"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("%1arm")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You are struck in the chest with spurting blood between your ribs\.$"
   name="wound_aff53"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("chest")
affs:add_queue ("vessel", 1)</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You are tapped in the stomach with little effect\.$"
   name="wound_add49"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("gut")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You are thumped in the chest weakly\.$"
   name="wound_add48"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("chest")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You bare your teeth in pain as the .+? is thrust fiercely in your gut\.$"
   name="wound_add54"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("gut")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You barely keep your balance as your (left|right) leg is brutally \w+\.$"
   name="wound_add46"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("%1leg")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You bleed like a stuck pig from the blade being plunged into your gut\.$"
   name="wound_add29"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("gut")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You cry out in pain as your jaw is \w+ and shatters\.$"
   name="wound_aff17"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff("head", "brokenjaw")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You double over and can barely breathe from the force of your belly being \w+\.$"
   name="wound_add44"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("gut")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You falter in your tracks as your (left|right) arm receives a severe \w+\.$"
   name="wound_add45"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("%1arm")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You get a large bruise on your (left|right) thigh from being \w+ hard on the leg\.$"
   name="wound_add41"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("%1leg")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You grimace in pain as your ribs are \w+ viciously\.$"
   name="wound_aff16"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff("chest", "brokenchest")
affs:add_queue ("stun")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You grunt as you are \w+ in the gut\, forcing all the air out of your lungs\.$"
   name="wound_add39"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("gut")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You receive a bloody gash from the \w+ to your chest\.$"
   name="wound_add7"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add("chest")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You receive a nasty belly wound from the thrust of the blade\.$"
   name="wound_add24"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("gut")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You receive only a red welt from your (left|right) leg being \w+\.$"
   name="wound_add36"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("%1leg")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You reel from the mighty \w+ to your head\, seeing stars and flashes of light\.$"
   name="wound_add12"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add("head")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You stagger back from the force of being \w+ in the chest\.$"
   name="wound_add38"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("chest")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" You stumble and barely stay upright as the .+? is plowed deep into the meat of your (left|right) leg\.$"
   name="wound_add61"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("%1leg")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" Your (left|right) arm is \w+ and breaks with a loud crack\.$"
   name="wound_aff19"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff ("%1arm", "broken_%1arm")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" Your (left|right) arm is \w+ and slightly bruised\.$"
   name="wound_add35"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("%1arm")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" Your (left|right) arm is almost dislocated from its shoulder as the .+? is driven deeply into your bicep\.$"
   name="wound_add60"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("%1arm")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" Your (left|right) arm is completely \w+ through\, which flies through the air as blood splurts out in a fountain at the severed shoulder joint.$"
   name="wound_aff4"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff ("%1arm", "amputated_%1arm")
affs:add_queue ("stun")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" Your (left|right) arm is hit forcefully\, leaving an enormous bruise on the forearm\.$"
   name="wound_add55"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("%1arm")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" Your (left|right) arm is skewered by the blade\, driven completely through the other side\.$"
   name="wound_add30"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("%1arm")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" Your (left|right) kneecap is \w+\, slicing through the bone and causing the leg to collapse\.$"
   name="wound_aff7"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>if affs:has("kneecap_%1leg") then
if wounds ["cwpn"] then
  affs:prone("broken_%1leg")
  affs:prone ()
  flags:add_check ("multiply", 1.1)
end
else
  wounds:aff ("%1leg", "kneecap_%1leg")
end</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" Your (left|right) leg is \w+ with an awesome blow and pulverized into a bloody stump\.$"
   name="wound_aff25"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("%1leg")
affs:add_queue ("mangled_%1leg")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" Your (left|right) leg is completely \w+ through\, which immediately plops to the ground\, leaving only a bloody stump\.$"
   name="wound_aff2"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff ("%1leg", "amputated_%1leg")
affs:add_queue ("stun")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" Your (left|right) leg is elegantly \w+ and swept out from under you\, knocking you to the ground\."
   name="wound_aff13"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("%1leg", 3)
affs:prone()</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" Your (left|right) leg is smacked with a force that goes to the bone\.$"
   name="wound_add56"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("%1leg")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" Your (left|right) thigh bone is \w+ and shatters under the force of the blow\.$"
   name="wound_aff23"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("%1leg")
if not affs:has ("mangled_%1leg") then
  affs:add_queue ("broken_%1leg")
end</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" Your belly opens up from the deep \w+\, spraying blood everywhere\.$"
   name="wound_add14"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add("gut")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" Your chest is \w+ open\, laying bare your ribs\.$"
   name="wound_add13"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add("chest")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" Your chest is brutally \w+ and your ribs snap under the force of the blow\.$"
   name="wound_aff20"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>if wounds ["weapons"] ["BC"] [wounds ["cwpn"]] then
wounds:add ("chest", 4)
elseif wounds ["weapons"] ["AL"] [wounds ["cwpn"]] then
wounds:add ("chest", 6)
end
affs:add_queue ("crushedchest")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" Your eyes water and you can barely breathe as the blow punches hard into your belly\.$"
   name="wound_add59"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("gut")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" Your gut is \w+ with great force\, and blood begins to foam at your mouth\.$"
   name="wound_aff21"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff ("gut", "vomitingblood")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" Your head is \w+ with crushing force\, and your mind becomes so addled that you can only blink blankly about yourself\.$"
   name="wound_aff26"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff ("head", "concussion")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" Your head snaps back as your skull is \w+ hard and fractures\, causing your thoughts to spin\.$"
   name="wound_aff22"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff("head", "fracturedskull")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" Your head whips back from the force of the blow\.$"
   name="wound_add57"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("head")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" Your nose is savagely \w+ and breaks\, causing blood to splurt forth\.$"
   name="wound_aff18"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff("head", "brokennose")
affs:add_queue ("stun")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" Your skull is \w+ with a resounding crack\, leaving your ears ringing and causing you to stagger\.$"
   name="wound_add42"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("head")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" [A-Z][a-z]+ \w+ across your face and through your cheek\, leaving it dangling precariously and oozing blood\.$"
   name="wound_aff44"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff ("head", "gashedcheek")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" [A-Z][a-z]+ \w+ across your forehead and leaves a long furrow that weeps blood onto your face\.$"
   name="wound_aff46"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff("head", "furrowedbrow")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" [A-Z][a-z]+ \w+ deep into your (left|right) foot\, pinning it down with .+?\. You involuntarily crumple to a crouch and can think of nothing but freeing your impaled foot\.$"
   name="wound_aff35"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>if wounds ["cwpn"] then
affs:add ("pierced_%1leg")
wounds:add ("%1leg", 4)
affs:pinleg()
end</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" [A-Z][a-z]+ \w+ deep into your (left|right) shoulder\, which collapses a nerve and sends spasms throughout your limp arm\.$"
   name="wound_aff52"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff ("%1arm", { "collapsednerve_%1arm", "hemiplegy_%1" })
affs:add_custom ("hemiplegy_%1", "elixir", "drink allheale", 79)</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" [A-Z][a-z]+ \w+ deep into your (left|right) shoulder\, which severs a nerve and causes your entire \1 side to go numb\."
   name="wound_aff9"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff("%1arm", "hemiplegy_%1")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" [A-Z][a-z]+ \w+ deep into your chest\, and you grit your teeth as the blade twists violently\.$"
   name="wound_aff31"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff("chest", "puncturedchest")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" [A-Z][a-z]+ \w+ deep into your gut\, and a bloody intestine partially erupts with a foul stench\.$"
   name="wound_aff33"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff ("gut", "dysentery")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" [A-Z][a-z]+ \w+ deeply into your (left|right) arm\, which hits a nerve and makes that arm twitch involuntarily\.$"
   name="wound_aff28"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff ("%1arm", "pierced_%1arm")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" [A-Z][a-z]+ \w+ fiercely into your jaw\, which shatters loudly in a bloody explosion of bone\, teeth and gore\.$"
   name="wound_aff43"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff ("head", "shatteredjaw")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" [A-Z][a-z]+ \w+ into the side of your head with a reverberating thunk of bone that rings in your ears\, causing you to stumble as everything becomes cloudy and the world spins\."
   name="wound_aff12"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff("head", {"dizziness", "confusion",})
affs:add_queue ("stun")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" [A-Z][a-z]+ \w+ into your back and you feel your spine shatter with a sickening crunch as all feeling in your limbs fades into horrifying numbness\.$"
   name="wound_aff42"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff ("gut", "severedspine")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" [A-Z][a-z]+ \w+ into your chest and blood foams up from your mouth\.$"
   name="wound_aff32"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff("chest", "puncturedlung")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" [A-Z][a-z]+ \w+ into your chest and you feel a rib snap like a twig under the force of (?:[hH]is|[hH]er) blow\.$"
   name="wound_aff45"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff("chest", "snappedrib")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" [A-Z][a-z]+ \w+ into your gut and heaves upwards\, rupturing your stomach which causes you to spit up a bloody bile\.$"
   name="wound_aff41"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff ("gut", "rupturedstomach")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" [A-Z][a-z]+ \w+ into your gut\, which opens up and pours blood in a pool at your feet\.$"
   name="wound_aff29"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff("gut", "slicedopengut")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" [A-Z][a-z]+ \w+ into your midriff and slices through\, drawing (?:[hH]is|[hH]er) blade out in a spray of crimson blood as your lungs wheeze to breathe\.$"
   name="wound_aff47"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff("chest", "phrenicnerve")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" [A-Z][a-z]+ \w+ off your (left|right) ear\, and blood fills your ear canal\, making you somewhat dizzy\.$"
   name="wound_aff30"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff("head", "severedear_%1")
affs:add_queue ("stun")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" [A-Z][a-z]+ \w+ open your gut\, and coils of bloody intestines spill out in a grotesque mass\. You begin to feel lightheaded as the world darkens around you\.$"
   name="wound_aff51"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff ("gut", "disemboweled")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" [A-Z][a-z]+ \w+ powerfully into your chest\, and blood sprays out of your nose and mouth\.$"
   name="wound_aff36"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff ("chest", "collapsedlungs")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" [A-Z][a-z]+ \w+ the tendon above your (left|right) heel\, and you scream in agony as it\'s completely severed\.$"
   name="wound_aff39"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>local side = "%1"
wounds:aff("%1leg", "tendon_"..side.."leg")
affs:prone({"prone", "tendon_"..side.."leg"})</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" [A-Z][a-z]+ \w+ through your chest\, gashing apart layers of skin to reveal your bloody ribcage\.$"
   name="wound_add8"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add("chest")
affs:prone ("stun") 
affs:bleeding (175)</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" [A-Z][a-z]+ \w+ your (left|right) (arm|leg)\, mangling a major artery that explodes blood in all directions\."
   name="wound_aff10"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff ("%1%2", "lacerated", "%1%2")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" [A-Z][a-z]+ \w+ your (left|right) (arm|leg)\, striking a major artery that splurts blood in all directions\.$"
   name="wound_aff1"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff ("%1%2", "artery", "%1%2")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" [A-Z][a-z]+ \w+ your forehead\, causing blood to flow into your eyes and coat your entire face\.$"
   name="wound_aff8"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff ("head", "artery", "head")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" [A-Z][a-z]+ \w+ your neck\, and blood fountains out in a thick spray\.$"
   name="wound_aff37"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff ("head", "slitthroat")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" [A-Z][a-z]+ \w+ your throat\, crushing your windpipe\.$"
   name="wound_aff48"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff ("head", "windpipe")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" [A-Z][a-z]+ cleanly \w+ off your scalp\, and blinding pain and blood reverberates across your entire head\.$"
   name="wound_aff34"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff ("head", "scalped")</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" [A-Z][a-z]+ plunges (?:[hH]is|[hH]er) blade through your gut\, and you are impaled viciously on the blade\.$"
   name="wound_aff38"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:add ("gut", 4)
affs:impaled()</send>
  </trigger>
  <trigger
   group="System_Wounds"
   match=" [A-Z][a-z]+ powerfully \w+ your (left|right) leg\, and blood fountains out in a thick spray\.$"
   name="wound_aff40"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>wounds:aff ("%1leg", "pierced_%1leg")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^([A-Z][a-z]+) gives [hH](?:is|er) weapon a vicious twist and withdraws it from your (gut|left leg|right leg) in a shower of blood\.$"
   name="bmrend"
   regexp="y"
   send_to="12"
   sequence="95"
  >
  <send>if "%2"=="gut" then
prompt:queue (function ()
affs:impaled (-1)
affs:bleeding (200)
end, "rend", true)
else
prompt:queue (function ()
affs:pinleg (-1)
affs:bleeding (200)
end, "rend", true)
end--if
system:poisons_on ()</send>
  </trigger>
  <trigger
   group="System_Poisons"
   match="^(?:Your enhanced gift of lichdom protects you from the affliction|You shrug off the effects of the poison|You laugh in the face of \w+|Your increased immunity allows you to easily resist \w+|The poison forces you to gag slightly\, but your superior constitution shrugs off the nausea|Your blood boils as it throws off the effects of the poison rushing through your veins)\.$"
   name="reject_shrug"
   regexp="y"
   send_to="12"
   sequence="99"
  >
  <send>affs:reject ("shrug")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Offense"
   match="^([A-Z][a-z]+) mutters and traces a cobalt blue pentagram in the air that remains hovering before (?:him|her)\.$"
   name="offense_pentagram"
   regexp="y"
   send_to="12"
   sequence="99"
  >
  <send>offense:rebound ("%1", nil, "circle")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^@system_target has been slain by .+?\.$"
   name="target_killed_bysomeoneelse"
   regexp="y"
   send_to="12"
   sequence="99"
  >
  <send>display.target_killed ()</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="System_Offense"
   match="^Suddenly @system_target\'s movements through the time stream are slowed\.$"
   name="target_aeoned"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="99"
  >
  <send>EnableTrigger ("target_aeoned", false)
flags:add_check ("target_aeoned")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   keep_evaluating="y"
   match="^The lyrical sound invokes a strange longing for [A-Z][a-z]+\.$"
   name="music_perfectfifthed"
   regexp="y"
   send_to="12"
   sequence="99"
  >
  <send>if not system:is_auto("truehearing") then
  system:set_auto ("truehearing", 1)
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^With a quick spin\, [A-Z][a-z]+ strikes your head with .+?\,? and the world around you spins\.$"
   name="tahtetso_raktiahsho_head"
   regexp="y"
   send_to="12"
   sequence="99"
  >
  <send>wounds:monk_attack (nil, "head")
affs:add ("blackout")
system:poisons_on ()</send>
  </trigger>
  <trigger
   group="System_Poisons"
   match="^You feel incredibly tired\, and fall asleep immediately\.$"
   name="poison_morphite2"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="99"
  >
  <send>affs:prone ("asleep")
affs:prone ()
affs:poison ()
defs:del_queue ("insomnia")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^You have slain @system_target\.$"
   name="target_killed"
   regexp="y"
   send_to="12"
   sequence="99"
  >
  <send>display.target_killed ()</send>
  </trigger>
  <trigger
   group="System_Poisons"
   match="^Your insomnia has cleared up\.$"
   name="poison_morphite1"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="99"
  >
  <send>defs:del_queue ("insomnia")
affs:poison ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your lungs fill with fluid as [A-Z][a-z]+ swings .+? in a circle before smashing one end into the side of your chest\, knocking the air from your lungs\. You gasp\, but only blood takes its place\.$"
   name="tahtetso_raktiahsho_chest"
   regexp="y"
   send_to="12"
   sequence="99"
  >
  <send>woundsmonk_attack (nil, "chest")
affs:add_queue("collapsedlungs")
system:poisons_on ()</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your mind relaxes and you feel as if you could sleep\.$"
   name="lostdef_insomniaherb"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="99"
  >
  <send>defs:lostdef ("insomnia", true)
system:cured ("insomnia", "silent")
system:del_cure ()
if flags:get ("smoking") or flags:get ("forced_smoking") then
 nocure:check ("smoke_coltsfoot", "shush")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ swings .+? in a circle before bringing it through your (left|right) (arm|leg)\. A horrific pain washes over you as (?:the bone snaps|(?:[hH]|[sS]h)e sweeps you off the ground\, the limb flailing in the air at an unnatural angle)\.$"
   name="tahtetso_raktiahsho_limb"
   regexp="y"
   send_to="12"
   sequence="99"
  >
  <send>wounds:monk_attack (nil, "%1%2")
affs:add_queue ("broken_%1%2")
if "%2" == "leg" then
  affs:prone()
end
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ swings .+? in a circle before smashing one end into the side of your (left|right) (arm|leg)\. You can only look away\, the distant pain telling you the limb has been mangled beyond use\.$"
   name="tahtetso_raktiahsho_limb1"
   regexp="y"
   send_to="12"
   sequence="99"
  >
  <send>wounds:monk_attack (nil, "%1%2")
affs:add_queue("mangled_%1%2")
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ swings .+? in a circle before smashing one end into the side of your gut\, echoing a sickening crack as you lose all control over your body\.$"
   name="tahtetso_raktiahsho_gut"
   regexp="y"
   send_to="12"
   sequence="99"
  >
  <send>wounds:monk_attack ({"Tahtetso",}, "gut")
affs:add_queue ("severedspine")
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="([A-Z][a-z]+) bleeds like a stuck pig upon the iron cross\."
   name="enemy_crucified2"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>for i=1,2 do
display.success ("Crucified", "%1")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="([A-Z][a-z]+) moves over to block the (\w+) exit\."
   name="track_warrior_block"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local dirs = {
["north"] = "N",
["south"] = "S",
["east"] = "E",
["west"] = "W",
["in"] = "IN",
["out"] = "OUT",
["northeast"] = "NE",
["northwest"] = "NW",
["southeast"] = "SE",
["southwest"] = "SW",
["up"] = "UP",
["down"] = "DOWN",}
for i=1,2 do
display.system ("Block "..dirs ["%2"]..", by %1")end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="([A-Z][a-z]+) stops you from moving that way\."
   name="track_warriorblocking"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>for i=1,2 do
display.system ("BLOCKED , by %1")end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match=".+?you no longer see the world through the sixth sense\.$"
   name="lostdef_sixthsense"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:del_queue ("sixthsense")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Ent"
   match="@system_target digs furiously at the ground and has soon burrowed out of sight\.$"
   name="burrow"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>display.enemy ("Burrowed!")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Ent"
   match="@system_target(?:.*)? is here\, sprawled on the ground\."
   name="sprawled"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function () display.prone () end, "sprawled")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Bashing"
   match="A green eyelash viper bites deeply into your arm. You feel the bones liquify and skin blacken\.$"
   name="bashing_greenviper_arm"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_custom ("greenviperarm", "salve", "apply mending to arms")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="Speedy as a crouching scorpion\, [A-Z][a-z]+ twists back violently and sends you sprawling\.$"
   name="nekotai_scorpion"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="With a look of agony on her face\, ([A-Z][a-z]+) manages to writhe [hH](?:er|im)self free of the cross\."
   name="enemy_uncrucified"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>for i=1,2 do
display.success ("UnCrux", "%1")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="You thrust a clawed fist towards @system_target, ripping at the air before (?:[Hh]is|[Hh]er) face\.$"
   name="raze2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
offense ["rebounds"] [GetVariable ("system_target")] = nil
end, "fist_norebound", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="[A-Z][a-z]+ begins to chant in a deep and baleful voice\, and an iron cross rises up from the ground before ([A-Z][a-z]+)\. Vicious spikes slam into ([hH](?:er|is)) flesh and nail \2 to the cross\. (?:Sh|H)e screams in pain and agony as blood is splattered in all directions\."
   name="enemy_crucified1"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>for i=1,2 do
display.success ("Crucified", "%1")
end</send>
  </trigger>
  <trigger
   group="System_WoundStatus"
   keep_evaluating="y"
   match="\(\s*(\d+)\)(?:\| )?\|\(\s*(\d+)\)$"
   name="wound_status5"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:set("rightleg", %1)
wounds:set("leftleg", %2)</send>
  </trigger>
  <trigger
   group="System_WoundStatus"
   keep_evaluating="y"
   match="\(\s*(\d+)\)\s+\**\s+\(\s*(\d+)\)\s+Larm"
   name="wound_status3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:set("rightarm", %1)
wounds:set("leftarm", %2)</send>
  </trigger>
  <trigger
   group="System_WoundStatus"
   keep_evaluating="y"
   match="\@ \(\s*(\d+)\) \@"
   name="wound_status1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:set("head", %1)</send>
  </trigger>
  <trigger
   group="System_WoundStatus"
   keep_evaluating="y"
   match="\|   \| \(\s*(\d+)\) \|   \|\s+Rarm"
   name="wound_status4"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:set("gut", %1)</send>
  </trigger>
  <trigger
   group="System_WoundStatus"
   keep_evaluating="y"
   match="\|\**\s*\| \(\s*(\d+)\) \|\**\s*\|\s+Gut"
   name="wound_status2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:set("chest", %1)</send>
  </trigger>
  <trigger
   group="System_Offense"
   match="^   (\w+\d+) \: (.+?) in your (?:left|right) hand\.$"
   name="wielding_id"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>offense:set_current ("%1", "%2")
prompt:unqueue ("wielding_start")
prompt:queue (function ()
  EnableTrigger ("wielding_start", false)
  EnableTrigger ("wielding_id", false)
  display.system ("Wielded Weapons Detected")
end, "wielding_id")</send>
  </trigger>
  <trigger
   group="System_Tracking"
   lines_to_match="7"
   match="^  Sex    \: (?:Male|Female)\s+Race      \: .+?\n  Level  \: (?:\d+) \(?:(\d+)\%\)\s+Rank      \: (?:.+?)\n  Health \: (?P&lt;ch&gt;\d+)\/(?P&lt;mh&gt;\d+)     Endurance \: (?P&lt;cend&gt;\d+)\/(?P&lt;mend&gt;\d+)\n  Mana   \: (?P&lt;cmana&gt;\d+)\/(?P&lt;mmana&gt;\d+)     Willpower \: (?P&lt;cwill&gt;\d+)\/(?P&lt;mwill&gt;\d+)\n  Ego    \: (?P&lt;cego&gt;\d+)\/(?P&lt;mego&gt;\d+)     Reserves  \: (?:\d+)\%\n  Karma  \: (?:\d+)\%           Esteem    \: (?:\d+)\%\nYou are ranked (?:\d+)\w\w in (?:Lusternia)?\.$"
   multi_line="y"
   name="oldscore"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt ["vitals"] ["c_health"] = %&lt;ch&gt;
prompt ["vitals"] ["max_health"] = %&lt;mh&gt;
prompt ["vitals"] ["c_endurance"] = %&lt;cend&gt;
prompt ["vitals"] ["max_endurance"] = %&lt;mend&gt;
prompt ["vitals"] ["c_mana"] = %&lt;cmana&gt;
prompt ["vitals"] ["max_mana"] = %&lt;mmana&gt;
prompt ["vitals"] ["c_willpower"] = %&lt;cwill&gt;
prompt ["vitals"] ["max_willpower"] = %&lt;mwill&gt;
prompt ["vitals"] ["c_ego"] = %&lt;cego&gt;
prompt ["vitals"] ["max_ego"] = %&lt;mego&gt;
fst:fire ("score", "now", "silent")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Herbs"
   match="^(.*) \(\w+\)\s+(\d+) left\.$"
   name="get_herbs"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>herbs:get (string.lower ("%1"), tonumber ("%2"))
</send>
  </trigger>
  <trigger
   back_colour="8"
   group="System_Tracking"
   match="^(.+)$"
   match_back_colour="y"
   match_bold="y"
   match_text_colour="y"
   name="pit_climbedout"
   regexp="y"
   send_to="12"
   sequence="100"
   text_colour="11"
  >
  <send>if string.find("%1", "In a pit at ") ~= 1 then
flags:del ("climbing")
fst:disable ("climbing")
fst:disable ("pit")
affs:del ("pit")
prompt:queue (function ()
display.cured ("pit")
display.free ()
end, "pitclimbedout")
EnableTrigger ("pit_climbedout", false)
end</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^(.+?) (?:breaks|crushes|pulverizes|smashes) your (left|right) (arm|leg)\.$"
   name="afftrample2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if affs:has ("prone") and string.lower("%1") == trampler then
  affs:add_queue("broken_%2%3")
end</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^(.+?) turns to ash in your mouth\, and you spit it out\.$"
   name="herbrejected"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>prompt:queue (function ()
act:offbal_herb ()
end, "offbalherb", true)</send>
  </trigger>
  <trigger
   group="System_Combat"
   match="^(?:.*)(Head|Chest|Gut|Lleg|Rleg|Larm|Rarm)\:(?:\s+)(\d+)"
   name="parry_sync"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>amnt = "%2"
if
amnt == "0"
then
amnt = nil
end --if
parry:set ("%1", amnt, "silent")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^(?:A )?[Pp]igwidgeon(?: bound in shadows)? is not following or leading you\.$"
   name="curepigwidgeon1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if flags:get ("todo_bal") == "pigwidgeon" then
todo:done ("pigwidgeon", "bal")
end
display.system ("Pigwidgeon Lost")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^(?:A \w+ tingle races through your body|The liquid bubbles within your mouth and then suddenly stops)\.$"
   name="drinking_orgpotion"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
flags:del ("orgpotion")
fst:disable ("orgpotion")
fst:enable ("ondef_orgpotion")
flags:add ("ondef_orgpotion")
end, "drinking_orgpotion", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^(?:A cold wind blows chill grey clouds in from the north\. The clouds circle around you\, suddenly constricting into a tight band of compressed air that makes it hard to breathe|[A-Z][a-z]+ raises [hH](?:is|er) arm and clenches [hH](?:is|er) fist\, causing air to swirl around you\. The wind suddenly tightens like painful\, constricting bands squeezing the breath from your body\, but you grit your teeth and persevere\, but you are left with more pressure than before)\.$"
   name="aff_aero_northwind"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send> affs:add_queue ("coil")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^(?:A rolling wave of fire sweeps over you|You are swarmed by several burning salamanders\, setting you ablaze)\.$"
   name="aff_pyro_ablaze"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("ablaze")
affs:burning()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^(?:A warm zephyr caresses your skin and clears your mind|You pass through a pink cloud and feel refreshed|A westerly breeze brings in a clean\,? sweet scent that invigorates your body)\.$"
   name="aero_cures"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:cures_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^(?:A|An) (?:.*) seems to dull as the oil of sharpness slides away\.$"
   name="lostdef_sharpness"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("sharpness", (defs:has ("sharpness") or 1)-1, "silent")
display.lostdef ("sharpness")
if defs:has ("sharpness") == 0 then
defs:lostdef ("sharpness", "silent")
end --if
</send>
  </trigger>
  <trigger
   group="System_Skills"
   lines_to_match="2"
   match="^(?:Knighthood|Cosmic|Elementalism|Hunting|Illusions|Kata|Music|Nature|Psionics|Rituals|Totems)(?:\s+)(Inept|Novice|Apprentice|Capable|Adept|Master|Gifted|Expert|Virtuoso|Fabled|Mythical|Transcendent)(?:\s+)(?:Melee|Willpower|Mysticism|Communion|Intellect|Performance|Arcana)\n(?:\s+)(Bonecrusher|Pureblade|Axelord|Blademaster|Celestialism|Nihilism|Aeromancy|Aquamancy|Geomancy|Pyromancy|Ecology|Tracking|Glamours|Phantasms|Nekotai|Ninjakari|Shofangi|Tahtetso|Necroscream|Shadowbeat|Starhymn|Wildarrane|Drudiry \(Crow\)|Druidry \(Stag\)|Wicca \(Moon\)|Wicca \(Night\)|Psychometablism|Telekinesis|Telepathy|Aeonics|Necromancy|Paradigmatics|Sacraments|Crow|Moon|Night|Stag)$"
   multi_line="y"
   name="skills_guild"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>skills:set (string.lower ("%2"), string.lower ("%1"))</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^(?:She|He) succeeds and carries you\, knocking you to the ground\.$"
   name="affathtackle2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function () display.warning ("Tackled " .. string.upper (flags:get_check ("tackled")) end, "afftackle2", true)
affs:prone ({"prone", "stun"})</send>
  </trigger>
  <trigger
   back_colour="8"
   group="System_Arena"
   match="^(?:The spectator stands of the Klangratch Tournies|The staging grounds of the Klangratch Tournies|The Glade of Preparation|The Glade of Observation|Grotto of Preparation|A somber gallery overlooking the Shadowvale|Midnight\'s gate|An iron platform above the Coliseum|Before the Glomborolum|Deep below the Syrinx Tower)\.$"
   match_back_colour="y"
   match_bold="y"
   match_text_colour="y"
   name="arena_end"
   regexp="y"
   send_to="12"
   sequence="100"
   text_colour="11"
  >
  <send>system:arena_done ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^(?:The very ground beneath your feet sends a jolt of pleasure through your body|The smoking ground beneath your feet sends a wave of nausea through your body)\.$"
   name="aff_cosmic1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("stun")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^(?:With|In) the Angkai style\, [A-Z][a-z]+ plunges .+? into your head\, painfully gouging out your eyes\.$"
   name="nekotai_angkai_head"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack ({"Nekotai",}, "head")
system:poisons_on ()
if not affs:has("peckedeye_left") then
  affs:add_queue("peckedeye_left")
else
  affs:add_queue("peckedeye_right")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^(?:You are bound and cannot move|You are shackled and cannot do that)\.$"
   name="sympshackled"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("shackled")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^(?:You heal some of your burns\,? but you still have (first|second|third|fourth) degree burns|You completely heal your burn damage)\.$"
   name="cureburns2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:burned ("%1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^(?:You smile sadistically as you imagine yourself running your sword through a helpless opponent\.|You stop for a moment to think about how great it would be if you were a god\.)$"
   name="sympdaydreaming"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("daydreaming")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^(?:You smile with pleasure as you ram your fist into your jaw|You drive a clenched fist into your gut|With the heel of your palm\, you smack yourself upside the head)\.$"
   name="sympmasochism2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("masochism")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^(?:[A-Z][a-z]+ grabs some glowing glyphs and throws them at you|Glowing glyphs in the air flare and explode in your face|Glowing glyphs drift in from the \w+ and explode in your face)\.$"
   name="affhex1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:reject_try ()
affs:add ("hex")</send>
  </trigger>
  <trigger
   group="System_Magiclist"
   match="^(?P&lt;id&gt;\d+)\s+(?P&lt;name&gt;.+?)\s+(?P&lt;status&gt;\w+)\s+(?P&lt;spell&gt;\w+|healing sc)\s+(?P&lt;charges&gt;\d+)\s+\d+$"
   name="magiclist_get"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local verbs = {
web = "point",
ignite = "point",
icewall = "point",
geyser = "point",
gust = "point",
protection = "read",
healing = "read",
disruption = "read",
tome = "read",
}
local encha
if string.find ("%&lt;spell&gt;", "healing") then
 encha = "healing"
elseif "%&lt;spell&gt;" == "waterbreat" then
 encha = "waterbreathe"
else
 encha = "%&lt;spell&gt;"
end
magic:assign (encha, "%&lt;id&gt;", "%&lt;charges&gt;", (verbs [encha] or "rub"))
if flags:get_check ("recharge_done") then
 if string.find ("%&lt;name&gt;", "Scroll") or string.find ("%&lt;name&gt;", "tome") then
  magic ["scrolls"] [encha] ["maxcharges"] = tonumber ("%&lt;charges&gt;")
 else
  magic ["enchantments"] [encha] ["maxcharges"] = tonumber ("%&lt;charges&gt;")
 end
 prompt:queue (function () flags:del_check ("recharge_done") end, "magiclist_get")
end</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="System_Offense"
   match="^(A hideous archdemon grabs the shoulders of @system_target and gutturally whispers something to (?:[Hh]im|[Hh]er) in a harsh and unknown language|A hideous archdemon forms a ball of darkness in his palm\, then hurls it at @system_target\, striking (?:[Hh]im|[Hh]er) full in the chest\. Shadowy tendrils burst forth and slither over (?:[Hh]is|[Hh]er) skin|Clenching his fists\, a hideous archdemon screams in rage at @system_target\, and a ball of fire erupts at (?:[Hh]is|[Hh]er) feet\, briefly enveloping (?:[Hh]im|[Hh]er)|A hideous archdemon vomits forth a stream of noxious fluid that strikes @system_target\, coating [Hh](?:im|er) with a thick green slime|With a cold smile\, a hideous archdemon digs his claws into the flesh of @system_target\, who screams in agony)\.$"
   name="demon_attacked"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>EnableTrigger ("demon_attacked", false)
local msgs = {
 ["vomits forth a stream of noxious fluid"] = "Gorgulu",
 ["With a cold smile"] = "Nifilhema",
 ["screams in rage"] = "Asthorath",
 ["Shadowy tendrils burst forth and slither over"] = "Luciphage",
 ["and gutturally whispers something to"] = "Baalphegar",}
for k, v in pairs (msgs) do
 if string.find ("%0", k) then
  offense:demon ("%0", v)
  break
 end
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^(You must have two(?: good)? legs to do that|Both of your legs are crippled and thus you cannot carry out that action)\.$"
   name="symptwolegs"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
  system:check_limbs ("legs")
if flags:get ("prone") and string.find("%1", "must") then
  fst:fire ("prone", "now")
end
end, "symptwolegs", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^([A-Z][a-z]+) applies precise pressure and burning agony shoots up your (chest|gut|head|left arm|left leg|right arm|right leg) as it snaps\.$"
   name="kata_snap_grapple_pop"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local part = string.gsub("%1", " ", "")
if part == "chest" then
  affs:add_queue ("brokenchest")
elseif part == "head" then
  affs:add ("blackout")
elseif part ~= "gut" then
  affs:add_queue ("broken_"..part)
end
prompt:queue (function ()
 affs:add ("grappled", nil, "%1")
end, "ungrappled_%1", true)
wounds:monk_attack ({"Nekotai", "Ninjakari", "Shofangi", "Tahtetso",}, part, 300)</send>
  </trigger>
  <trigger
   custom_colour="17"
   enabled="y"
   group="System_Ent"
   match="^([A-Z][a-z]+) begins to bear down on you\, whirling .*?\.$"
   name="instas_decap2"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="deeppink"
  >
  <send>for i=1,5 do
display.warning ("%1 will DECAPITATE - WEB %1 or MOVE!")
end
prompt:add_alert ("decap2_%1", "Decap2 %1", 4, -1)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^([A-Z][a-z]+) bows ([hH](?:is|er)) head and closes \2 eyes\, hooking \2 finger in a terrible wrenching motion as your insides twist and turn in a hideously contorted dance\.$"
   name="affaurawarp"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--It prevents cures from working; all cures?
affs:add_queue("aurawarp")
--failsafe:exec("aurawarp", 10)
for i=1,5 do
 display.warning ("Aurawarp")
end
prompt:add_alert ("aurawarp", "Aurawarp", 10)</send>
  </trigger>
  <trigger
   custom_colour="17"
   enabled="y"
   group="System_Ent"
   match="^([A-Z][a-z]+) calls down a beam of brilliant light upon you\.$"
   name="judgement1"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="deeppink"
  >
  <send>for i=1,5 do
display.warning ("%1 JUDGEMENT - Phase 1")
end
prompt:add_alert ("judge1_%1", "Judge_1 %1", 4, -1)</send>
  </trigger>
  <trigger
   custom_colour="17"
   enabled="y"
   group="System_Ent"
   match="^([A-Z][a-z]+) chants and a column of topaz light appears before (?:him|her)\. (?:He|She) points at you and the column of light obediently moves to envelop you\, a voice whispering in your mind that you will be judged\.$"
   name="judgement2"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="deeppink"
  >
  <send>for i=1,5 do
display.warning ("%1 JUDGEMENT - PHASE 2")
end
prompt:add_alert ("judge_2", "Judge_2 %1", 4, -1)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^([A-Z][a-z]+) darts out and viciously pecks you with [hH](?:is|er) beak nose\.$"
   name="affnosepeck"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:damaged ()
affs:add_queue ("bleeding", 50)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^([A-Z][a-z]+) drives (.+?) deep into your chest\, hooking (?:it|them) in your ribs\.$"
   name="shofangi_grapple_chest"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("grappled", "chest", "%1")
prompt:unqueue ("ungrappled_%1")
wounds:monk_attack ({"Shofangi",}, "chest", nil, "%2")
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^([A-Z][a-z]+) firmly holds you in place with an iron\-strong grip\.$"
   name="kata_hold"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("grappled", "body", "%1", "hold")
prompt:unqueue ("ungrappled_%1")</send>
  </trigger>
  <trigger
   custom_colour="17"
   enabled="y"
   group="System_Ent"
   match="^([A-Z][a-z]+) flings a tarot card at you and upon impact\, it disappears\. An ominous silence overtakes your surroundings\.$"
   name="soulless_flung"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="deeppink"
  >
  <send>for i=1, 5 do
display.warning ("SOULLESS - Run, run, run, run!")
end
prompt:add_alert ("soulless_%1", "Soulless %1", 8, -1)
soulless ["%1"] = nil</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^([A-Z][a-z]+) holds the pulsating stone aloft just as it detonates in a soundless explosion of white light\.$"
   name="harmonics_balestone"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTrigger("harmonics_balestonefire", true)
prompt:queue(function () EnableTrigger("harmonics_balestonefire", false) end)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^([A-Z][a-z]+) impales (.+?) deep into your gut\, which spills forth blood\.$"
   name="shofangi_grapple_gut"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("grappled", "gut", "%1")
prompt:unqueue ("ungrappled_%1")
wounds:monk_attack ({"Shofangi",}, "gut", nil, "%2")
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^([A-Z][a-z]+) is already an enemy\.$"
   name="enemying3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (flags:get ("todo_free") or "") == "enemying" then
 adven:enemied ("%1")
elseif flags:get ("enemying") then
 todo:done ("enemying", "free")
 system:set_enemy ("%1")
 flags:del ("enemying")
end--if</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^([A-Z][a-z]+) is an ally\.$"
   name="get_allies"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>adven:set_ally ("%1")</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^([A-Z][a-z]+) is an enemy\.$"
   name="get_enemies"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>adven:set_enemy ("%1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^([A-Z][a-z]+) is now one of your enemies\.$"
   name="enemying1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (flags:get ("todo_free") or "nil") == "enemying" then
 adven:enemied ("%1")
elseif flags:get ("enemying") then
 flags:del ("enemying")
 adven:set_enemy ("%1")
end--if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^([A-Z][a-z]+) locks your (chest|gut|head|left arm|left leg|right arm|right leg) in a solid grapple\.$"
   name="kata_grapple"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local part = string.gsub("%2", " ", "")
affs:add_queue ("grappled", part, "%1")
prompt:unqueue ("ungrappled_%1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Ent"
   match="^([A-Z][a-z]+) moves in to engage you\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>display.warning ("%1 ENGAGED!")
prompt:add_alert ("%1_engaged", "%1 Engaged", 5)</send>
  </trigger>
  <trigger
   custom_colour="17"
   enabled="y"
   group="System_Ent"
   match="^([A-Z][a-z]+) points at the tainted earth beneath your feet\, snarling with a look of madness on (?:her|his) face\. The ground begins to tremble\.$"
   name="chasm1"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="deeppink"
  >
  <send>for i=1,5 do
display.enemy ("%1 is going for CHASM!")
end
prompt:add_alert ("chasm1_%1", "Chasm1 %1",4, -1)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^([A-Z][a-z]+) presses [hH](?:is|er) palms together and stares at the ring of rubies spinning around your head\. The rubies speed up and you are blinded by the brilliant crimson blaze that rips apart your face and causes time to slow down\, magnifying the agony\.$"
   name="harmonics_shatterplex"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs.del_queue("rubies")
flags:damaged()
affs:add_queue ("insawarped", "timewarped", 50)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^([A-Z][a-z]+) punches ([hH](?:is|er)) fist in the air\, and an explosion of light and sound resounds around [hH](?:im|er)\. Holding streams of wavering bands of energy in \2 hand\, \1 whips them back and forth\, sending shockwaves reverbating through the air\.$"
   name="aeonics_timequake"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTrigger("aeonics_timequakehit", true)
prompt:queue(function () EnableTrigger("aeonics_timequakehit", false) end, "aeonics_timequake")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^([A-Z][a-z]+) quickly flings a tarot card at you\, and you feel unreasonable lust for (?:[Hh]im|[Hh]er)\.$"
   name="afftarotlust"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("lust", "%1")</send>
  </trigger>
  <trigger
   custom_colour="17"
   enabled="y"
   group="System_Ent"
   match="^([A-Z][a-z]+) raises .*? over [hH](?:is|er) head and begins to swing it in a wide circle\, gaining speed as (?:[sS]h|[hH])e goes\.$"
   name="instas_decap1"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="deeppink"
  >
  <send>for i=1,5 do
display.warning ("%1 will DECAPITATE - Phase One")
end--for
prompt:add_alert ("decap1_%1", "Decap1 %1", 4, -1)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^([A-Z][a-z]+) rakes you across the throat with [hH](?:is|er) claws\.$"
   name="affhandsclaw"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("masked")
affs:add_queue ("bleeding", 70)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Ent"
   match="^([A-Z][a-z]+) releases (?:[hH]er|[hH]is) staff\, which hovers in the air before (?:[hH]er|[hH]is)\. (?:She|He) raises up (?:[hH]er|[hH]is) arms\, causing gouts of noxious black clouds to spew up from the ground and surround a twisted staff in a seething column\.$"
   name="pollute1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>display.enemy ("%1 Pollute FIRST!")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^([A-Z][a-z]+) releases [hH](?:is|er) fierce grapple on you\.$"
   name="kata_released"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
 affs:add ("grappled", nil, "%1")
end, "ungrappled_%1", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Ent"
   match="^([A-Z][a-z]+) rubs a tarot card on your arm\. A cold jolt travels through your being\.$"
   name="soulless_setup"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>soulless = soulless or {}
soulless ["%1"] = (soulless ["%1"] or 0)+1
if soulless ["%1"] == 7 then
 for i=1,5 do
  display.warning ("Soulless Coming")
 end --for
 prompt:add_alert ("soullesscoming_%1", "Soulless Coming", 3)
 prompt:del_alert ("soullessrubs_%1")
else
 display.system ("%1 has "..tostring (soulless ["%1"]).." rubs")
 prompt:add_alert ("soullessrubs_%1", "%1 "..tostring (soulless ["%1"]).." rubs", 3)
end--if </send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^([A-Z][a-z]+) screams at you\, \&quot;[^a-z]+\!\&quot;$"
   name="affthroatscream"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone ("stun")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^([A-Z][a-z]+) sinks [hH](?:is|er) fangs into your neck\, and you feel yourself drained of blood and energy.$"
   name="affmouthbite"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:damaged()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^([A-Z][a-z]+) slashes your (chest|gut|head|left arm|left leg|right arm|right leg) with such force that the blades warble\, creating an earsplitting screech that whistles through the air\.$"
   name="nekotai_kaife"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local part = string.gsub("%2", " ", "")
wounds:monk_attack ({"Nekotai",}, part, nil, "%1")
flags:add_check ("recklessness")
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^([A-Z][a-z]+) slings an? (\w+) rune and an? (\w+) rune at you\, hitting you in the chest\.$"
   name="affrunes2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:runes ("%2", "%3", "%1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^([A-Z][a-z]+) slings an? (\w+) rune at you\, hitting you in the chest\.$"
   name="affrunes1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:runes ("%2", nil, "%1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^([A-Z][a-z]+) slugs you in the jaw with [hH](?:is|er) enormous fist\.$"
   name="affhandscrush"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:damaged ()
affs:add_queue ("bleeding", 70)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^([A-Z][a-z]+) smashes a chunk of dark rock at [hH](?:is|er) feet and red and black smoke roils about [hH](?:im|er)\.$"
   name="harmonics_malefactgem"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTrigger ("affmalefactgem", true)
prompt:queue(function () EnableTrigger ("affmalefactgem", false) end, "harmonics_malefactgem")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Ent"
   match="^([A-Z][a-z]+) stomps on the ground and (?:[hH]er|[hH]is) eyes shine with an eerie red glow\.$"
   name="geo_meld"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>display.enemy ("%1 melded Taint!")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^([A-Z][a-z]+) swiftly grabs you and hurls you forcefully to the ground\.$"
   name="kata_throw"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTriggerGroup ("System_NekotaiMods", false)
prompt:queue (function () EnableTriggerGroup ("System_NekotaiMods", false)end, "kata_throw")
prompt:queue (function ()
 affs:add ("grappled", nil, "%1")
end, "ungrappled_%1", true)
affs:prone()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   lines_to_match="2"
   match="^([A-Z][a-z]+) swoops down from the skies towards you\, and grasps you firmly with [hH](?:is|er) talons\.\n(?:He|She) swiftly lifts you\, kicking and screaming\, into the skies\.$"
   multi_line="y"
   name="affcrowhoist"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("hoisted")
display.warning("Hoisted by %1!")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^([A-Z][a-z]+) tackles your legs and attempts to carry you off to the (\w+)\.$"
   name="affathtackle1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>display.warning ("Tackled by " .. string.upper("%1"))
flags:add_check ("tackled", string.upper("%2"))
EnableTrigger("affathtackle2", true)
prompt:queue (function ()
flags:del_check ("tackled")
EnableTrigger("affathtackle2", false)
end, "tackled")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^([A-Z][a-z]+) throws back ([hH](?:is|er)) head and blows a stream of slime out of \2 nose and onto you\.$"
   name="affnoseslime"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("ectoplasm")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^([A-Z][a-z]+) throws down the gauntlet and issues a formal challenge to face (?:her|him) in single combat\. ACCEPT [A-Z]+ in order to do so\.$"
   name="arena_challenged"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
EnableAlias ("arena_accept_", true)
fst:enable ("arena")
display.system ("Challenged by %1")
end, "arena_challenged", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^([A-Z][a-z]+) twists your (left arm|left leg|right arm|right leg) and (left arm|left leg|right arm|right leg) with .+?\, (?:locking (?:it|them) up|pinning (?:it|them) tightly)\.$"
   name="shofangi_grapple_limb"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local part1 = string.gsub("%2", " ", "")
local part2 = string.gsub("%3", " ", "")
affs:add_queue ("grappled", part1, "%1")
affs:add_queue ("grappled", part2, "%1")
wounds:monk_attack (nil, part1)
wounds:monk_attack (nil, part2)
system:poisons_on ()
EnableTriggerGroup ("System_ShofangiMods", true)
prompt:queue (function ()
 EnableTriggerGroup ("System_ShofangiMods", false)
end, "shofangi_grapple_limb")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^([A-Z][a-z]+) whispers into [hH](?:is|er) cupped hands\,? and then releases a fluttering madfly\,? which buzzes over to you\.$"
   name="affsmadfly"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:add_check ("madfly")
fst:enable ("madfly")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^([A-Z][a-z]+) wraps .+? about [hH](?:is|er) wrists and wrenches it violently from you\, tearing skin and mincing flesh\.$"
   name="ninjakari_yank"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>for k, p in ipairs({ "chest", "gut", "head", "leftarm", "leftleg", "rightarm", "rightleg", "body" }) do
  if affs ["grapples"] [p] == "%1" then
    wounds:monk_attack (nil, p, nil, "%1")
  end
end
prompt:queue (function ()
 affs:add ("grappled", nil, "%1")
end, "ungrappled_%1", true)
EnableTriggerGroup ("System_NinjakariMods", true)
prompt:queue (function ()
EnableTriggerGroup ("System_NinjakariMods", false)
end, "ninjakari_wrench")
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Offense"
   match="^([A-Z][a-z]+)\'s aura of weapons rebounding disappears\.$"
   name="offense_rebound_down"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>offense:rebound ("%1", true)</send>
  </trigger>
  <trigger
   custom_colour="17"
   enabled="y"
   group="System_Ent"
   match="^([A-Z][a-z]+)\'s finger trembles and (?:she|he) bares (?:her|his) teeth in a hideous grimace\. A small crack appears in the ground beneath you\!$"
   name="chasm2"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="deeppink"
  >
  <send>for i=1,5 do
display.enemy ("%1 WILL CHASM")
end
prompt:add_alert ("chasm2_%1", "Chasm2 %1", 4, -1)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^([A-Z][a-z]+)\'s presence prevents you from curing your (bedeviling sickness|warped aura)\.$"
   name="affhealfail"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local aff = "Bedevil"
if "%2" == "warped aura" then
   aff = "AuraWarp"
   for i=1,5 do
  display.warning ("Aurawarp")
 end
 prompt:add_alert ("aurawarp", "Aurawarp", 10)
end
display.warning ("Move away from %1 to cure " .. aff)</send>
  </trigger>
  <trigger
   group="System_Pipel"
   match="^(\d+)\s+(?:.*)?pipe(?:.*)?\s+(empty)\s+0\s+(Unlit|Lit)$"
   name="pipes_get_empty"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>pipes:assign ("%2", "%1")</send>
  </trigger>
  <trigger
   group="System_Pipel"
   match="^(\d+)\s+(?:.*)?pipe(?:.*)?\s+(myrtle|faeleaf|coltsfoot)\s+(\d+)\s+(Lit|Unlit)$"
   name="pipes_get_assigned"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>pipes:assign ("%2", "%1", "%3", "%4")</send>
  </trigger>
  <trigger
   group="System_Offense"
   match="^(\d.+?)$"
   name="deleteforms"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send ("kata forget %1")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^(minorly|moderately|majorly|massively) warped in time\.$"
   name="diag176"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local v = affs ["timewarped"] ["number"]
if v &lt; affs ["timewarped"] ["%1"] then
  if "%1" == "minorly" then
    affs:insawarped ("timewarped", (affs ["timewarped"] ["moderate"] - affs ["timewarped"] ["slight"]) / 2 +affs ["timewarped"] ["slight"])
  elseif "%1" == "moderately" then
    affs:insawarped ("timewarped", (affs ["timewarped"] ["major"] - affs ["timewarped"] ["moderate"]) / 2 + affs ["timewarped"] ["moderate"])
  elseif "%1" == "majorly" then
    affs:insawarped ("timewarped", (affs ["timewarped"] ["massive"] - affs ["timewarped"] ["major"]) / 2 + affs ["timewarped"] ["major"])
  else
    affs:insawarped ("timewarped", 60)
  end
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^.+? caws and spits a glob of black phlegm into your face\.$"
   name="affbeastblacklung"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("blacklung")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^.+? flaps its wings a few times and lifts you into the skies\.$"
   name="ondef_flyingmount"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:add_queue ("flying")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^.+? flings a cobalt blue disc at you\, which envelops you in a field of crackling energy\.$"
   name="angel_shakiniel"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--paranoia, anorexia, dementia, hypochondria, claustrophobia
affs:add_queue ("masked", 1)
prompt:add_alert ("angel", "Angel", 8, -1)
prompt:queue (function ()
 affs:add_custom ("shakiniel", "herb", "eat pennyroyal")
end, "affs_add_shakiniel", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   lines_to_match="2"
   match="^.+? floats around you\, then dives at you\.\nIt painfully stabs you\!$"
   multi_line="y"
   name="afftelekdagger"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^.+? forms a ball of darkness in [hH](?:is|er) palm\, then hurls it at you\, striking you full in the chest\. Shadowy tendrils burst forth and slither over your skin\.$"
   name="demon_luciphage"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
 affs:masked (1)
 prompt:add_alert ("demon", "Demon", 8, -1)
end, "demon_luciphage1", true)
prompt:queue (function ()
 if string.find (prompt ["status"], "p") then
  affs:add ("paralysis")
  affs:masked (-1)
 end
end, "demon_luciphage2", true)
affs:add_queue ("masked", 1)
</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^.+? gazes intently at you\, and you feel yourself drawn into [hH](?:is|er) eyes\, which swirl about in a kaleidoscopic array of swirling colours\. Your vision slowly fades into nothing but curiously floating (.+?) spots\.$"
   name="affbeasthypno"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:hypnogaze("%1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^.+? grabs your shoulders and gutturally whispers into your mind\. Though the language is harsh and unknown\, the words twist in your brain over and over\.$"
   name="affdemon_baalphegar"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Confusion (penny), Dementia (penny), Epilepsy (focus mind, kombu), Paranoia (penny), and Stupidity (penny)
prompt:add_alert ("demon", "Demon", 8, -1)
affs:add_queue ("masked", 1)
affs:add_queue ("add_custom", "demon_baalphegar", "focus", "focus mind")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^.+? gracefully cuts (.+?) across your head with an Angkhai arc\, slicing open your throat in three crimson streaks\.$"
   name="nekotai_angkhai_head"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack ({"Nekotai"}, "head", 0, "%1")
system:poisons_on ()
affs:add_queue({"slitthroat", "relapsing"})</send>
  </trigger>
  <trigger
   group="System_TahtetsoMods"
   match="^.+? grinds into your (left|right) (arm|leg)\, crushing the bones\.$"
   name="tahtetso_rakto_limb"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("broken_%1%2")</send>
  </trigger>
  <trigger
   group="System_TahtetsoMods"
   match="^.+? grinds into your gut\, tearing through your nerve centers\.$"
   name="tahtetso_rakto_gut"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone("paralysis")</send>
  </trigger>
  <trigger
   group="System_TahtetsoMods"
   match="^.+? grinds into your jaw\, crushing the bones\.$"
   name="tahtetso_rakto_head"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("brokenjaw")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^.+? hits nothing but air as you swing it at @system_target\.$"
   name="miss1"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.miss ()</send>
  </trigger>
  <trigger
   group="System_NinjakariMods"
   match="^.+? loops about your head\, then suddenly pulls taut\, fracturing your skull with a sickening crunch\.$"
   name="ninjakari_fracture_head"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("fracturedskull")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^.+? makes a sudden gesture at you and a bolt of black energy shoots out from (?:[hH]is|[hH]er) outward stretched palm and shatters your magical shield of protection\.$"
   name="lostdef_shieldnullify"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ("shield")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^.+? mutters and pokes (?:[hH]is|[hH]er) index finger towards you and makes a hooking gesture\. Invisible energies slam against you\, ripping apart your magical shield of protection\.$"
   name="lostdef_shieldvoid"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ("shield")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^.+? rears back and unhinges [hH](?:is|er) jaws\, (?:breath|blast)ing .+? at you\, and you scream .+?\.$"
   name="affbeastminorbreath"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:add_check ("recklessness")</send>
  </trigger>
  <trigger
   group="System_NinjakariMods"
   match="^.+? rips from your throat with such force that bits of flesh fly into the air and your head almost spins around in a full circle\.$"
   name="ninjakari_constrict"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add ("blackout")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Bashing"
   match="^.+? sovereigns spill(?:s)? from the corpse\.$"
   name="getgold"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>todo:add ("bal", "gold_drop", "get gold")
EnableTrigger ("bashing_nogold", true)
EnableTrigger ("gotgold", true)</send>
  </trigger>
  <trigger
   group="System_NinjakariMods"
   match="^.+? spins you in a circle so fast that you are left reeling and nauseous\.$"
   name="ninjakari_bhaddogho"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue({"dizziness", "confusion"})
affs:prone("stun")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^.+? stabs you with a deadly stinger attached to its bone armour\.$"
   name="afffamiliarsting"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:poisons_on()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Aetherhunt"
   match="^.+? suddenly explodes\!$"
   name="gunner_down"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if gunner_target then
flags:add ("retarget")
else
EnableTrigger ("gunner_onbal", false)
EnableTrigger ("gunner_down", false)
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^.+? vomits forth a stream of noxious fluid that strikes you\, coating you with a thick green slime\.$"
   name="affdemon_gorgulu"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:add_alert ("demon", "Demon", 8, -1)
affs:add_queue ("masked", 2)</send>
  </trigger>
  <trigger
   group="System_NinjakariMods"
   match="^.+? wraps tightly round your gut\, crushing your stomach and bringing up its contents in a flood of blood\-flecked vomit\.$"
   name="ninjakari_vomit"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("vomiting")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^.+?\'s eyes shoot forth beams of holy light that strike you and cause your very being to quake\.$"
   name="angel_elohora"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>-- angel: - addiction(galingale, focusmind), paralysis(focusbody), powersink(reishi, phlegmatic), luminous, Stun+Sprawled - (newline)"The overwhelming power of a celestial archangel forces you to humbly kneel down." (Kneel)
affs:add_queue ("masked", 1)
prompt:add_alert ("angel", "Angel", 8, -1)
affs:prone ("paralysis")
prompt:queue (function ()
if not affs:has ("paralysis") then
  affs:add_custom ("elohora", "herb", "eat galingale")
end--if
end, "affs_add_elohora", true)</send>
  </trigger>
  <trigger
   group="System_Offense"
   match="^.+?demon\#(\d+)"
   name="demon_getid"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable ("demon_id", "%1")
prompt:unqueue ("nodemonent")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^.+?stag.+? scoops you up with its antlers and tosses you into the trees\.$"
   name="affdruidtrees3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("in_trees")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Tracking"
   match="^@system_target (?:prepares|begins) to (?:tumble|roll|somersault) to(?:wards)? the (\w+)\.$"
   name="tumbling_"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>for i=1,2 do
display.enemy ("Tumble %1")
end
prompt:add_alert ("tumble", "Tumble %1", 6)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Ent"
   keep_evaluating="y"
   match="^@system_target chews an arnica bud\, then spreads it on (?:[Hh]er|[Hh]is) (arms|legs|chest|gut|head)\.$"
   name="arnica_curing"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>if "%1" == "head" then
display.mult ("black", "yellow", "ARNICA")
else
display.enemy ("Arnica to "..string.upper ("%1"))
end --if</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Ent"
   match="^@system_target closes (?:[Hh]er|[Hh]is) eyes\, curls up into a ball and falls asleep\.$"
   name="sleeping"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>display.mult ("white", "red", "ASLEEP")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Ent"
   match="^@system_target closes [hH](?:is|er) eyes and clenches [hH](?:is|er) fists\, audibly grinding [hH](?:is|er) teeth\. A sparkling sheen briefly runs over [hH](?:is|er) skin\, and [hH](?:is|er) eyelids flicker open at lightning speed\.$"
   name="quickening"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>for i=1,3 do
display.enemy ("QUICKENING")
end
prompt:add_alert ("t_quick", "T_Quick", 12, -1)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Tracking"
   match="^@system_target crackles with blue energy that wreathes itself about (?:[Hh]is|[Hh]er) limbs\.$"
   name="restore_"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>for i=1,2 do
display.enemy ("restoring")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   match="^@system_target deftly manages to remain standing\.$"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.mult ("crimson", "", "-&gt; BALANCING")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Ent"
   match="^@system_target disappears in a blur of motion\.$"
   name="target_starleaper"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>for i=1,3 do
display.enemy ("Starleaper")
end
prompt:add_alert ("starleaper_"..GetVariable ("system_target"), "Starleaper", 3)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^@system_target ducks under .+? as you take a swing at (?:[Hh]im|[Hh]er)\.$"
   name="dodged2"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.miss ()</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Ent"
   match="^@system_target eats (.*)\.$"
   name="herb_curing"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>local herbs={
  ["a sparkleberry"] = "SPARKLIES",
  ["a yarrow sprig"] = "YARROW",
  ["a wormwood stem"] = "WORMWOOD",
  ["a reishi mushroom"] = "REISHI",
  ["a bunch of pennyroyal"] = "PENNYROYAL",
  ["a bog myrtle leaf"] = "MYRTLE",
  ["a sprig of marjoram"] = "MARJORAM",
  ["kombu seaweed"] = "KOMBU",
  ["a kafe bean"] = "KAFE",
  ["a horehound blossom"] = "HOREHOUND",
  ["a stem of galingale"] = "GALINGALE",
  ["a stalk of faeleaf"] = "FAELEAF",
  ["a piece of black earwort"] = "EARWORT",
  ["a sprig of chervil"] = "CHERVIL",
  ["a calamus root"] = "CALAMUS",
}
if herbs ["%1"] then
 display.enemy (herbs ["%1"])
else
 ColourNote ("silver", "", "%0")
end--if</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Ent"
   match="^@system_target has writhed free of (?:[Hh]er|[Hh]is) (shackles|ropes|entanglement|vines)\.$"
   name="ungrappled"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.enemy ("!!!==[[ %1 ]]==!!!")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^@system_target jerks as the iron cross pulls [Hh](?:is|er) limbs\, resulting in a sickening crunch of bones\.$"
   name="crucify_pullinglimbs"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>for i=1,3 do
display.enemy ("Pulling Limbs")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^@system_target jumps aside\, avoiding your blow\.$"
   name="dodged1"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.miss ()</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Ent"
   match="^@system_target kneels onto one knee\, demonstrating (?:[Hh]is|[Hh]er) humility and respect\.$"
   name="kneeling"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.prone ()</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   match="^@system_target loses (?:[Hh]is|[Hh]er) grip on .+?\.$"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.mult ("violet", "", "DISARMED")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Ent"
   match="^@system_target mutters and clenches ([hH](?:is|er)) fists which begin to glow\. The glow spreads across \1 body and burns away the bonds that tie [hH](?:im|er)\.$"
   name="enemy_summer"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.enemy ("!!!==[[ Summer ]]==!!!")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Tracking"
   match="^@system_target regains consciousness with a start\.$"
   name="conscious_"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>for i=1,2 do
display.enemy ("Conscious")
end
prompt:del_alert ("unconscious")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Ent"
   lines_to_match="2"
   match="^@system_target rubs .+? and it begins to glow with a pulsating light\.\nWarm water showers down upon ([Hh](?:im|er))\, and (?:[hH]e|[sS]he) scrubs .+? trying to wash away .+?\.$"
   multi_line="y"
   name="cleanse_curing"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.mult ("pink", "", "-CLEANSE-")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Ent"
   match="^@system_target stands up and stretches (?:his|her) arms out wide\.$"
   name="prone_curing"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.mult ("brown", "pink", "STANDING")
display.mult ("brown", "pink", "STANDING")
prompt:del_alert ("t_asleep", "T_asleep")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Tracking"
   match="^@system_target suddenly starts scratching at an itch like mad\.$"
   name="itching_"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>ColourNote ("yellow", "", "     _   ")
ColourNote ("yellow", "", "   _| |_ ")
ColourNote ("yellow", "", "  |_   _|")
ColourNote ("yellow", "", "    |_|  ")
Note ()
display.enemy ("itching")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Ent"
   match="^@system_target takes a drink from (?:.*)\.$"
   name="elixir_curing"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.enemy ("DRINKING")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Ent"
   match="^@system_target takes some salve from a vial and rubs it on (?:[Hh]er|[Hh]is) (legs|arms|gut|chest|head)\.$"
   name="salve_curing"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.enemy (string.upper ("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^@system_target\'s eyes close suddenly as (?:[hH]e|[Ss]he) falls asleep\.$"
   name="falling_asleep"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>for i=1,2 do
  display.enemy ("Asleep")
end
prompt:add_alert ("t_asleep", "T_asleep", 4)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Tracking"
   match="^@system_target\'s legs collapse under (?:[Hh]im|[Hh]er) as (?:[Hh]e|[Ss]he) suddenly passes out\.$"
   name="unconscious_"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>for i=1,2 do
display.enemy ("Unconscious - The Void Awaits")
end
prompt:add_alert ("unconscious", "Unconscious", 8)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A ball of wild fire smashes into you\, searing your flesh\.$"
   name="aff_pyro_wildfire"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:burning()
EnableTrigger("aff_pyro_ashlimb", true)
prompt:queue (function () EnableTrigger("aff_pyro_ashlimb", false) end, "aff_pyro_wildfire")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A banshee(?: bound in shadows)? stares at you\, then suddenly emits a high\-pitched screech at you\. The soundwaves pierce into your very being\, weakening you in both body and mind\.$"
   name="affbanshee"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>display.warning ("Watch mana!")
flags:add_check ("recklessness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A barghest lifts his massive head and lets forth a blood curdling howl that pierces through the air\.$"
   name="affbarghest"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone("paralysis")</send>
  </trigger>
  <trigger
   group="System_Aetherhunt"
   match="^A battle turret whirrs quietly\, ready to be used once again\.$"
   name="gunner_onbal"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if flags:get ("retarget") then
Send ("turret target creature "..gunner_target)
flags:del ("retarget")
else
Send ("turret fire")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Ent"
   match="^A beam of moonlight comes down from the sky and bathes (you|[A-Z][a-z]+) in light\.$"
   name="moonbeaming"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>if "%1"=="you" then
display.warning ("Someone Is MOONBEAMING To You")
else
display.mult ("black", "gold", "MOONBEAMING")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A billowing black cloud rises up from the ground at your feet\,? as a glittering butterfly flutters away\. The thick vapour clings to you and fills your nostrils with a foul stench\.$"
   name="aff_para_butterfly3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue({ "pox", "scabies", "vomiting", "worms" })</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A biting cold seeps deep into your bones from the frigid water\, giving you massive hypothermia\.$"
   name="affaquacold3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue("fire")
affs:prone("frozen")
affs:del("ablaze")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A biting cold seeps deep into your bones from the frigid water\, making your teeth chatter\.$"
   name="affaquacold2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue("fire")
affs:add_queue("chills")
affs:del("ablaze")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A biting cold seeps deep into your skin\.$"
   name="affaquacold1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue("fire")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A black shadow materialises in the air before [A-Z][a-z]+ and then quickly strikes you\.$"
   name="affnightshadowstrike"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:add_check ("recklessness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A blank look of meditation crosses ([A-Z][a-z]+)\'s eyes\, and suddenly an unflinching rage builds within their roaring depths\. The intensity of [hH](?:is|er) anger threatens to consume you as (?:[sS]h|[hH])e powerfully glides into a battle stance\.$"
   name="bullrage"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.warning ("BULLRAGE - %1")
prompt:add_alert ("bull_%1", "Bull %1", 30, -1)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A blush begins to creep up your neck and into your face as you come to the reali[sz]ation that there are other people here\!$"
   name="sympshyness2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue({ "fear", "shyness" })</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A burning salamander breathes a cloud of superheated air into your face\.$"
   name="aff_pyro_dizziness"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("dizziness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A burning salamander spits in your eyes\.$"
   name="aff_pyro_blind"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ("sixthsense")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^A chill runs over your icy skin\.$"
   name="curenofrost"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("no_frost", "silent")
defs:add_queue("frost")
affs:del_queue("ablaze")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A chilling wind from the south sends an odd scent to your nostrils\.$"
   name="aff_aero_southwind"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:reject_try ()
prompt:queue (function ()
 affs:add_custom ("southwind", "focus", "eat pennyroyal", nil, true)
 affs:masked (1)
end, "affs_add_southwind", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A clamp snaps shut on your foot\, pinning you to the ground\.$"
   name="affbeartrap"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone("roped")
flags:add_check ("recklessness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A cloudy tendril lashes at you\, filling your mind with disturbing images\.$"
   name="aff_aero_miasma"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:reject_try ()
prompt:queue (function ()
 affs:add_custom ("miasma", "herb", "eat pennyroyal", nil, true)
 affs:masked (1)
end, "affs_add_miasma", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A cloudy vision forms in your mind\'s eye of a towering\, angelic woman with a cobalt blue shield who shouts\, &quot;Heretic\, get thee from the Light\!&quot; She points at you and a bolt of blue lightning slams into you\.$"
   name="sympheretic"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:reject_try ()
prompt:queue (function ()
 affs:add ("heretic")
 affs:masked (1)
end, "affs_add_sympheretic", true</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A cobalt blue hexagram shoots up from below\.$"
   name="affhexagram1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTrigger("affhexagram2", true)
prompt:queue (function () EnableTrigger("affhexagram2", false) end, "affhexagram1")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^A coil of cloud choking you disperses\.$"
   name="curecoils"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("coils")</send>
  </trigger>
  <trigger
   group="System_Poisons"
   match="^A coldness seeps deep into the marrow of your bones\.$"
   name="poison_mactans"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if defs:has("fire") then
defs:del_queue("fire")
system:del_cure ()
affs:poison ()
else
  if affs:has("chills") then
    affs:poison ("frozen")
  else
    affs:poison ("chills")
  end
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A copious amount of blood suddenly splutters from your gut onto the ground\, and you slip in the deep red puddle\.$"
   name="sympslicedgut"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone ("slicedopengut")
affs:prone ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A dark chanting fills your ears as the face of [A-Z][a-z]+ appears before you\, beckoning you to succumb to the shadows\.$"
   name="affmoonsuccumb2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:reject_try ()
prompt:queue (function ()
affs:add ("succumb")
display.warning ("Watch mana!")
system ["hme_priority"] = "mana"
display.option ("priority", "mana")
if affs:has ("blackout") then
 flags:add_check ("reset_hme")
end --if
end, "affs_add_succumb", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A dark ray of energy shoots (?:forth|from [A-Z][a-z]+\'s hand) and hits you in the chest\. You gasp in horror as you feel your muscles shrivel and wither\.$"
   name="affenfeeble"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("enfeebled")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A dark spirit rises up from [A-Z][a-z]+ and hisses at you\, spitting a glob of black slime in your face\.$"
   name="affcrowspit2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:reject_try ()
prompt:queue (function ()
 affs:add_custom ("crowspit", "herb", "eat marjoram", nil, true) --this is for rigormortis
 affs:masked (1)
end, "affs_add_crowspit", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A dark void opens up in your mind and devours your thoughts\.$"
   name="affdreamvoid"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if not bals:has("herb") then
  bals:onbal("herb")
end
affs:add_queue("void")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A dart flies in from the \w+ and strikes you\.$"
   name="affblowgun"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A dart streaks from out of nowhere and slams into you\.$"
   name="affdarts"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>---WTF IS THIS?!
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A deep melancholy sweeps over you\.$"
   name="affdepression"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("depression")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A deep\, foreboding hum emanates from the tainted earth\, and then you are suddenly slammed into the ground by an irresistable force\.$"
   name="affgeoprone1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone()
defs:del_queue ("levitate")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^A ditty runs through your head and you can\'t stop yourself from singing it\.$"
   name="lostdef_truehearingditty"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ("truehearing")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Calendar"
   match="^A faint rustling in the sand reminds you of the danger of scorpions masked by the night\'s shadows\.$"
   name="cal_night12"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>calendar:time (true)</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^A feeling of comfortable warmth spreads over you\.$"
   name="curenofire"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("no_fire", "silent")
defs:add_queue ("fire")
affs:del_queue({ "frozen", "chills" })</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^A feeling of generosity spreads throughout you\.$"
   name="lostdef_selfishness1"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ("selfishness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Bashing"
   match="^A festering garghoul stretches out and swipes you with a slime covered hand\, and your body tingles with an odd sensation\.$"
   name="garghoul_diag"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("masked", 1)</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^A fluttering madfly curls up and turns black\, disintegrating into dust\.$"
   name="madfly_gone"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fst:fire ("madfly", true, true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A fluttering madfly darts into your ear\, and you hear a horrendously loud buzzing within your skull\. You stumble about trying to clear the impossible visions that plague you\.$"
   name="affmadflyinsanity"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if flags:get_check ("madfly") then
  affs:insawarped ("insanity", 10)
end
EnableTrigger("madfly_gone", true)
prompt:queue (function () EnableTrigger("madfly_gone", false) end, "affmadflyinsanity")</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^A fool will mask your next (\d+) tarot flings\.$"
   name="def_fool"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("fool", "%1 fling(s)", nil, "fromdef")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Bashing"
   match="^A garghast coughs out a flaring cloud of hot embers towards you that singe and burn your skin\.$"
   name="garghast_blackout"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add ("blackout")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Bashing"
   match="^A garghast reaches out and grabs you\, holding you tight to its chest in a smouldering embrace\.$"
   name="garghast_brokenlimb"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_custom ("garghast", "salve", "apply mending to arms")
affs:add_queue ("broken_rightleg")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Bashing"
   match="^A garghast reaches out and grabs you\, holding you tight to its chest in a smouldering embrace\.$"
   name="garghast_mending"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_custom ("garghast", "salve", "apply mending to arms")
affs:add_queue ("broken_rightleg")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Bashing"
   match="^A garghast swipes at you with a crooked arm\, and you feel numb throughout your body\.$"
   name="garghast_paralysis"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone ("paralysis")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A glittering butterfly alights on the ground at your feet\. The ground suddenly gives way and you drop into a pit as the butterfly flutters away\.$"
   name="aff_para_butterfly5"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:del ("climbing")
affs:add_queue ("pit")
if not defs:has ("levitate") then
  affs:add_queue ("broken_leftleg")
  affs:add_queue ("broken_rightleg")
end--if
parry:init ()
stance:init ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A glittering butterfly flutters in and loops around you\. You turn around\, trying to follow its flight path\, and your legs get twisted up\. Arms flailing\, you awkwardly try to keep your balance and end up flipping over\, end over end\, breaking all four of your limbs\.$"
   name="aff_para_butterfly4"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone ({"broken_leftleg", "broken_rightleg", "broken_leftarm", "broken_rightarm"),})
affs:prone ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Ent"
   match="^A gust of wind rises to push [A-Z][a-z]+ out to the \w+\.$"
   name="gust_success"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>for i=1,3 do
ColourTell ("deeppink", "", "GUST")
ColourNote ("white", "", " %1 SUCCESS")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Offense"
   match="^A hideous archdemon begins slowly turning and beckoning in all directions\.$"
   name="beckon_all"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("beckon")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Offense"
   match="^A hideous archdemon obeys your command\.$"
   name="demon_attack_"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>offense:aggressive ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Bashing"
   match="^A hooded gatekeeper chants in a deep\, harsh voice and lifts his hands violently\, causing a dark\, swirling mist to encompass you\.$"
   name="gatekeeper_blackout"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add ("blackout")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^A jolting surge rumbles through your insides\.$"
   name="curenogalvanism"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("no_galvanism", "silent")
defs:add_queue ("galvanism")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Bashing"
   match="^A kephera \w+ scoops your legs out from under you\, quickly coming down against you and pinning your limbs in a secure grapple\.$"
   name="bashing_kephera_grapple"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone ("entangled")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A large gust of wind suddenly rocks your body\. As you lose control\, you plummet into the ground\.$"
   name="gust_down"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
flags:del ("climbing")
flags:del_check ("intrees")
affs:del ("intrees")
fst:disable ("climbing")
display.warning ("Knocked down by gust!")
end, "geyser_down", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Bashing"
   match="^A large yellow spider rears up on its hind legs and squirts sticky webbing all over you\.$"
   name="yspider_entangled"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone ("entangled")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^A large\, rectangular gateway opens up near you and as you hear the laughing voice of Faymar\, @system_target is drawn through\.$"
   name="empress1_"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("empress")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A magic aura flares around you and completely absorbs the damage\.$"
   name="aura_absorption"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:del_check ("recklessness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Bashing"
   match="^A mass of sticky tendrils streak out from a morbidly\-tainted grub\, wrapping you in a cocoon of slime\.$"
   name="grub_entangled"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone ("entangled")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A murder of crows descends from the sky with black wings spread and eyes glowing a malevolent red\, diving at you in a filthy flurry of malevolent talons and beaks\.$"
   name="affdruidmurder"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:reject_try ()
prompt:queue (function ()
 if not string.find (prompt.status, "b") then
  affs:add_queue("blacklung")
 end
end, "affs_add_murder", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A new (left|right) (arm|leg) grows where the old one was\, though one that is quite sickly and in poor repair\.$"
   name="cureseveredlimb"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>local part = "%2"
  local side = "%1"
  system:cured_queue ("amputated_"..side..part)
  affs:add_queue ("mangled_"..side..part)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^A pair of faerie wings rapidly flutters\, then carries you up into the skies\.$"
   name="ondef_flyingartie"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:add_queue ("flying")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^A pale glow surrounds you as the moonwater soothes you\.$"
   name="moonwater_cure"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:del_queue ("moonwater")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A pigwidgeon (?:bound in shadows )?begins to follow you\.$"
   name="affpigwidgeon1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>todo:add ("bal", "pigwidgeon", "lose pigwidgeon")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A pink glow surrounds .+?\, who reaches forth with outstretched arms and hugs you in a loving embrace\.$"
   name="angel_raziela"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>-- vapors (kombu, melancholichead), pacified(reishi), vestiphobia(wormwood), lovers(galingale), generosity(galingale, phlegmatic) 
affs:add ("blackout")
affs:add_queue ("masked", 1)
prompt:add_alert ("angel", "Angel", 8, -1)
prompt:queue (function ()
if not affs:has ("blackout") then
  affs:add_custom ("raziela", "herb", "eat reishi", nil, true)
end--if
end, "affs_add_raziela", true)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^A portal grows quickly\, through which @system_target is drawn\.$"
   name="empress2_"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("empress")</send>
  </trigger>
  <trigger
   group="System_ShofangiMods"
   match="^A prickly stinging overcomes your body\, fading away into numbness\.$"
   name="shofangi_paralysis"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone("paralysis")</send>
  </trigger>
  <trigger
   group="System_Poisons"
   match="^A prickly stinging overcomes your body\, fading away into numbness\.$"
   name="poison_mantakaya"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:poison ("paralysis")</send>
  </trigger>
  <trigger
   group="System_KataMods"
   match="^A prickly stinging overcomes your body\, fading away into numbness\.$"
   name="kata_paralysis"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone("paralysis")</send>
  </trigger>
  <trigger
   group="System_Poisons"
   match="^A prickly\, stinging sensation spreads through your body\.$"
   name="poison_sensitivity"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:poison ("sensitivity")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A puddle of slimy mucous forms under your feet\, causing you to slip and fall\.$"
   name="affsludgewormprone"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone ({"prone", "mucous"})</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Voting"
   match="^A raspy voice whispers\, \&quot;If you vote for it\, they will come\.\&quot;$"
   name="vote2"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^A ray of (purple|golden|green|pink) light suddenly spotlights you\.$"
   name="ondef_encha"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>local enchants = {
["purple"] = "mercy",
["golden"] = "perfection",
["green"] = "kingdom",
["pink"] = "beauty",
}
defs:add_queue (enchants ["%1"])</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Rituals"
   match="^A red haze fills your field of vision as you chant the ritual of Rubeus\.$"
   name="ondef_rubeus"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("rubeus")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A redcap slashes you with a thin razor\, causing blood to spurt from the wound\, which he soaks up with his little cap\.$"
   name="affredcap"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("bleeding", 250)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Bashing"
   match="^A sadistic mitran lets forth a bloodcurdling screech\.$"
   name="mitran_fear"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("fear")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A screeching morrible places a suckered finger against the nape of your neck\. Your mind reels as dozens of gibbering voices assault you\.$"
   name="affmorrible"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_custom ("morrible", "focus", "focus mind")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A sense of deep inner calm descends on you\.$"
   name="affpacifism"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("pacifism")</send>
  </trigger>
  <trigger
   group="System_Poisons"
   match="^A sense of extreme nausea washes over you\.$"
   name="poison_botulinum"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:poison ("vomiting")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A sharp pain erupts in your chest\, and blood trickles out of your \w+\.$"
   name="afftelekburst2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("vessel", 3)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A sharp pain erupts in your chest\, and your \w+ throbs\.$"
   name="afftelekburst1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("vessel", 3)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A sharp pain starts in your stomach and slowly crawls up your throat\.$"
   name="affdruidscarab2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("scarab")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A sheet of blood rolls down your forehead and into your eyes\.$"
   name="sympfurrowedbrow"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("furrowedbrow")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^A shimmering field of protection flares up around you\.$"
   name="ondef_protection"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>prompt:queue (function ()
defs:ondef ("protection")
affs:del ("no_protection")
fst:disable ("ondef_protection")
end, "ondef_protection", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A sick feeling ferments throughout your body\.$"
   name="affnecroplague"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("masked", 1)
EnableTrigger ("lostdef_consciousness_plague", true)
prompt:queue (function ()
 EnableTrigger ("lostdef_consciousness_plague", false)
end, "affnecroplague")
display.warning ("You should EAT")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A silver light weighs upon you\, draining your mental energies\.$"
   name="affnightsuccumb3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
affs:add ("succumb")
display.warning ("Watch mana!")
system ["hme_priority"] = "mana"
display.option ("priority", "mana")
if affs:has ("blackout") then
 flags:add_check ("reset_hme")
end --if
end, "succumb", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^A silvery thrill runs from the tips of your toes up to the top of your head\.$"
   name="ondef_vitae"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:add_queue ("vitae")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A slaugh strokes a cold\, beautiful finger across your cheek\, and a cold sweat breaks out upon your brow\.$"
   name="affslaugh"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--rigormortis (marjoram), dysentery (choleric), sunallergy (apply liniment), pox (apply liniment), worms (choleric)
affs:reject_try ()
prompt:queue (function ()
 affs:add_custom ("slaugh", "herb", "eat marjoram", nil, true)
 affs:masked (1)
end, "affs_add_slaugh", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Bashing"
   match="^A slavering stoneghast spits a black mist into your eyes\.$"
   name="stoneghast_blindness"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ("sixthsense")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Bashing"
   match="^A slimy\, amphibious adorath hisses and plunges one of his barbed tentacles deep into your chest to inject his poison as the pain drains swiftly away\.$"
   name="adorath_paralysis"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A small anvil drops down\, cracking painfully against your skull\.$"
   name="affanvil"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone("concussion")
affs:prone ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A small rift opens up over your head\, and a glittering butterfly flutters through it\. A shaft of brilliant light pours out of the rift and bathes you in a golden glow\.$"
   name="aff_para_butterfly6"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue(function () affs:reset() wounds:reset() defs:del("insomnia") end)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^A soft moan rises up from the ground as a shadowy bubble forms around you\.$"
   name="ondef_shieldwyrd"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:add_queue ("shield")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A soft pink glow flows out of [A-Z][a-z]+\'s chest and covers you\.$"
   name="affharmonychuuti"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("peace")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Bashing"
   match="^A spectral (?:man|boy|girl|woman|paladin) whispers (?:her|his) story to you\, and the raw emotion becomes manifest\, causing a painful burst behind your eyes\.$"
   name="spectre_blackout"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add ("blackout")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Bashing"
   match="^A spectral (?:man|boy|girl|woman|paladin)\'s eyes widen and (?:he|she) points at you\, coating your skin with a fine layer of ice\.$"
   name="spectre_freezing"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:freezing ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Bashing"
   match="^A spectral garwight\'s arm becomes translucent as it punches you in the chest\. You feel only a slight tingle for a moment before a spectral garwight seems to clench its fist and a wave of cold pain shoots through your body\, causing you to shiver uncontrollably\.$"
   name="garwight_freeze"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("freezing")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Bashing"
   match="^A spectral garwight\'s arm becomes translucent as it punches you in the chest\. You feel only a slight tingle for a moment before a spectral garwight seems to clench its fist and a wave of cold pain shoots through your body\, causing you to shiver uncontrollably\.$"
   name="garwight_freezing"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:freezing ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Bashing"
   match="^A spider spirit lunges at you\, sinking his venomous fangs into your flesh and injecting you with poison\.$"
   name="sspider_freezing"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:freezing ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A spinning bloodstone around ([A-Z][a-z]+) bathes you with a bloody light\.$"
   name="harmonics_bloodstone"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("bleeding", 175)
--main.attacked("%1", "harmonics", "bloodstone")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Offense"
   match="^A spinning diamond around ([A-Z][a-z]+) weaves a glittering shield around [Hh](?:im|er)\.$"
   name="harmonics_passiveshield"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>offense:rebound ("%1", nil, "shield")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A spinning garnet around ([A-Z][a-z]+) casts a ruddy light onto you\.$"
   name="harmonics_garnet"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:damaged() --mana drain</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A spinning onyx around ([A-Z][a-z]+) casts a sickly shadow over you\.$"
   name="harmonics_onyx"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:add_check ("vapors")--paralyzed, dizzy, violently ill, healthleech, vapors
affs:add ("blackout")
affs:prone("paralysis")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A spinning opal around ([A-Z][a-z]+) flashes dark hues onto you\.$"
   name="harmonics_opal"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:damaged()--ego drain</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A spinning ruby around you shoots a small ball of balefire at you\.$"
   name="harmonics_rubybalefire"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:damaged()
affs:add_queue ("insawarped", "timewarped")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A spinning ruby crystal around you explodes in your face\.$"
   name="harmonics_rubyexplode"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("rubies", nil, -1)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A spinning sapphire around ([A-Z][a-z]+) beams a ray of blue light at you\, causing a piercing headache between your eyes\.$"
   name="harmonics_sapphire"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--confusion, stupidity, hallucination, pacification, masochism, addiction, impatience, paranoia, hypersomia, gluttony, dementia, and hypochondria
prompt:queue (function ()
 affs:add_custom ("sapphire", "herb", "eat pennyroyal", nil, true)
 affs:add_custom ("sapphire", "focus", "focus mind", nil, true)
end, "sapphire", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A squirming sludgeworm rears up and spits a gob of green slime onto you\, covering you in a slick mucous\.$"
   name="affsludgewormmucous"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("mucous")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A strange bone creature (?:flies in from the \w+|leaps out of [A-Z][a-z]+\'s hands) and attacks you.+"
   name="affetish"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:add_check ("fetish")
system:poisons_on ()
prompt:queue (function () affs:masked (1) flags:del_check ("fetish") end, "fetish", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A strange vibration prevents you from (healing spiritual curses|healing auric ailments|focusing your spirit)\.$"
   name="symp_maestoso"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>display.warning ("Maestoso! Cover your ears!")
if (string.find("%1", "spirit") and flags:is_sent ("focus_spirit")) then
  fst:fire ("focus_spirit", "now")
  system:del_cure ()
elseif flags:is_sent ("eat_horehound") then
  fst:fire ("herb", "now")
  system:del_cure ()
else
  return
end
prompt:queue(function () 
 affs:add ("maestoso")
 fst:enable ("maestoso")
end, "symp_maestoso", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A sudden gust of wind catches you and blows you out of the tree\.$"
   name="blown_down"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
flags:del ("climbing")
flags:del_check ("intrees")
affs:del ("intrees")
fst:disable ("climbing")
display.system ("Down from trees")
EnableTrigger ("blown_crippledlegs", false)
end, "blown_down", true)
EnableTrigger ("blown_crippledlegs", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A sudden headache makes you rub your temples for relief\.$"
   name="afftelepaff"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTrigger("poison_powersap", true)
affs:reject_try ()
prompt:queue(function ()
if affs:has ("prone") then --one of the afflictions was paralysis
  affs:add ("paralysis")
else
  affs:masked (1)
end
end, "affs_add_telepaff", true)
prompt:queue (function ()
EnableTrigger("poison_powersap", false)
end, "telepaff_not_checking")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A sudden itch drives you half\-mad\, and you scratch it furiously\.$"
   name="sympscabies"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("scabies")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A sudden primal fear grips your heart\.$"
   name="affcosmicfear"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("fear")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A sudden shiver shoots up your spine\, making you involuntarily jerk as a creeping sensation crawls over your skin\.$"
   name="affdreamblackout"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add ("blackout")
affs:reject_try ()
prompt:queue (function ()
 affs:add_custom ("dreamblackout", "herb", "eat kafe")
 affs:masked (1)
 display.warning("Dreamweaver attack!")
end, "affs_add_dreamblackout", true)</send>
  </trigger>
  <trigger
   custom_colour="17"
   enabled="y"
   group="System_Ent"
   match="^A sudden urge to sleep is so strong that your knees buckle\.$"
   name="surge"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="deeppink"
  >
  <send>display.warning("Dreamweaver attack!")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A sudden vision passes through your mind\'s eye\, a vision that is so warped and twisted that it challenges your very perception of reality\.$"
   name="aff_para_visionflux"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("insawarped", "insanity", 7)
prompt:queue (function ()
 affs:add_custom ("visionflux", "herb", "eat pennyroyal")
 affs:masked (1)
end, "affs_add_visionflux", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A swift gust from the east pierces (?:at |into )?your extremities\, plunging through your (left|right) (arm|leg)\.$"
   name="aff_aero_eastwind"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("pierced_%1%2")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Trackings"
   match="^A swirling beam of light shoots out of the eye of a floating spix directly into your eyes\, transfixing you with a kaleidoscope of colours and shapes\.$"
   name="affspixtransfix"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if not affs:has("blindness") and
 not defs:has("sixthsense") 
  then
 affs:add_queue("transfixed")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^A swirling void of darkness opens up before @system_target\, emanating a mad alien presence\. (?:He|She) whimpers as tendrils of icy smoke leap out and bore into ([hH](?:is|er)) body\. As the void slams shut\, (?:[sS]he|[hH]e) screams in abject terror\, and you cannot help but watch in fascination as \1 soul is ripped asunder from \1 body\.$"
   name="soulless_success"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>display.success ("Void")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A terrible lethargy suddenly overwhelms you\, making you feel mentally exhausted\.$"
   name="affpsyvamp"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>display.warning("Watch ego!")
flags:add_check ("recklessness")
prompt:queue (function () 
 system ["hme_priority"] = "ego" 
 display.option ("priority", "ego")
 if affs:has ("blackout") then
  flags:add_check ("reset_hme")
 end --if
end, "psyvamp", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Ent"
   match="^A terrifying nightmare invades your sleep\, of a gruesome monster slowly devouring you with sharpened fangs\. You cannot move as you are eaten alive\.$"
   name="nightmare"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>display.warning("Dreamweaver attack!")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A thin layer of ice forms over your skin\, making you shiver\.$"
   name="affaquaice2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue("fire")
affs:add_queue("chills")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A tingling sensation ripples over your skin and you begin to sweat profusely\.$"
   name="afftelekslick"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>aaffs:add_queue ("slickness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A tower of shadows prevents you from climbing up into the treetops\.$"
   name="towernoclimb"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>display.warning ("BROOMTOWER - NO TREES")
prompt:queue (function ()
flags:del ("climbing")
fst:disable ("climbing")
end, "tower", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A viciously thorned vine spears out from a nearby branch and lashes tightly around your (left|right) (arm|leg)\.$"
   name="affdruidthorns"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("lashed_%1%2")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A violent tremor rocks the land\, causing the earth to shake and the ground to buck beneath your feet\.$"
   name="affgeoprone2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone()
--prompt:queue (function () affs:add_custom ("geolegs", "salve", "apply mending to legs") affs:add_custom ("geoarms", "salve", "apply mending to arms") end, "geotremors", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A violent tremor rocks the trees\.$"
   name="tremor_down"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
flags:del ("climbing")
flags:del_check ("intrees")
affs:del ("intrees")
fst:disable ("climbing")
display.warning ("Knocked down by tremor!")
end, "tremor_down", true)</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^A warmth flows through your (chest|gut|head|left arm|left leg|right arm|right leg)\.$"
   name="curenumb"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>prompt:queue (function ()
system:cured_numb ("%1")
end, "cured_numb", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A wave of dizziness suddenly overwhelms you\.$"
   name="affdizziness"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("dizziness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A wave of nausea sweeps over you\.$"
   name="aff_para_flux"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("insawarped", "insanity", 5)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^A westerly breeze brings in a clean\, sweet scent that invigorates your body\.$"
   name="aero_westwind"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:cures_on()
system:add_cure ("westwind")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Aaaahhh\. No one is out to get you after all\.$"
   name="cureparanoia"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("paranoia")</send>
  </trigger>
  <trigger
   group="System_Rainbows"
   lines_to_match="2"
   match="^Abstract green blotches spin around you\, causing you to stumble\.\nBlood drips from your nose as the rainbow lights swirl around you in a maddening frenzy\.$"
   multi_line="y"
   name="affrainbow_clumsiness"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("clumsiness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Calendar"
   match="^Across the heavens\, the stars and moon challenge night\'s dark reign\, revealing familiar constellations that tell the tales of myth and legend\.$"
   name="cal_night4"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>calendar:time (true)</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Ah, the soothing bromides help strengthen your ego\.$"
   name="cureego"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("ego")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Bashing"
   match="^Ahh\, I am truly sorry\, but I do not see anyone by that name here\.$"
   name="notarget1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (flags:get ("todo_bal") or "nil") == "bash" then
system:set_auto ("bashing", 0)
end--if</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Ahhhh\. The freedom to be stingy again\!$"
   name="curegenerosity"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("generosity")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^All the thorny vines that cover you wither away\.$"
   name="cureallthorns2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if flags:get("ignite") then
prompt:queue (function ()
flags:del("ignite")
fst:disable("ignite")
affs:del({ "lashed_leftarm", "lashed_leftleg", "lashed_rightarm", "lashed_rightleg" })
end, "cured_lashed_ignite", true)
end--if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Bashing"
   match="^An aetheretic slivven suddenly becomes very still before releasing an aetheric pulse which explodes in a sphere through the room causing your mind to sear and the world to slow around you\.$"
   name="slivven_aeon"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add ("aeon")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^An ear\-splitting thunderclap peals through the air as .+? flares h(?:is|er) wings\, opening h(?:is|er) beak and unleashing an orb of crackling white lightn?ing towards you\, tendrils of electricity enveloping your body and causing your skin to blacken and body to spasm in pure agony\.$"
   name="aff_aero_thunderbird"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("epilepsy")
flags:add_check ("recklessness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^An enormous green spider scuttles in\, chasing a glittering butterfly\. The butterfly circles around you\, and the spider jumps on you\, sinking its fangs into your neck and then quickly webbing you in a cocoon\. The butterfly flutters off\, and the spider continues its pursuit after it\.$"
   name="aff_para_butterfly1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone({"entangled", "stun"})</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^An enormous wave sweeps over you\, knocking you to the ground\.$"
   name="affaquawave"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone()</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^An instant feeling of excitement and edginess overcomes you\.$"
   name="curekafe"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>prompt:queue (function ()
system:cured ("no_kafe", "silent")
display.ondef ("kafe")
affs:del ({"narcolepsy", "daydreaming",})
end, "curekafe", true)</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^An invisible force swipes by your leg\, causing you to fall over\.$"
   name="afftelekfistfall"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:unqueue ("affs_add_"..flags:get_check ("telekbrokenlimb"))
affs:prone ()
affs:prone(flags:get_check ("telekbrokenlimb"))</send>
  </trigger>
  <trigger
   group="System_Poisons"
   match="^An odd sensation descends upon you\.$"
   name="poison_masochism"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:poison ("masochism")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^An ominous noise lifts from within your mind\.$"
   name="curemanabarbs"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("manabarbs")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Calendar"
   match="^An owl hoots off in the distance\.$"
   name="cal_night11"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>calendar:time (true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^An uncomfortable itch tickles you in an embarrassing location\.$"
   name="affscabies"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("scabies")</send>
  </trigger>
  <trigger
   group="System_Poisons"
   match="^An uncomfortable squirming within your chest grips you\.$"
   name="poison_healthleech"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:poison ("healthleech")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^An? (\w+) rune and an? (\w+) rune whiz in from the \w+ and hit you in the chest\.$"
   name="affrunes4"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:runes ("%1", "%2")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^An? (\w+) rune whizzes in from the \w+ and hits you in the chest\.$"
   name="affrunes3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:runes ("%1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Animated branches from the trees above suddenly reach down and clutch you around the waist\, pulling you into their foliage\.$"
   name="affdruidtrees1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:in_trees ()</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^As an insubstantial ghost\, you are immune to many attacks\.$"
   name="def_ghost"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("ghost",nil, nil, "fromdef")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^As both your arms are dysfunctional\, you cannot do that\.$"
   name="sympchecklimbs3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if affs:condition ("leftarm")=="healthy" and
 affs:condition ("rightarm")=="healthy" 
  then
 affs:add_queue ("masked", 2)
elseif affs:condition ("leftarm")=="unhealthy" then
 system:check_limbs ("arms", "right")
elseif affs:condition ("rightarm")=="unhealthy" then
 system:check_limbs ("arms", "left")
end--if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^As the attack punches through [A-Z][a-z]+\'s phantom armour\, a backlash of crackling phantasmal energy lashes out at you\.$"
   name="affphanarmour"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add ("blackout")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^As the carilli?on bells thunder in the air\, you are nearly blinded by pain when an angry cough suddenly wracks your body\.$"
   name="affnecroknell"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:add_check ("recklessness")
if not affs:has("epilepsy") and
   not affs:has("pox") and
   not affs:has("rigormortis") and
   not affs:has("scabies") and
   not affs:has("worms") 
 then
  affs:masked (2)
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^As the carilli?on bells thunder in the air\, you are nearly blinded by pain when an angry cough suddenly wracks your body\.$"
   name="affnecrocarrillon"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:add_check ("recklessness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^As the cawing sound of the music pierces into your mind\, visions out of your deepest nightmares rise up to plague you\. Something deep within you snaps\, and you find yourself unable to do anything but gibber madly\.$"
   name="affshadowbeat1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue({ "epilepsy", "confusion", "stupidity" })
if 
  not defs:has ("truehearing") and
  not affs:has ("deafness")
    then
  affs:prone ("stun")
end
affs:add_queue ("bleeding", 300)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^As the image of ([A-Z][a-z]+) floats before your eyes\, blinding pain explodes behind them\, and they begin to tear up with blood\.$"
   name="afftelepmindblast"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>display.warning("Watch ego!")
flags:add_check ("recklessness")
prompt:queue (function () 
 system ["hme_priority"] = "ego" 
 display.option ("priority", "ego") 
 if affs:has ("blackout") then
  flags:add_check ("reset_hme")
 end --if
end, "mindblast", true)</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^As the pain of your broken jaw sets in\, you are filled with a sense of confusion\.$"
   name="afftelekfistconfuse"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("confusion")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^As the sparkling motes settles? upon your skin\, you shiver as a powerful healing balm washes over you\.$"
   name="harmonics_mendingstonecure"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:cures_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Calendar"
   match="^As the sun passes below the horizon\'s edge\, Mother Night unveils her terrible\, shadowy beauty\, spreading darkness across the land\.$"
   name="cal_night3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>calendar:time (true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^As the whispers enter your mind\, a sinking feeling drops into the pit of your stomach\.$"
   name="affegovice1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("egovice")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^As you are paralysed\, you cannot give away anything\.$"
   name="sympparalysis4"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if not affs:has("severedspine") then
  affs:prone("paralysis")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^As you attempt to move\, a pigwidgeon(?: bound in shadows)? maniacally runs in circles between your legs\, causing you to trip\.$"
   name="affpigwidgeon2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone()
todo:add ("bal", "pigwidgeon", "lose pigwidgeon", 1)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Highmagic"
   match="^As you chant the ritual of Puer over your (chest|gut|head|left arm|left leg|right arm|right leg)\, you feel your skin tighten\, tendons knit together and bones strengthen\.$"
   name="puer"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local part = string.gsub("%1", " ", "")
flags:add ("puer", part)
wounds:cured_partially (part, -900)
EnableTrigger("puer_healed", true)
prompt:queue (function () EnableTrigger("puer_healed", false) end, "puer")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^As you fling the Moon tarot at @system_target\, it turns an ominous\, sickly red\, before striking (?:[Hh]im|[Hh]er) in the head\.$"
   name="moon_"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("moon")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^As you luxuriantly rub the golden oil into your skin\, you sniff abruptly and inhale the sweet and floral odour of jasmine\.$"
   name="defup_jasmine"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:add_queue ("jasmine")
defs:del_queue({ "dragonsblood", "musk", "sandalwood", "vanilla" })</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^As you luxuriantly rub the resinous\, red oil into your skin\, you sniff abruptly and inhale the enticing aroma of dragon\'s blood\.$"
   name="defup_dragonsblood"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:add_queue ("dragonsblood")
defs:del_queue({ "jasmine", "musk", "sandalwood", "vanilla" })</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^As you luxuriantly rub the slippery\, lutescent oil into your skin\, you sniff abruptly and inhale the clean fragrance of sandalwood\.$"
   name="defup_sandalwood"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:add_queue ("sandalwood")
defs:del_queue({ "dragonsblood", "jasmine", "musk", "vanilla" })</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^As you luxuriantly rub the smooth, caramel[\- ]coloured oil into your skin\, you sniff abruptly and inhale the buttery redolence of vanilla\.$"
   name="defup_vanilla"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:add_queue ("vanilla")
defs:del_queue({ "dragonsblood", "jasmine", "musk", "sandalwood" })</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^As you luxuriantly rub the thick\, purple oil into your skin\, you sniff abruptly and inhale the pungent scent of musk\.$"
   name="defup_musk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:add_queue ("musk")
defs:del_queue({ "dragonsblood", "jasmine", "sandalwood", "vanilla" })</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^As you rise into the air\, you are entangled in an invisible net and fall back to the ground\.$"
   name="aff_aero_airnet"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone("entangled")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^As you rub your fingers against a phial of celestial holy water\, you are surrounded by holy light\.$"
   name="phial_cure"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:del ({"stun", "unconscious"})
  fst:disable ("stun")
  if flags:get ("phial") then
 flags:del ("phial")
 system:add_cure ("phial")
 system:cures_on ()
  end --if</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^As you sip the white tea\, your thoughts become clearer\.$"
   name="ondef_whitetea"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>prompt:queue (function ()
flags:del ("brew")
fst:disable ("brew")
bals:onbal ("brew", "silent")
end, "brew", true)
defs:add_queue ("tea", "white")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^As you stumble through the briars\, you become entangled in the morass of vines and nettles\.$"
   name="affdruidbriars"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone("entangled")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^As you throw the Emperor tarot at @system_target\, (?:[Hh]e|[Ss]he) gazes at you with adoration and falls in line behind you\.$"
   name="emperor_"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("emperor")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^As you try to go that way\, you find yourself entangled in a purple web of phantasms\, screaming and clawing at you\, entangling you in their grasp\.$"
   name="affphanwall"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone("entangled")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^As you wind (.+?) up\, the hands on its face begin to move slower and slower\. Suddenly\, a flurry of bright yellow sparks sprays? out of \1\, and you feel your musical aptitude take on a new dimension\.$"
   name="ondef_tempo"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:add_queue ("tempo")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^As your concussion lifts\, your thinking becomes clearer\.$"
   name="cureconcussion2"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("concussion")
affs:add_queue ("damagedhead")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Voting"
   match="^Ask not what Lusternia can do for you\, but what you can do for Lusternia\! Vote now\!$"
   name="vote3"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Baring sharpened teeth dripping with greenish saliva\, a homunculus resembling a deformed \w+ leaps up and bites you\, causing you to tremble and feel feverish\.$"
   name="transmology_homunculus2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("insawarped", "insanity", 7)
flags:damaged()</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^Bat\-like wings sprout out of your back\.$"
   name="def_wings"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("wings",nil, nil, "fromdef")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Offense"
   match="^Becoming one with the cosmos\, you allow the awesome power of the cosmos to be reflected through your eyes\.$"
   name="fear_"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("fear")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Offense"
   match="^Being careful not to poison yourself, you wipe off all the poisons from .+?\.$"
   name="wipingpoisons1"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Bellowing a thunderous war cry\, .+? smites you with a ball of holy flame\.$"
   name="angel_methrenton"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>-- - sensitivity(myrtle), hemophilia (sanguine), justice(reishi), pox (liniment), ablaze
affs:add_queue ("masked", 1)
prompt:add_alert ("angel", "Angel", 8, -1)
prompt:queue (function ()
 affs:add_custom ("methrenton", "herb", "eat myrtle", nil, true)
end, "affs_add_methrenton", true)</send>
  </trigger>
  <trigger
   group="System_Offense"
   match="^Beseeching the demon lords for their power\, you reach out and channel the powers of the tainted darkness into a hideous archdemon\.$"
   name="invest_powers"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTrigger ("invest_powers", false)
Execute ("darkbond")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Calendar"
   match="^Birds fill your ears with serenades of happiness and love\.$"
   name="cal_day5"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>calendar:time (false)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Black Shuck\, the Darkhound barks piercingly at you\, the concussion of the sound causing your muscles to lock up\.$"
   name="affshuckparalysis"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone("paralysis")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Blessed sight returns to you\.$"
   name="cureblindness"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("blindness")</send>
  </trigger>
  <trigger
   group="System_Rainbows"
   lines_to_match="2"
   match="^Blinding violet lights flash maddeningly in front of your eyes\, which twitch uncontrollably\.\nBlood drips from your nose as the rainbow lights swirl around you in a maddening frenzy\.$"
   multi_line="y"
   name="affrainbow_epilepsy"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("epilepsy")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Blood begins to slowly drip from your nose\.$"
   name="sympcrotamine1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:del_queue ({"crotamine_2", "crotamine_3", "crotamine_4"})
affs:add_queue ("crotamine_1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Blood flows into your (left|right) side inner ear\, inhibiting your sense of balance\.$"
   name="symplostear"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue({"dizziness", "severedear_%1", })</send>
  </trigger>
  <trigger
   group="System_NinjakariMods"
   match="^Blood pours from the jagged wounds on your head\.$"
   name="ninjakari_illgathoru_head"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("bleeding", 175)</send>
  </trigger>
  <trigger
   group="System_ShofangiMods"
   match="^Bones crunch under the force of the blow\.$"
   name="shofangi_bullstrength"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local part = wounds:is_hit ()
if part == "chest" then
  affs:add_queue("brokenchest")
elseif string.find(part, "arm") then
  local side = string.sub(part, 1, -4)
  affs:add_queue ("broken_"..side.."arm")
elseif string.find(part, "leg") then
  local side = string.sub(part, 1, -4)
  aaffs:add_queue ("broken_"..side.."leg")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Both (?:of )?your (arms|legs) must be free and (?:unhindered|functioning) to do that\.$"
   name="sympchecklimbs1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:check_limbs ("%1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Bowing [hH](?:is|er) head and crossing [hH](?:is|er) arms\, .+? sends a bolt of topaz light at you\, which sinks deep into your skull and sets your mind reeling\.$"
   name="angel_japhiel"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--- stupidity, amnesia, hallucinations, shyness, weakness
affs:add_queue ("masked", 1)
prompt:add_alert ("angel", "Angel", 8, -1)
prompt:queue (function ()
 affs:add_custom ("japhiel", "herb", "eat pennyroyal", nil, true)
end, "affs_add_japhiel", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Branches swoop down and lift you up into the trees\.$"
   name="affdruidtrees2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if not flags:get_check ("cudgel_raised") then
  affs:add_queue ("in_trees")
  affs:prone ("stun")
else
  flags:del_check ("cudgel_raised")
end</send>
  </trigger>
  <trigger
   group="System_Rainbows"
   lines_to_match="2"
   match="^Bright red bubbles float by as your mind drifts from confusion\.\nBlood drips from your nose as the rainbow lights swirl around you in a maddening frenzy\.$"
   multi_line="y"
   name="affrainbow_confusion"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("confusion")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^Chanting harshly\, you lay your hand upon @system_target\. Imposing your dark will through the touch\, you brand @system_target with your deathly mark\.$"
   name="deathmark_"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("deathmark")
prompt:add_alert ("dm", "DM", 240, -1)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Highmagic"
   match="^Chanting the ritual of Acquisitio to yourself\, you narrow your eyes and look around greedily for something to add to your hoard\.$"
   name="ondef_acquisitio1"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("acquisitio")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^Chanting the words of Amissio\, you whisper the name of @system_target into air\, sapping the very essence out of (?:[Hh]is|[Hh]er) pores\.$"
   name="amissio_"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("amissio")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Necromancy"
   match="^Chanting words of power\, you burn off your mortal shell in a blaze of dark fire and rise up from the ashes as a ghost\.$"
   name="ondef_ghost"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("ghost")</send>
  </trigger>
  <trigger
   group="System_WoundStatus"
   match="^Chest\s+(\d+)\s+\w+$"
   name="wound_status14"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:set("chest", %1)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Clenching [hH](?:is|er) fists\, .+? screams in rage at you\, and a ball of fire erupts at your feet\, briefly enveloping you\.$"
   name="affdemon_ashtorath"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:add_alert ("demon", "Demon", 8, -1)
flags:damaged ()
prompt:queue (function ()
 if not affs:has ("recklessness") then
  affs:add_custom ("affdemon_ashtorath", "salve" "apply mending to legs")
 end
end, "affdemon_asthorath", true)
affs:add_queue ("masked", 1)</send>
  </trigger>
  <trigger
   group="System_NinjakariMods"
   match="^Coiling around your throat in ever tighter twists\, .+? crushes your windpipe\.$"
   name="ninjakari_crush_pipe"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("windpipe")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Colou?rs fade and everything becomes dark and black\.$"
   name="lostdef_sixthsensefade"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ("sixthsense")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Rituals"
   match="^Confidence and exuberance fills you as you chant the joyful ritual of Populus\.$"
   name="ondef_populus"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("populus")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Calendar"
   match="^Continuing the hunt for his dark mate\, Father Sun presses forward in his journey\, lowering himself in the sky yet still casting even\, full light upon the land\.$"
   name="cal_day14"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>calendar:time (false)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Copious amounts of blood suddenly splutter from your (chest|gut) onto the ground\.$"
   name="sympslicedcg"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if "%1" == "gut" then
affs:add_queue("slicedopengut")
else
affs:add_queue ("slicedchest")
end--if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Bashing"
   match="^Countless filaments suddenly lash out at you from an aetheretic slivven\, tiny poisonous barbs dig into your flesh causing you to stagger on your feet as your body locks up in agony\.$"
   name="slivven_attack"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:reject_try ()
prompt:queue (function ()
 if string.find (prompt ["status"], "p") then
  affs:add_simple ("paralysis")
 else
  affs:masked (1)
 end
end, "affs_add_slivven_attack", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Voting"
   match="^Current leaders not cutting it for you\? Help bring in more potential candidates by voting for Lusternia\.$"
   name="vote13"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="System_Calendar"
   match="^Darkness rules the land\. It is deepest midnight\.$"
   name="cal_night7"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>calendar:time (true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Darkness swells from [A-Z][a-z]+ and strikes at you\.$"
   name="damage_unholywater"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:add_check ("recklessness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Dazzling lights flash across your vision\, leaving you with naught but a fading orange afterimage\.$"
   name="affafterimage"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("afterimage")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Dexterity returns to your (left|right) arm as your cracked elbow heals\.$"
   name="cureelbowcrack"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("elbow_%1arm")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Dexterity returns to your legs as your cracked (left|right) kneecap heals\.$"
   name="curekneecap"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("kneecap_%1leg")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Dipping [hH](?:is|er) hand into a shadow cauldron\, ([A-Z][a-z]+) pulls out a long shadow and releases it into the air\. The room darkens with the churning darkness\.$"
   name="night_shadows"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>display.warning ("%1 released SHADOWS!")
display.warning ("%1 released SHADOWS!")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Disgustingly\, [A-Z][a-z]+ spits at you\, hitting you directly in your face\.$"
   name="affnekospit"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Voting"
   match="^Do you know of an easy way to help Lusternia\? By voting\! The more players we have\, the faster we can grow\.$"
   name="vote4"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="System_Voting"
   match="^Do you really want to know what happened at the end of the Elder Wars\? Better get to voting for Lusternia\!$"
   name="vote9"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="System_Offense"
   match="^Double attacks left\: (\d+)$"
   name="get_double"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable ("demon_double", "%1")
EnableTrigger ("get_double", false)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Dozens of hands from a tangled hekoskeri slap at you\, and you feel a cold needle injected into your shoulder\, causing your reactions to slow\.$"
   name="affhekoskeri"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:add_alert ("sluggish", "Sluggish", 30, -1)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Drawing back [hH](?:is|er) (?:left|right) fist\, [A-Z][a-z]+ punches you in the (chest|gut|head|left arm|left leg|right arm|right leg)\.$"
   name="kata_punch"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local part = string.gsub("%1", " ", "")
wounds:monk_attack ({"Nekotai", "Ninjakari", "Shofangi", "Tahtetso",}, part, nil, "punch")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Drawing back on his tiny bow\, a pixie bound in shadows shoots an arrow straight at you\.$"
   name="pixie_blackout"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if affs:has ("blackout") then
if defs:has ("insomnia") then
 defs:lostdef ("insomnia")
end
end</send>
  </trigger>
  <trigger
   enabled="y"
   match="^Drawn by the flux of energy\, a forestal gargantuan suddenly wanders into the nearby area\.$"
   regexp="y"
   sequence="100"
  >
  <send>shipt target gargantuan</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Calendar"
   match="^Dusk has overtaken the light in Lusternia\.$"
   name="cal_night1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>calendar:time (true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Energy wreathes itself about your body to heal your limbs\.$"
   name="restoration"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:del ({"stun", "unconscious"})
  fst:disable ("stun")
  if flags:get ("restore") then
  flags:del ("restore")
  fst:disable ("restore")
  system:add_cure ("restore")
  system:cures_on ()
  end --if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Voting"
   match="^Ever wonder what happened to some of the forgotten gods\? They didn\'t vote Lusternia\, so Estarra tossed Them into the void\. Don\'t let this happen to you\- vote Lusternia now\.$"
   name="vote8"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="System_Voting"
   match="^Every time we lose a rank on Topmuds\, Fain kills a kitten\. Please\, think of the kittens\. And Vote for Lusternia\!$"
   name="vote21"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="System_Voting"
   match="^Every time you vote\, Kethuru loses a little piece of himself\.$"
   name="vote16"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Experiencing a shortness of breath\, you suddenly black out\.$"
   name="symplungblackout"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add ("blackout")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Voting"
   match="^Experiencing a shortness of company\, you suddenly black out\. You quickly vote for Lusternia\. Your ability to play greatly improves as your world fills with friends once again\.$"
   name="vote10"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Eyes flashing with rainbow colours\, ([A-Z][a-z]+) stares intently at you\. Strange thoughts and perceptions challenge your grip on reality\. When you finally pull yourself away from \1\'s gaze\, you find yourself twitching and drooling\.$"
   name="aff_para_revelations"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("insawarped", "insanity", 7)</send>
  </trigger>
  <trigger
   group="System_Poisons"
   match="^Fiery pain courses through your veins\.$"
   name="poison_pyrotoxin"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:del_queue ("frost")
affs:burning()
system:del_cure ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Filled with a haunting sorrow and unlimited love\, an excruciatingly beautiful note brings tears to your eyes and a lump to your throat\. Time slows and momentarily a vision fills your eyes of a goddess floating over an ancient pool with tears streaming down her face\.$"
   name="affstarhymn2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("aeon")
affs:add ("blackout")
EnableTrigger("curejinx", true)
prompt:queue (function () EnableTrigger("curejinx", false) end, "affstarthymn2", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Five of the pale spirits haunting you loom up in a cloud of chilling mist full of the weight of aeons\.$"
   name="affwildarrane6"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if defs:has("fire") then
  defs:del_queue("fire")
  affs:add_queue("chills")
elseif affs:has("chills") then
  affs:prone("frozen")
else
  affs:add_queue("chills")
  affs:prone("frozen")
end
affs:prone ("stun")
flags:add_check ("recklessness")</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^Flames erupt on your skin\, blistering your flesh\.$"
   name="affablaze2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("ablaze")
affs:burning()
if flags:get_check ("magic") == "ignite" then
 prompt:queue (function ()
  flags:del("ignite")
  fst:disable("ignite")
  affs:del({ "lashed_leftarm", "lashed_leftleg", "lashed_rightarm", "lashed_rightleg" })
 end, "cured_lashed_ignite", true)
end --if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Flames lick around you \- you are on fire\!$"
   name="sympablaze"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("ablaze")
flags:add_check ("recklessness")
affs:burning()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Flying insects suddenly swarm you\, covering you with tiny\, painful stings\.$"
   name="affdruidbees"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone("paralysis")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Cosmic"
   match="^Focusing your entire will upon the cosmic strands that bind your own body\, you quicken every fiber of your being to lightning speed\.$"
   name="ondef_quickened"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("quickened")
prompt:add_alert ("quick", "Quick", 12, -1)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^Focusing your will on the bond between you and the environment here\, you draw as much strength as you can before the bond snaps completely in a sudden wave of energy which fills your every fibre with a soothing warmth\.$"
   name="lostdef_attuned"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ("attuned")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Food is no longer repulsive to you\.$"
   name="cureanorexia"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("anorexia")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^Forks of flame lick against your skin\, melting away your protection against fire\.$"
   name="lostdef_frostfirey"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ("frost")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Fountains of blood erupt as ([A-Z][a-z]+) neatly removes [hH](?:is|er) blades from your (chest|gut|head|left arm|left leg|right arm|right leg)\.$"
   name="nekotai_amihai"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local part = string.gsub("%1", " ", "")
wounds:monk_attack (nil, part)
flags:damaged ()
affs:add_queue ("bleeding", 280)
prompt:queue (function ()
 affs:add ("grappled", nil, "%1")
end, "ungrappled_%1", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Four of the pale spirits haunting you flood into your eyes and harrow your mind with disturbing visions of death\.$"
   name="affwildarrane5"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:reject_try ()
prompt:queue (function ()
 affs:add_custom ("wildarrane5", "herb", "eat pennyroyal")
 affs:masked (1)
end, "affs_add_wildarrane5", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Voting"
   match="^Friends don\'t let friends play bad MUDs\, so vote for Lusternia and show them the way\.$"
   name="vote14"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   group="System_Gear"
   match="^From what keg are you trying to refill\?$"
   name="nokeg"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>gear:refilled (true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Frustratingly\, your body won\'t respond to your call to action\.$"
   name="sympparalysis1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if not affs:has("severedspine") then
  affs:prone("paralysis")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Fumes rise up from the tainted earth and make you cough\. Ugly\,? cankerous sores break out on your skin\, dripping with pus\.$"
   name="affgeotaint"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("taint_sick")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   lines_to_match="2"
   match="^Furrowing your brow into a scowl\, you clench your jaw and flare your nostrils\, twisting your lips into a cruel grin\.\nYou transform yourself into a bully\!$"
   multi_line="y"
   name="ondef_role_bully"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:add_queue ("role", "bully")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Gasping for air\, you faint from sudden exhaustion\.$"
   name="symppuncturedchest"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("puncturedchest")
affs:add ("blackout")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Calendar"
   match="^Glorious rays of morning light burst forth from Father Sun\'s crown as it peeks over the world\'s edge\, announcing a bright and shining new dawn\.$"
   name="cal_day17"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>calendar:time (false)</send>
  </trigger>
  <trigger
   group="System_Rainbows"
   lines_to_match="2"
   match="^Glowing yellow bursts of light flash across your vision\, filling you with unsated desire\.\nBlood drips from your nose as the rainbow lights swirl around you in a maddening frenzy\.$"
   multi_line="y"
   name="affrainbow_addiction"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("addiction")</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^Grasping at its edge\, you pull yourself up and out of the pit\.$"
   name="pit_rockclimbedout"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if affs:has ("pit") then
 EnableTrigger ("pit_climbedout", true)
 EnableTrigger ("pit_rockclimbedout", false)
end--if</send>
  </trigger>
  <trigger
   group="System_WoundStatus"
   match="^Gut\s+(\d+)\s+\w+$"
   name="wound_status15"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:set("gut", %1)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^H(?:is|er) eyes glowing a fearsome yellow\, [A-Z][a-z]+ stares at you with a burning gaze\, and you cannot help but shudder at the intensity of the malice directed towards you\.$"
   name="aff_para_badluck"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("insawarped", "insanity", 3)
affs:add_queue ("bad_luck")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^H(?:is|er) eyes glowing a fiery red\, [A-Z][a-z]+ looks at you\, quickly looks away\, then looks back at you with a malicious glint in [hH](?:is|er) eye\.$"
   name="aff_para_greywhispers"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("insawarped", "insanity", 3)
affs:add_queue("grey_whispers")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^H(?:is|er) eyes glowing a fiery red\, a homunculus resembling a deformed \w+ looks at you\, quickly looks away\, then looks back at you with a malicious glint in [hH](?:is|er) eye\.$"
   name="transmology_homunculus3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("insawarped", "insanity", 3)
affs.add_queue("grey_whispers")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^H(?:is|er) eyes turning into starry orbs of pitch black\, [A-Z][a-z]+ gazes deep into your eyes\. You feel [hH](?:is|er) thoughts boring into your own(\, but you shake your head and cast [hH](?:im|er) out| and you cannot resist the plundering of your spiritual essence\. [A-Z][a-z]+ cries out in triumph and you cannot help but scream in abject pain and humiliation as the core of your very self is laid bare before you)\.$"
   name="aff_para_truename"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if string.find("%1", "humiliation") then
  flags:damaged ()
  if (affs ["insanity"] ["number"] or 0) &lt; 15 then
    affs:add_queue ("insawarped", "insanity", 30)
  else
   affs:add_queue ("insawarped", "insanity", 7)
  end
end
affs:add ("blackout")</send>
  </trigger>
  <trigger
   group="System_WoundStatus"
   match="^Head\s+(\d+)\s+\w+$"
   name="wound_status13"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:set("head", %1)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Heart thumping\, you cannot bear the company of others and depart in terror\.$"
   name="sympshyness"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("shyness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Bashing"
   match="^His beady eyes wavering before you, a large\, hairy solifugid suddenly rears up and sprays you with a mass of sticky black webbing\.$"
   name="solifugid_entangled"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone ("entangled")</send>
  </trigger>
  <trigger
   group="System_Herbs"
   match="^Hmm\, that wasn\'t the herb you thought after all\. It was some rare spices\!$"
   name="harvesting_spices"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>herbs:picked("spices")</send>
  </trigger>
  <trigger
   group="System_Poisons"
   match="^Hmmmm\. Why must everything be so difficult to figure out\?$"
   name="poison_dulak"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:poison ("stupidity")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^Holding a blighted symbol of pestilence before you\, you make the Sign of Gorgulu at @system_target\, who is engulfed in oozing slime.\.$"
   name="symbol_evoke"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("evoke")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Hundreds of bloated spiders crawl up your legs\, their painful stings raising red welts on your skin\.$"
   name="affdruidspiders"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:poisons_on ()--hits with mactans (chills), anatine (clumsiness) or ibululu (sensitivity)
flags:add_check ("spiders")--no message for sensitivity
prompt:queue (function ()
 if flags:get_check ("spiders") then--so if I get hit with the above, I don't add sensitivity
  affs:add ("sensitivity")
 end--if
end, "spiders", true)
prompt:queue (function () flags:del_check ("spiders") end, "spiders_illusion")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Ent"
   match="^Hundreds of stones rain down from above\, blocking the exits\.$"
   name="stonerain"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>display.warning ("Stonerain!")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Bashing"
   match="^I do not recognize anything called that here\.$"
   name="notarget2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (flags:get ("todo_bal") or "nil") == "bash" then
system:set_auto ("bashing", 0)
end--if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^I don\'t see the container here from which you wish to apply some salve\.$"
   name="missingsalve"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>display.warning ("Missing SALVE vial - check your potionlist")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Bashing"
   match="^I see no \&quot;gold\&quot; to take\.$"
   name="bashing_nogold"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>todo:done ("gold_drop", "bal")
EnableTrigger ("bashing_nogold", false)
EnableTrigger ("gotgold", false)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Ice begins to form on your skin but an inner warm rises up and quickly melts it away\.$"
   name="affaquaice1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue("fire")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Ice crystals form over your skin\, gripping you with a numbing pain as your flesh begins to freeze\.$"
   name="affaquaice3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue("fire")
affs:prone("frozen")
display.warning("Frozen solid!")</send>
  </trigger>
  <trigger
   group="System_Magiclist"
   match="^Id\s+Name\s+Status\s+Spell\s+Charges\s+Months $"
   name="magiclist_"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="System_Magiclist"
   match="^Id\s+Name\s+Status\s+Spell\s+Charges\s+Months $"
   name="magiclist_start"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>magic:reset ("silent")
EnableTrigger ("magiclist_get", true)
EnableTrigger ("magiclist_done", true)</send>
  </trigger>
  <trigger
   group="System_Pipel"
   lines_to_match="2"
   match="^Id\s+Pipe\s+Herb\s+Puffs\s+Status"
   name="start_pipel"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTriggerGroup ("System_Pipel", true)
pipes:reset ("silent")
affs:del ("pipes_refill")
affs:del ("pipes_unlit")
sca:check ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Voting"
   match="^If you don\'t vote right now\, the Soulless win\.$"
   name="vote18"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="System_Voting"
   match="^If you haven\'t already\, please consider voting for Lusternia on TopMudSites\. This will help bring in new players and thus help our world grow\!$"
   name="vote12"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="System_Voting"
   match="^If you weren\'t cool\, you\'d let this pass you by without voting\. But you\'re cool\. Aren\'t you\? Vote Lusternia\.$"
   name="vote6"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   group="System_Tracking"
   match="^In a brilliant ray of light\, the power of (?:the )?([A-Z][a-z]+) lashes down upon you\.$"
   name="affastroray2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if not affs:astro("%1") then
affs:add_queue ("diag", true, "silent")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^In a moment of forgiveness\, you declare that you have no enemies\.$"
   name="unenemyingall"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send> adven:reset ("enemy_list")
if flags:get ("unenemying") then
 flags:del ("unenemying")
elseif (flags:get ("todo_free") or "")=="unenemyall" then
 todo:done ("unenemyall", "free")
 adven:enemied ()
else
 display.warning ("Forced into Unenemying!")
 adven:queue_enemy (GetVariable ("highlight_enemy_list"))
end--if</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Ent"
   match="^In a swift\, fluid motion\, @system_target springs up from (?:[Hh]er|[Hh]is) hands to land crouched on (?:[Hh]er|[Hh]is) feet\.$"
   name="springup_curing"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.mult ("brown", "pink", "STANDING")
display.mult ("brown", "pink", "STANDING")</send>
  </trigger>
  <trigger
   group="System_Offense"
   match="^Invested powers\:$"
   name="start_powers"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTrigger ("get_powers", true)
prompt:queue (function ()
 EnableTrigger ("start_powers", false)
 EnableTrigger ("get_powers", false)
end, "start_powers")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Calendar"
   match="^It is deep night in Lusternia\, before midnight\.$"
   name="cal_night5"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>calendar:time (true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Calendar"
   match="^It is dusk in Lusternia\.$"
   name="cal_day13"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>calendar:time (false)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Calendar"
   match="^It is early afternoon in Lusternia\.$"
   name="cal_day1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>calendar:time (false)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Calendar"
   match="^It is early morning in Lusternia\.$"
   name="cal_day19"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>calendar:time (false)</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^It is enchanted with the (\w+)(?: script)? spell\, holding (\d+) charges\.$"
   name="magicsync"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (flags:get ("todo_free") or "nil") == "magic_sync" then
magic ["synced"] = (magic ["synced"] or {})
magic ["synced"] ["%1"] = true
magic ["synced"] ["number"] = (magic ["synced"] ["number"] or 0)+1
magic:assign ("%1", nil, %2)
todo:done ("magic_sync", "free")
magic:sync_done ()
end --if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Calendar"
   match="^It is late night\, approaching dawn\.$"
   name="cal_night9"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>calendar:time (true)</send>
  </trigger>
  <trigger
   back_colour="8"
   enabled="y"
   group="System_Calendar"
   match="^It is now the (\d+).+? of (\w+)\, (\d+) years after the Coming of Estarra\.$"
   match_back_colour="y"
   match_bold="y"
   match_text_colour="y"
   name="cal_midnight"
   regexp="y"
   send_to="12"
   sequence="100"
   text_colour="11"
  >
  <send>calendar:date (%1, "%2", %3)
calendar:time (true, "silent")
display.system ("MIDNIGHT")
display.system ("MIDNIGHT")
display.system ("MIDNIGHT")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Calendar"
   match="^It is the middle of the night in Lusternia\.$"
   name="cal_night8"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>calendar:time (true)</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^It slams into you\, knocking you to the ground\.$"
   name="affhexagram2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
flags:del_check ("intrees")
affs:del ("intrees")
fst:disable ("climbing")
display.warning("Knocked down by Hexagram!")
prompt:add_alert ("hexa", "Hexa", 5)
end, "affhexagram2", true) </send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Calendar"
   match="^It\'s mid\-morning in Lusternia\.$"
   name="cal_day7"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>calendar:time (false)</send>
  </trigger>
  <trigger
   group="System_NinjakariMods"
   match="^Jerked off your feet\, you slam heavily against the ground\.$"
   name="ninjakari_jerks"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone({"prone", "stun"})</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Jumping straight up into the air\, [A-Z][a-z]+ snaps a kick at you and slams a heel into your (left|right) (arm|leg)\, popping the limb out of its socket\.$"
   name="shofangi_heelslam_limb"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack (nil, "%1%2")
affs:add_queue ("dislocated_%1%2")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Jumping straight up into the air\, [A-Z][a-z]+ snaps a kick at you and slams a heel into your chest\, snapping ribs\.$"
   name="shofangi_heelslam_chest"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack (nil, "chest")
affs:add_queue("brokenchest")
affs:prone ("stun")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Jumping straight up into the air\, [A-Z][a-z]+ snaps a kick at you and slams a heel into your gut\, knocking the wind out of you\.$"
   name="shofangi_heelslam_gut"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack (nil, "gut")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Jumping straight up into the air\, [A-Z][a-z]+ snaps a kick at you and slams a heel into your skull\.$"
   name="shofangi_heelslam_head"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack (nil, "head")
affs:add_queue("fracturedskull")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Justice is dealt out and your attack rebounds onto you\.$"
   name="sympjustice"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("justice")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^Kneeling to place a hand upon the ground\, you close your eyes and breathe deeply\, allowing your senses to intermingle with the (.+?) around you\.$"
   name="ondef_attuned"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:add_queue ("attuned", "%1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Lacking any way to fly and any support\, you plummet to the earth below you\!$"
   name="crow_scavanger"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone ({"concussion", "damagedhead"})
affs:prone ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^Lacking any way to fly and any support\, you plummet to the earth below you\!$"
   name="lostdef_flyingfalling"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ("flying")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Laughing softly\, the Inveiglora of Gnostoratu whips her arms at you\, which transform into a mass of tentacles that binds you completely\.$"
   name="illuminati_championmob2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone("entangled")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Leaping out from the shadows\, [A-Z][a-z]+ suddenly waylays you\, throwing you to the ground and then standing menacingly over you\.$"
   name="affwaylay1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Leaping up and twisting in the air\, [A-Z][a-z]+ smashes [hH](?:is|er) (?:left|right) foot into your (chest|gut|head|left arm|right arm)\, which trembles from the force of the kick\.$"
   name="nekotai_sprongk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local part = string.gsub("%2", " ", "")
wounds:monk_attack ({"Nekotai",}, part)
affs:add_queue("stiff_" .. part)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Offense"
   match="^Leathery wings stretched behind you like a billowing black cape\, you dive downwards and land in a crouch\.$"
   name="wings_land"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>display.success ("Land")</send>
  </trigger>
  <trigger
   group="System_WoundStatus"
   match="^Left Arm\s+(\d+)\s+\w+$"
   name="wound_status17"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:set("leftarm", %1)</send>
  </trigger>
  <trigger
   group="System_WoundStatus"
   match="^Left Leg\s+(\d+)\s+\w+$"
   name="wound_status19"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:set("leftleg", %1)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Liquid fire rains down on you\, broiling your flesh\.$"
   name="aff_pyro_firerain"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:burning()
EnableTrigger("aff_pyro_ashlimb", true)
queue:add(function () EnableTrigger("aff_pyro_ashlimb", false) end)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Locking [hH](?:is|er) eyes with yours\, [A-Z][a-z]+ clicks [hH](?:is|er) tongue against the roof of [hH](?:is|er) mouth\. As the rhythm of the clicks slows down\, reality seems to stop and start in sudden jerks\.$"
   name="aff_aeonics_aeon"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTrigger("afftarotaeon1", true)
EnableTrigger("afftarotaeon2", true)
prompt:queue (function () EnableTrigger("afftarotaeon1", false) EnableTrigger("afftarotaeon2", false) end)</send>
  </trigger>
  <trigger
   group="System_Rainbows"
   lines_to_match="2"
   match="^Melting orange clocks seep across the ground as contorted animals march past\.\nBlood drips from your nose as the rainbow lights swirl around you in a maddening frenzy\.$"
   multi_line="y"
   name="affrainbow_hallucinations"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("hallucinations")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Miraculously\, your spinal system regenerates\, restoring feeling to the rest of your body\.$"
   name="cureseveredspine"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("severedspine")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Mmmm\! You are seized with a sudden desire to find a mate\!$"
   name="curenolove"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:add_queue ("love", true, "silent")
system:cured_queue ("no_love", "silent")
affs:del_queue("disloyalty")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Mumbling softly to [Hh](?:er|im)self\, [A-Z][a-z]+ points a finger at you\, and you are gripped by the undulating image of (a screeching bat|a hissing snake|burning herbs)\.$"
   name="affbane"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local bane = "herb"
if string.find("%1", "bat") then
  bane = "bat"
elseif string.find("%1", "snake") then
  bane = "snake"
end
affs:add_queue("bane_" .. bane)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Highmagic"
   match="^Muttering the secret names of Chockmah\, you trace complex glowing symbols before you\. As the symbols fade away\, the area around you seems to become clearer and more defined, revealing all that is hidden\.$"
   name="ondef_chockmah"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("chockmah")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Highmagic"
   match="^Muttering the secret names of Geburah\, you trace the glowing symbol of a sword before you\. The sword enters your chest and you feel strength course through your veins\.$"
   name="ondef_geburah"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("geburah")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Muttering the secret names of Gedulah\, you trace a glowing circle above you\. The circle passes through your body and you feel your afflictions drain away\.$"
   name="gedulah"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:del ({"stun", "unconscious"})
  fst:disable ("stun")
if flags:get ("powercure") then
 flags:del ("powercure")
 fst:disable ("powercure")
 system:add_cure ("powercure")
 system:cures_on ()
end --if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Highmagic"
   match="^Muttering the secret names of Malkuth\, you trace glowing geometric patterns in the air which settle around you\, grounding you to the earth\.$"
   name="ondef_roots"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("malkuth")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Highmagic"
   match="^Muttering the secret names of Netzach\, you trace the glowing symbol of a rose before you\. You smile as the rose floats towards you and enters your chest\, making your personality sparkle\.$"
   name="ondef_netzach"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("netzach")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Highmagic"
   match="^Muttering the secret names of Tipheret\, you clench your fists\,? which begin to glow\. The glow spreads across your body"
   name="evoke_tipheret"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (flags:get ("fastwrithe") or "nil") == "tipheret" then
   affs:del_queue ({"trussed", "entangled", "roped", "shackled"})
   flags:del ("fastwrithe")
   fst:disable ("fastwrithe")
   for k, v in ipairs ({"trussed", "entangled", "roped", "shackled"}) do
     if (flags:get ("writhing_start") or "nil") == v or (flags:get ("writhing") or "nil") == v then
    flags:del ({"writhing_start", "writhing"})
        fst:disable ("writhing")
    break
 end--if
   end--for
end --if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Highmagic"
   match="^Muttering the secret names of Yesod\, you trace a glowing circle in front of you\. You step into the circle of energy\, coming out of it cloaked in invisibility\.$"
   name="ondef_shroud"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("shroud")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Highmagic"
   match="^Muttering the secret names of Yesod\, you trace a glowing circle in front of you\. You step into the circle of energy\, feeling your invisibility melt away with it\.$"
   name="lostdef_shroud1"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:lostdef ("shroud")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Offense"
   match="^Muttering words of power\, you trace a cobalt blue hexagram before you\, which suddenly shoots up into the air\, sparks trailing after it\.$"
   name="hexagram_"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("Hexagram")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Highmagic"
   match="^Muttering words of power\, you trace a cobalt blue pentagram in the air that remains hovering before you\, protecting against assault\.$"
   name="ondef_shield"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("shield")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^My\, you feel healthier than you have in years\.$"
   name="curehypochondria"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("hypochondria")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^No longer will the sunlight harm you\.$"
   name="curesunallergy"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("sunallergy")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^No worries\. You\'re not a selfish bastard as is\.$"
   name="lostdef_selfishness2"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:del_queue ("selfishness")</send>
  </trigger>
  <trigger
   group="System_Poisons"
   match="^None may stand in your way\! You are invincible\!$"
   name="poison_reckless1"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:poison ("recklessness")</send>
  </trigger>
  <trigger
   group="System_Parry_Check"
   match="^Note\: Percentages are approximations only\.$"
   name="parry_end"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTriggerGroup ("System_Parry_Check", false)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Bashing"
   match="^Nothing can be seen here by that name\.$"
   name="notarget4"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (flags:get ("todo_bal") or "nil") == "bash" then
system:set_auto ("bashing", 0)
end--if</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Oh\, thank the gods\! The infernal itching has subsided at long last\.$"
   name="curescabies"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("scabies")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^One of the pale spirits swirling around [A-Z][a-z]+ looms before you\, howling guttural curses that cause your limbs to quiver\.$"
   name="affwildarrane3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone("shackled")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^One of your reflections has been destroyed\! You have 0 left\.$"
   name="lostdef_reflection"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:del_queue ("reflection")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Ooh look\! A lovely lake\. Perhaps you\'ll dive in\!$"
   name="symphallucinations1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("hallucinations")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Pain flares in your (left|right) (shoulder|hip) as your joints re\-seat themselves\.$"
   name="curedislocated_limb"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>if "%2" == "hip" then
  system:cured_queue ("dislocated_%1leg")
else
  system:cured_queue ("dislocated_%1arm")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Pain sears through your (left|right) arm as .+? leaps up and clamps its powerful jaws around it\.$"
   name="affclammp1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("clamped_%1arm")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Paralysed as you are"
   name="sympparalysis2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if not affs:has("severedspine") then
  affs:prone("paralysis")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Password correct\. Welcome to Lusternia\.$"
   name="login"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:login ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Patchou the Moon Cat stares at you with her eerie silvery\-green eyes\.$"
   name="affpatchouaeon"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("aeon")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   lines_to_match="2"
   match="^Placing [hH](?:is|er) hands on [hH](?:is|er) belly\, ([A-Z][a-z]+) opens [hH](?:is|er) gob wide and lets forth a belch that makes the earth shake and the air turn foul\.\nThe stench of \1\'s belch is so rank that your head reels\.$"
   multi_line="y"
   name="affbrewbelch"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add ("blackout")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Placing a ruby crystal on the palm of [hH](?:is|er) hand\, ([A-Z][a-z]+) stares intently at it until the crystal floats up into the air\. It zooms around your head\, settling into an orbit around you\.$"
   name="harmonics_ruby"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("rubies")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Voting"
   match="^Please take a moment to cast your vote for Lusternia\. Help us show that we\'re the number one MUD\!$"
   name="vote7"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Pointing at you\, [A-Z][a-z]+ hisses and narrows [hH](?:is|er) eyes\. Flames erupt on your skin\, blistering your flesh\.$"
   name="affelemfire"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("ablaze")
affs:burning()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Powerful spirits plague you with their terrible presence\.$"
   name="affstagcurse"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
affs:masked (1)
end, "stagcurse", true)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Ent"
   match="^Pressing ([Hh]is|[Hh]her) hands together before (?:[Hh]im|[Hh]her)\, @system_target bows \1 head and an emerald glow suffuses the area around \1 chest\.$"
   name="green_"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.mult ("lime", "", "GREEN")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Pressing your hands together before you\, you concentrate on your heart chakra\. An emerald glow suffuses your chest and you feel your afflictions drain away\.$"
   name="green"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:del ({"stun", "unconscious"})
  fst:disable ("stun")
if flags:get ("powercure") then
 flags:del ("powercure")
 fst:disable ("powercure")
 system:add_cure ("powercure")
 system:cures_on ()
end --if</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Prudence rules your psyche once again\.$"
   name="curerecklessness"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("recklessness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   lines_to_match="2"
   match="^Puffing up your chest in self\-importance\, you plaster a condescending smile on your lips and develop a knowing smirk\.\nYou transform yourself into a bureaucrat\!$"
   multi_line="y"
   name="defup_role_bureaucrat"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:add_queue ("role", "bureaucrat")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Raising her hand towards you\, the Handmaiden of Shakiniel releases a ball of white light\, which envelops you in a paraly[sz]ing flash\.$"
   name="affhandmaiden2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone("paralysis")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Bashing"
   match="^Rapidly beating his wings\, .+? causes the air to stir violently and buffets you with great force\. The impact sends you flying into the wall headfirst\.$"
   name="manticore_stupidity"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("stupidity")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Rays of golden light beam out from [A-Z][a-z]+ and strike at you\, overwhelming you with (holy fire|thick vapours|deadly light)\.$"
   name="affcelestphial"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if "%1" == "holy fire" then
  affs:add_queue("ablaze")
  flags:add_check ("recklessness")
  affs:burning()
elseif "%1" == "thick vapours" then
  affs:add_queue("vapors")
  affs:add ("blackout")
else
  affs:add_queue("sunallergy")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Reality shifts and colours explode in your vision as the Inveiglora of Gnostoratu points a dainty finger at you\.$"
   name="illuminati_championmob1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("stupidity")</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^Reality wavers and bucks as the world around you stops and starts erratically\. You relive competing\,? possible futures over and over\, which finally calms and leaves you gasping for breath\.$"
   name="aeonics_timequakehit"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("time_echoes")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Red rivulets of blood flow down your (left|right) (arm|leg)\.$"
   name="symprivulets"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("sliced_%1%2")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Voting"
   match="^Remember how pointless your life was before Lusternia\? Vote for Lusternia\, and help us bring others out from the cesspool known as \'real life\.\'$"
   name="vote15"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   group="System_WoundStatus"
   match="^Right Arm\s+(\d+)\s+\w+$"
   name="wound_status16"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:set("rightarm", %1)</send>
  </trigger>
  <trigger
   group="System_WoundStatus"
   match="^Right Leg\s+(\d+)\s+\w+$"
   name="wound_status18"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:set("rightleg", %1)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^Rolling your eyes into the back of your head\, you begin to chant words of power\, releasing a flow of ectoplasm with each syllable\.$"
   name="ecto_"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("ecto")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Sanity returns to you and you are no longer demented\.$"
   name="curedementia"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("dementia")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Several flies from the black cloud of filth fly into your mouth\, turning into a putrid sleaze that makes you gag and choke uncontrollably\.$"
   name="affnecrocontagion"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:reject_try ()
prompt:queue (function ()
 affs:add_custom ("contagion", "salve", "apply liniment")
 affs:masked (1)
end, "affs_add_contagion", true)
display.warning("Contagion!")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Shadow tendrils wrap around your limbs\.$"
   name="affphantoms1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone({"entangled", "phantoms"})</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Shadows creep up all around you and close in\.$"
   name="affphantoms2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue({ "claustrophobia", "phantoms" })</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Shadows flicker before you\, forming strange and weird shapes\.$"
   name="affphantoms3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue({ "confusion", "phantoms" })</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Ent"
   match="^Shadows flock to @system_target(?:\, .*)?\, in a murky swirl\, swathing ([Hh]im|[Hh]er) with darkness\. Suddenly\, the darkness seeps into the ground\, taking \1 along\.$"
   name="flight"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.mult ("yellow", "", "FLIGHT")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Shadows gather around the form of Black Shuck\, the Darkhound as he opens his mouth fully\, spewing forth darkness which forces its way down your throat and into your lungs\.$"
   name="affshucklung"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("blacklung")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Calendar"
   match="^Shadows grow longer in anticipation for the return of their dark mistress as Father Sun\'s chase brings him closer to the world\'s edge\.$"
   name="cal_day2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>calendar:time (false)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Shadows seep into your clothing\, crawling like dark maggots\.$"
   name="affphantoms4"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue({ "vestiphobia", "phantoms" })</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Shadows suddenly leap out from every corner\, violently whirling in a sudden surge\. When the shadows dissipate slightly\, you gasp as you feel strands of darkness still cling to you\, binding you to ([A-Z][a-z]+) in a suffocating\, choking embrace\.$"
   name="affnightchoke"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:choke ()
--display.Warning("Shadow Choke! Get away from " .. string.upper("%1") .. "!")
EnableTrigger("curejinx", true)
prompt:queue (function () EnableTrigger("curejinx", false) end, "choked")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Shadows suddenly leap out from every corner\, violently whirling in a sudden surge\. When the shadows dissipate slightly\, you gasp as you feel strands of darkness still cling to you\, binding you to ([A-Z][a-z]+) in a suffocating\, choking embrace\.$"
   name="affnightchoke2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add ("choke")
display.warning("Shadow Choke! Get away from " .. string.upper("%1") .. "!")
EnableTrigger("curejinx", true)
prompt:queue (function () EnableTrigger("curejinx", false) end, "nightchoke2")
offense:set_caster ("%1", "choke")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Shadowy shapes rise up around you and form into familiar shapes\.$"
   name="affphantoms5"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue({ "hallucinations", "phantoms" })</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Shadowy voices whisper dark warnings in your ear\.$"
   name="affphantoms6"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue({ "paranoia", "phantoms" })</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Slashing viciously at you\, [A-Z][a-z]+ rends you in the (chest|gut|head|left arm|left leg|right arm|right leg) with (.+?)\.$"
   name="nekotai_rend"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local part = string.gsub("%1", " ", "")
wounds:monk_attack ({"Nekotai"}, part, nil, "%2")
flags:add_check ("recklessness")
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   lines_to_match="2"
   match="^Slicking back your hair\, you put on your best greasy grin and bob your head like a toady\.\nYou transform yourself into a sycophant\!$"
   multi_line="y"
   name="defup_role_sycophant"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:add_queue ("role", "sycophant")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Ent"
   match="^Small fissures open up in the tainted earth\, releasing toxic fumes that blacken the ground and pollute the air\.$"
   name="pollute2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>display.warning ("Pollute SECOND")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Small motes of yellow pollen rise up from the wildflowers around you and drift into your mouth\. Your throat begins to scratch\, forcing you to cough\.$"
   name="affdruidpollen"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("asthma")
prompt:queue (function ()
 defs:lostdef ("protection", "silent")
end, "druidpollen", true)</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Small spaces no longer frighten you\.$"
   name="cureclaustrophobia"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("claustrophobia")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Smoky tendrils rise up around you\, wrapping around your arms and legs and solidifying into iron shackles\. You scream in agony as invisible spikes and other unspeakable implements are driven into your flesh\.$"
   name="affnecroshackles"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add ("blackout")
affs:add_queue("shackled")</send>
  </trigger>
  <trigger
   group="System_Rainbows"
   lines_to_match="2"
   match="^Snaking vines of dark indigo creep across your skin\, holding you tight\.\nBlood drips from your nose as the rainbow lights swirl around you in a maddening frenzy\.$"
   multi_line="y"
   name="affrainbow_paralysis"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone("paralysis")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Some insect has crawled up your throat and into your mouth\. You gag and spit out a sickly green beetle\.$"
   name="curescarab"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:del_queue("scarab")
flags:add_check ("recklessness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Something is blocking your throat\, making it impossible to swallow\.$"
   name="sympscarab"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("scarab")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Spiders are erupting from your mouth and nose\!$"
   name="symphallucinations2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("hallucinations")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Voting"
   match="^Spindle\, Skein and Bobbins are being paid to dawdle\. Make them work for their wages\! Vote Lusternia\!$"
   name="vote11"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   group="System_Offense"
   match="^Spitting upon his face\, you glare at your archdemon slave and order him to leave your presence\. The archdemon disappears in a puff of stench\.$"
   name="demon_dismiss"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable ("demon_power", "0")
SetVariable ("demon_id", "")
SetVariable ("demon_double", "0")
SetVariable ("demon_lasthit", "-1")
SetVariable ("demon_willhit", "-1")
offense ["powers"] = {}
EnableTrigger ("demon_dismiss", false)
display.system ("Demon Dismissed")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Offense"
   match="^Spreading (?:his|her) arms wide\, ([A-Z][a-z]+) spins clockwise and a shimmering white orb springs up around (?:him|her)\.$"
   name="offense_circle"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>offense:rebound ("%1", nil, "circle")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Springing up\, [A-Z][a-z]+ whirls [hH](?:is|er) leg around\, pounding your (head|gut)"
   name="ninjakari_akogh"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack (nil, "%1", nil, "kick")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Springing up\, [A-Z][a-z]+ whirls [hH](?:is|er) leg around\, pounding your (left|right) (arm|leg) with ([hH](?:is|er) heel|such force that your limb dangles uselessly)\.$"
   name="ninjakari_akogh_limb"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local part = "%1%2"
wounds:monk_attack (nil, part, nil, "kick")
if string.find("%3", "dangles") then
  affs:add_queue ("broken_"..part)
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Squirrels chitter madly but remain unseen in the trees\. You are pelted by acorns that leave welts and bruises\.$"
   name="affdruidsquirrels"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("bleeding", 100)</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Steam rises from your skin as the fires that plague you are extinguished\.$"
   name="cureablaze2"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue("ablaze")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Stepping behind you\, ([A-Z][a-z]+) locks your head with (.+?)\, choking you\.$"
   name="tahtetso_bairak"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack (nil, "head")
affs:add_queue ("grappled", "head", "%1")
prompt:unqueue ("ungrappled_%1")
affs:add ("blackout")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Sticky strands of webbing spray out (?:from [A-Z][a-z]+ )?to cover you\.$"
   name="affentangled1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone("entangled")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Strange noises can be heard behind you and you see movement out of the corner of your eye\. What\'s that\? There it is again\!$"
   name="affdreamrandom"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:reject_try ()
prompt:queue (function ()
 affs:add_custom ("affdreamrandon", "focus", "focus mind", nil, true)
 affs:masked (1)
 display.warning("Dreamweaver attack!")
end, "affs_add_dreamrandom", true)</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Strength returns as your shriveled muscles plump up\.$"
   name="cureenfeebled"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("enfeebled")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^Suddenly @system_target\'s movements through the time stream are slowed\.$"
   name="target_aeoned_someoneelse"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>for i=1,2 do
  display.enemy ("Aeon")
end</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^Suddenly your movements through the time stream are slowed\.$"
   name="afftarotaeon2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTrigger("curejinx", true)
prompt:queue (function ()
if defs:has ("speed") then
  defs:lostdef ("speed")
  flags:del ("no_speed")
  fst:disable ("no_speed")
  fst:disable ("ondef_speed")
  bals:onbal ("speed", "silent")
  affs:add ("aeon", true)
end--if
if flags:get_check ("aeonfield") then
  affs:add ("insawarped", "timewarped", 4)
end
end, "tarotaeon2", true)
prompt:queue (function () EnableTrigger("curejinx", false) end, "tarotaeon_no_checking")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^Summoning all your influence\, you begin to verily radiate charisma\, creating an aura about yourself and those loyal to you\.$"
   name="ondef_charismaticaura"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:add_queue ("charismaticaura")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Calendar"
   match="^Sunlight bellows across the realm\, revealing the full glory of the majestic sun\'s luminous presence as he climbs higher into the sky\.$"
   name="cal_day6"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>calendar:time (false)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Sunlight shines down upon you mercilessly\, rippling across your skin like fire\.$"
   name="sympsunallergy1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
affs:del ("sunallergy_2")
affs:add ("sunallergy_1")
end, "sympsunallergy_1", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Swept low by (.+?)\, you howl in agony as [A-Z][a-z]+ strikes your (left|right) leg and shatters your ankle\.$"
   name="tahtetso_bomolahsho"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack (nil, "%2leg")
affs:add_queue("shatteredankle_%2leg")  
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Swinging (.+?)\, [A-Z][a-z]+ bumps your (head|chest|gut|left arm|left leg|right arm|right leg) to little effect\.$"
   name="tahtetso_bump"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local part = string.gsub("%2", " ", "")
wounds:monk_attack (nil, part)
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Swinging about in a wild dance\, you call down upon the powers of the moon to heal you of afflictions\. A soft beam of moonlight suffuses you\, curing you of sickness\.$"
   name="full"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:del ({"stun", "unconscious"})
  fst:disable ("stun")
if flags:get ("powercure") then
 flags:del ("powercure")
 fst:disable ("powercure")
 system:add_cure ("powercure")
 system:cures_on ()
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Taking (.+?) in two hands\, ([A-Z][a-z]+) throws it out to its full length\, then whips it down upon you\, tearing your flesh and coiling it tightly about your (head|chest|gut|left arm|left leg|right arm|right leg)\.$"
   name="ninjakari_ninshi"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local part = string.gsub ("%3", " ", "")
affs:add_queue ("grappled", part, "%2", "ninshi")
prompt:unqueue ("ungrappled_%1")
wounds:monk_attack ({"Ninjakari",}, part, nil, "%1")
system:poisons_on ()
if string.find (part, "leg") then
 affs:add_custom ("ninshi_legs", "salve", "apply regeneration to legs", system:getkey (affs ["salve"], "tendon_leftleg"))
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Taking a rope\, [A-Z][a-z]+ quickly trusses you up\, tightening the bindings until you can barely move\.$"
   name="afftrussed1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone("trussed")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Taking advantage of natural rocks and depressions\, you begin to pull yourself up the side of the pit\.$"
   name="pit_rockclimbing"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if affs:has ("pit") then
  prompt:queue (function ()
  fst:disable ("climbing")
  fst:enable ("pit")
  sca:check ()
  EnableTrigger ("pit_rockclimbedout", true)
  end, "pit_climbing", true)
end--if</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^Tapping into the entropic fields of the cosmos\, you bring forth a ray of negative energy that attaches onto @system_target\, draining away (?:[Hh]is|[Hh]er) strength and making (?:[Hh]im|[Hh]er) wither before your eyes\.$"
   name="enfeeble_"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("enfeeble")</send>
  </trigger>
  <trigger
   custom_colour="9"
   enabled="y"
   match="^Tendrils of astral light from the node reach out and wrap around you\. A surge of power courses through your body\, filling your reserves with its wild energy\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>links = links or 0
links = links+1
display.system (tostring (links))
</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^Tendrils of red and black smoke wrap around you\, covering your skin in a sticky film\.$"
   name="affmalefactgem"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone("paralysis")
prompt:queue(function () if not affs:has("paralysis") then affs:add_custom ("malefactgem", "focus", "focus mind") end end, "affmalefactgem", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Terror descends upon you and your head swims \- you must find shelter\!$"
   name="affagoraphobia"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("agoraphobia")
local hn = flags:get_check ("hex") --if I got hit by hex
  if hn then
    if hn==1 then --only once before getting the affliction
      flags:del_check ("hex")--I have detected all the hex attacks 
  flags:del_check ("recklessness")--and I don't need to check for reckless
    else
  flags:add_check ("hex", 1)--I still have one more hex attack to detect
    end--if
end --if</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^Th(?:at|e) pipe is full\.$"
   name="pipesfull"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>pipes:filled ()</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Thank Estarra\! Your clumsiness has been cured\.$"
   name="cureclumsiness"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("clumsiness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Voting"
   match="^Thank you for your consideration\!$"
   name="votey"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   group="System_Gear"
   match="^That is not a valid type of vial\.$"
   name="novialtype"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>gear:madevial (true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_MagicRecharge"
   match="^That item may not be charged any further\.$"
   name="magicrecharge_full"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (flags:get ("todo_free") or "nil") == "recharge" then
magic:recharged ()
todo:done ("recharge", "free")
end--if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^That pipe is already lit and burning nicely\.$"
   name="pipeslight_already"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>pipes:light ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^That pipe isn\'t lit\.$"
   name="smoking_pipesunlit"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>pipes:set_unlit ("myrtle")
pipes:set_unlit ("faeleaf")
pipes:set_unlit ("coltsfoot")
pipes:err ("unlit")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The (.+?) aura surrounding you dissipates\.$"
   name="curehealingaura"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if "%1" == "deadly bedeviling" then
affs:del_queue("bedeviled")
elseif "%1" == "deadly aurawarp" then
  affs:del_queue("aurawarp")
  affs:del_queue("homeostasis")
--else
  --affs:lostaura ("%1")
end</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The (?:herb|plant) has no effect\.$"
   name="offbalherb"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
  act:offbal_herb ()
  end, "offbalherb", true)</send>
  </trigger>
  <trigger
   group="System_Herbs"
   match="^The (\w+) disappears into its own hibernation\.$"
   name="harvesting_stripped1"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.system ("You Stripped Harvested the Herb! DIE!")
herbs:del ()</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Tracking"
   match="^The (right arm|left arm|right leg|left leg) of @system_target suddenly stills and colour drains from it\.$"
   name="rigormortis_"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.enemy ("broken %1")
ColourNote ("deeppink", "", " ______  ")
ColourNote ("deeppink", "", "| |  | \\ ")
ColourNote ("deeppink", "", "| |--| &lt; ")
ColourNote ("deeppink", "", "|_|__|_/") 
Note ("")
display.enemy ("broken %1")</send>
  </trigger>
  <trigger
   group="System_Herbs"
   match="^The .* here droop over and become mulch\.$"
   name="harvesting_stripped2"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.system ("You Stripped Harvested the Herb! DIE!")
herbs:del ()</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^The .+? hooks your (?:left|right) leg\, sending you tumbling\.$"
   name="shofangi_hook"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone ()</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The Binah Sphere no longer surrounds you\.$"
   name="curebinah_sphere"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("binah_sphere")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tarot"
   match="^The Enigma is already on you\.$"
   name="has_enigma"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:ondef ("enigma")</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^The Enigma is upon you\.$"
   name="def_enigma"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("enigma", nil, nil, "fromdef")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tarot"
   match="^The Enigma passes away from your being\.$"
   name="lostdef_enigma"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:lostdef ("enigma")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tarot"
   match="^The Fool already masks your tarot with his mischief\.$"
   name="has_fool"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:ondef ("fool")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The Handmaiden of Shakiniel raises her shield\, which shoots a ball of crackling blue lightning at you\.$"
   name="affhandmaiden1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add ("blackout")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The Inveiglora of Gnostoratu giggles as her hand seizes your throat\, her fingers morphing into tentacles that only tighten their hold\.$"
   name="illuminati_championmob3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:damaged()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The Nil Grim Horror grabs ahold of you with a rotting taloned claw\, draining all warmth from your body\.$"
   name="affgrim2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("chills")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The Nil Grim Horror rams his bony head into your skull\, causing the world to blank out around you\.$"
   name="affgrim1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add ("blackout")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The Nil Grim Horror spreads its leperous wings and looms up before you\, causing you to scream in a primal panic that rises up from your gut\.$"
   name="affgrim3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("fear")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The ache in your ear canals clears up\.$"
   name="cureblanknote"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:cured_queue("blanknote")
defs:del_queue("truehearing")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The ache in your ear canals suddenly intensifies\, leaving you with nothing but a splitting headache\.$"
   name="affblanknote"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ("truehearing")
affs:add_queue ("blanknote")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The aftertaste of the berry turns sour\.$"
   name="offbalsparklies"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>prompt:queue (function ()
flags:del ({"sparklies", "eat_sparklies"})
system:del_cure ()
system:del_cure ("eat_sparkleberry")
bals:offbal ("sparklies")
end, "offbalsparklies", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Rituals"
   match="^The air around you blurs as you chant the ritual of Fortuna\. You feel the winds of chance and change pass through you\.$"
   name="ondef_fortuna"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("fortuna")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The air around you suddenly erupts into flames\, scorching your body\.$"
   name="afftelekpyre"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("ablaze")
flags:add_check ("recklessness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The air visibly wavers around .+? as seething flames erupt across [hH](?:is|er) form\. With a high\-pitched shriek\, .+? releases a torrid stream of white\-hot fire at you\, causing you to scream in utter agony\, flames licking across your skin as it blisters\.$"
   name="aff_pyro_phoenix"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("ablaze")
affs:burning()</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The allheale burns your throat and makes your eyes water\.$"
   name="used_allheale"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>if bals:get ("ah") == 0.5 then
bals:offbal ("ah", "silent")
local aff, cure = flags:bals_try ("ah")
if string.find ((cure or "nil"), "custom") then
 affs:del_custom ("drink_allheale")
end
system:add_cure ("drink_allheale")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Offense"
   match="^The archdemon's belly distends and it begins to cough and hack\, finally vomiting forth a demon spawn\.$"
   name="spawn_"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("spawn")</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^The arnica bud has no discernable effect\.$"
   name="nocure_apply_arnica_to_chest"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>nocure:check ("apply_arnica_to_chest")
EnableTrigger ("nocure_apply_arnica_to_chest", false)</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^The arnica bud has no discernable effect\.$"
   name="nocure_apply_arnica_to_head"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>nocure:check ("apply_arnica_to_head")
EnableTrigger ("nocure_apply_arnica_to_head", false)</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^The arnica bud has no discernable effect\.$"
   name="nocure_apply_arnica_to_arms"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>nocure:check ("apply_arnica_to_arms")
EnableTrigger ("nocure_apply_arnica_to_arms", false)</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^The arnica bud has no discernable effect\.$"
   name="nocure_apply_arnica_to_legs"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>nocure:check ("apply_arnica_to_legs")
EnableTrigger ("nocure_apply_arnica_to_legs", false)</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The arnica slides off your oily skin\.$"
   name="sympslickarnica"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if bals:get ("herb") == 0.5 then
prompt:queue (function ()
fst:fire ("herb", "now")
system:del_cure ()
affs:add ("slickness")
end, "sympslickhealth", true)
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The aura of divine fire seethes around you\, restoring you fully\.$"
   name="divine_fire_cures"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if flags:get_check("divine_fire") then
prompt:queue (function ()
defs:del("insomnia")
affs:reset()
wounds:reset()
flags:reset()
end, "divine_fire", true)
end--if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^The aural world fades to silence\.$"
   name="lostdef_truehearing"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ("truehearing")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The awful loneliness leaves you\.$"
   name="cureloneliness"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("loneliness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The beat of the music pounds into your head\, and you cannot stop yourself from dancing wildly to the rhythm\.$"
   name="affshadowbeat3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone()</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The berry has no effect\.$"
   name="offbalsparklies2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
flags:del ({"sparklies", "eat_sparklies"})
system:del_cure ("eat_sparklies")
system:unqueue_cure ("eat_sparklies")
bals:offbal ("sparklies")
end, "offbalsparklies", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The biting cold of the water washes over you and extinguishes the flames on you\.$"
   name="cureablazewater2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:del_queue("ablaze")</send>
  </trigger>
  <trigger
   group="System_ShofangiMods"
   match="^The blade of .+? shreds the flesh on your (left|right) (arm|leg) into bloody ribbons\.$"
   name="shofangi_rake"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("lacerated", "%1%2")
affs:add_queue ("bleeding", 200)</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The bleeding in your brow subsides\.$"
   name="curefurrowed_brow"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("furrowedbrow")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Necromancy"
   match="^The bloated green flies that form a filthy cloud drop dead to the ground\.$"
   name="contagion_lost"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>for i=1,3 do
display.system ("NO Contagion")
end</send>
  </trigger>
  <trigger
   custom_colour="17"
   group="System_Ent"
   match="^The block of ice around you begins to constrict\, and you are helpless as your flesh freezes over\.$"
   name="aqpreservedead"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="deeppink"
  >
  <send>display.warning ("You're going to be PRESERVED!")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The blood of [A-Z][a-z]+ surges through .+?\, washing you with its healing powers\.$"
   name="sacrifice"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:cures_on ()</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The bones in your (left|right) (arm|leg) mend\.$"
   name="curebroken_limb"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("broken_%1%2")</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^The bones in your (left|right) (arm|leg) suddenly snap\.$"
   name="affacro_flipleg"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("broken_%1%2")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The bones in your (left|right) ankle mend\.$"
   name="cureankle"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:cured_queue ("shatteredankle_%1leg")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The bones of your (jaw|ribcage) suddenly snap\.$"
   name="afftelekfist"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if "%1" == "ribcage" then
  affs:add_queue("snappedrib")
else
  affs:add_queue("brokenjaw")
  EnableTrigger("afftelekfistconfuse", true)
  prompt:queue (function () EnableTrigger("afftelekfistconfuse", false) end, "telekfist")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The bones of your (left|right) (arm|leg) suddenly snap\.$"
   name="afftelekbrokenlimb"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("broken_%1%2")
flags:add_check ("telekbrokenlimb", "broken_%1%2")
if "%2" == "leg" then
  EnableTrigger("afftelekfistfall", true)
  prompt:queue (function ()
EnableTrigger("afftelekfistfall", false)
flags:del_check ("telekbrokenlimb")
end, "telekbrokenlimb")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The bough you\'re standing on suddenly tilts and branches forcibly hurl you out of the tree\, sending you tumbling to the forest floor\.$"
   name="affdruidtrees4"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
flags:del ("climbing")
fst:disable ("climbing")
flags:del_check ("intrees")
display.warning ("Knocked down by Treebane!")
end, "affdruidtrees4", true)</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The brew you drank lies flat on your palate\.$"
   name="offbalbrew"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fst:fire ("brew", "now")
  bals:offbal ("brew")
  system:del_cure ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Calendar"
   match="^The bright sun shines down upon you\.$"
   name="cal_day3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>calendar:time (false)</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The broken bones of your (left|right) wrist click into place and become whole\.$"
   name="curebrokenwrist"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("brokenwrist_%1arm")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The cartilage and nerves in your windpipe heal and your voice returns\.$"
   name="curewindpipe"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("windpipe")</send>
  </trigger>
  <trigger
   group="System_NinjakariMods"
   match="^The chain catches around your flailing (left arm|left leg|right arm|right leg)\, snapping tight with the screech of metal and twisting it in a hideous contortion of mangled flesh\.$"
   name="ninjakari_twisted"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local limb = string.gsub("%1", " ", "")
affs:add_queue("twisted_" .. limb)
wounds:monk_attack (nil, limb)</send>
  </trigger>
  <trigger
   group="System_NinjakariMods"
   match="^The chain catches your ankle and pulls your feet from under you\.$"
   name="ninjakari_dhatogh"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone ()</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The chain coiled around your (chest|gut|head|left arm|left leg|right arm|right leg) turns the (healing )?salve brown and useless\.$"
   name="ninjakari_ninshi_salve"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local part = string.gsub ("%1", " ", "")
prompt:unqueue ("apply_regeneration_to_"..part)
if not affs ["ninshi"] [part] then
  affs:add ("grappled", part, "somebody", "ninshi")
end--if
prompt:queue (function ()
if ("%2"or "salve") == "healing" then
  fst:fire ("elixir", "now")
else
  fst:fire ("salve", "now")
end--if
system:del_cure ()
end, "ninjakari_ninshi_salve", true)</send>
  </trigger>
  <trigger
   group="System_NinjakariMods"
   match="^The chain tears open your belly\, causing bloody innards to be exposed\.$"
   name="ninjakari_illgathoru_gut"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("slicedopengut")
affs:add_queue ("bleeding", 175)</send>
  </trigger>
  <trigger
   group="System_Arena"
   match="^The challenge you issued to [A-Z][a-z]+ has worn off\.$"
   name="challenge_wornoff"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTriggerGroup ("System_Arena", false)
fst:disable("arena")
display.system ("Challenge unanswered")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Calendar"
   match="^The chirping of crickets surrounds you in a medley of night\-time music\.$"
   name="cal_night6"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>calendar:time (true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Calendar"
   match="^The cloud cover clears\, and sun fills the skies\.$"
   name="cal_day20"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>calendar:time (false)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Calendar"
   match="^The cloud cover clears\, revealing the sparkling night sky\.$"
   name="cal_night10"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>calendar:time (true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   lines_to_match="2"
   match="^The cloud of fragrant smoke coalesces into the scene of a roaring forest fire\. Flaming branches rain down all around you\.\nA burl cracks open next to you\, covering you in burning sap\.$"
   multi_line="y"
   name="affsmudge5"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("ablaze")
flags:add_check ("recklessness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   lines_to_match="2"
   match="^The cloud of fragrant smoke coalesces into the scene of a soaring mountain\. An ominous rumbling soon heralds an avalanche of rock that comes crashing down the mountainside\.\nYou are buried under an avalanche of rock and rubble\.$"
   multi_line="y"
   name="affsmudge1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone()
flags:add_check ("recklessness")
affs:add_queue ("broken_rightleg")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   lines_to_match="2"
   match="^The cloud of fragrant smoke coalesces into the scene of a verdant swamp\.\nYou gasp in horror as you begin to sink into a patch of quicksand\.$"
   multi_line="y"
   name="affsmudge4"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>display.warning("Quicksand! DON'T MOVE!")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   lines_to_match="2"
   match="^The cloud of fragrant smoke coalesces into the scene of desert sand dunes\. Suddenly a sandstorm rises up over a dune and rushes down atop you\.\nThe whirling sands scour your flesh\.$"
   multi_line="y"
   name="affsmudge3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("bleeding", 300)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   lines_to_match="2"
   match="^The cloud of fragrant smoke coalesces into the scene of rolling hills silhouetted against a raging thunderstorm\. Mud begins sliding off the hills\, pounding down all around you\.\nYou are caught in the onslaught and go down in a wave of rolling mud\.$"
   multi_line="y"
   name="affsmudge2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone("muddy")
affs:prone ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The cold of the grave seeps into your bones\, causing you to shudder\.$"
   name="affnecrocoldaura"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("chills")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The cold of the snow seeps into your bones\.$"
   name="affwildarrane2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ("truehearing")
if defs:has("fire") then
  defs:del_queue("fire")
elseif affs:has ("chills") then
  affs:prone("frozen")
else
  affs:add_queue("chills")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The collapsed nerves in your (left|right) arm spasm uncontrollably\, the tremors spreading through your body\.$"
   name="sympcollapsednerve"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:bal ({ "collapsednerve_%1arm", "epilepsy" })</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The coloured lights stop flashing before your eyes\.$"
   name="curestars"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:del_queue("stars")</send>
  </trigger>
  <trigger
   custom_colour="17"
   enabled="y"
   group="System_Ent"
   match="^The column of topaz light that surrounds you brightens and intensifies\, as you feel the presence within your mind shuffle through your memories\, pulling out and laying all your past mistakes before you\.$"
   name="judgement3"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="deeppink"
  >
  <send>for i=1,5 do
display.warning ("It is DAY of JUDGEMENT")
end
prompt:add_alert ("judge_3", "Judge_3 %1", 4, -1)</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The confusion lifts from your mind and it is clear once again\.$"
   name="cureconfusion"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue("confusion")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The crone crosses her shriveled arms and turns her dark\, penetrating gaze upon you\.$"
   name="affcrone"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--disrupted, anorexia, shyness. slickness, vertigo, recklesness, claustrophobia, masochism, confusion, frozen
affs:reject_try ()
prompt:queue (function ()
 affs:add_custom ("crone", "herb", "eat calamus", nil, true)
 affs:masked (1)
end, "affs_add_crone", true)
affs:add ("disrupted")
flags:add_check ("recklessness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The crooked forest paths twist dizzyingly around you\, and you find yourself stumbling through the branches\.$"
   name="affdruidpathtwist1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("dizziness")
EnableTrigger("affdruidpathtwist2", true)
prompt:queue (function () EnableTrigger("affdruidpathtwist2", false) end, "affdruidpathtwist1")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The curse of Papaxi upon your (ego|health|mana)(?: reserves)? lifts\.$"
   name="curepapaxi"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("%1_curse")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The curse of justice leaves you\.$"
   name="curejustice"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("justice")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The curse of the dark moon passes from your spirit\.$"
   name="curedarkmoon"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("darkmoon")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The dark brew stokes a delicious fire within your belly\.$"
   name="ondef_darkbeer"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>prompt:queue (function ()
flags:del ("brew")
fst:disable ("brew")
bals:onbal ("brew", "silent")
end, "brew", true)
defs:add_queue ("beer", "dark")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^The dark mark visible on @system_target fades away\.$"
   name="deathmark_faded"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>display.mult ("limegreen", "", "DM Fade")
prompt:del_alert ("dm")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The dark thrumming presence around you dissipates\.$"
   name="curepowerspikes"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("powerspikes")</send>
  </trigger>
  <trigger
   custom_colour="17"
   enabled="y"
   group="System_Tracking"
   match="^The dark void of terror fills your mind as\, horribly\, blood begins to seep out of every pore on your body\.$"
   name="sympcrotamine4"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="deeppink"
  >
  <send>affs:del_queue ({"crotamine_1", "crotamine_2", "crotamine_3"})
affs:add_queue("crotamine_4")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The dazzling afterimage fades from your vision\.$"
   name="cureafterimage"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:del_queue("afterimage")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The deep damage in your (head|chest|gut|left arm|left leg|right arm|right leg) (completely|partially) heals\.$"
   name="curedeepwounds"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>if "%2" == "partially" then
  prompt:queue (function () wounds:cured_partially ("%1") end, "wounds_cured_partially", true)
else 
  prompt:queue (function () wounds:cured ("%1") end, "wounds_cured", true)
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The divine aura of curing around you hums briefly as it draws an affliction from your body\.$"
   name="shrine_cure"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:cures_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   lines_to_match="2"
   match="^The earth below you suddenly splits open\, and a mighty geyser soars skywards\.\nThe geyser strikes you full\-on\, and you tumble to the ground helplessly\.$"
   multi_line="y"
   name="lost_flyinggeyser"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ("flying")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   lines_to_match="2"
   match="^The earth suddenly splits open\, and a mighty geyser soars skywards\.\nThe geyser strikes you full\-on\, and you tumble to the ground helplessly\.$"
   multi_line="y"
   name="geyser_down"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
flags:del ("climbing")
flags:del_check ("intrees")
affs:del ("intrees")
fst:disable ("climbing")
display.warning ("Knocked down by geyser!")
end, "geyser_down", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The end of [A-Z][a-z]\'s cudgel forms a knotty burl and (?:[hH]e|[sS]he) points it at you\. The burl pops and ruptures\, shooting a barrage of splinters into your flesh\.$"
   name="affdruidcudgel"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:damaged ()</send>
  </trigger>
  <trigger
   enabled="y"
   match="^The eyes of a deformed lucidian glow a violent crimson as he mutters harshly under his breath\, with a sudden gesture towards you\, a rapid gust of air strikes at your leg\, painfully snapping bone with its sheer force\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add ("broken_rightleg")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^The faint hint of .+? disappears and you find yourself no longer coated in it\.$"
   name="lostdef_perfume"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ({ "dragonsblood", "jasmine", "musk", "sandalwood", "vanilla" })</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^The flesh on your (left|right) (arm|leg) shrivels to the bone\.$"
   name="affnecroshrivel2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("broken_%1%2")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The flow of blood recedes as your (left|right) (arm|leg)\'s laceration mends\.$"
   name="curelacerated_limb"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("lacerated", "%1%2")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The flow of blood recedes as your (left|right) (arm|leg)\'s main artery mends\.$"
   name="cureartery_limb"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("artery", "%1%2")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The flow of blood recedes as your forehead cuts mend\.$"
   name="curearteryhead"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("artery", "head")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The flow of blood recedes as your gut mends\.$"
   name="cureslicedopengut"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue("slicedopengut")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The flowery tea awakens a passion within you\.$"
   name="ondef_oolong"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>prompt:queue (function ()
flags:del ("brew")
fst:disable ("brew")
bals:onbal ("brew", "silent")
end, "brew", true)
defs:add_queue ("tea", "oolong")</send>
  </trigger>
  <trigger
   group="System_Offense"
   match="^The following beings are in your entourage\:$"
   name="demon_startid"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTrigger ("demon_startid", false)
EnableTrigger ("demon_getid", true)
prompt:queue (function () EnableTrigger ("demon_getid", false) end, "demon_startid")
prompt:queue (function () 
 display.system ("No Demon Detected")
 SetVariable ("demon_id", "")
 SetVariable ("demon_power", "0")
 SetVariable ("demon_double", "0")
 SetVariable ("demon_lasthit", "-1")
 SetVariable ("demon_willhit", "-1")
 offense ["powers"] = {}
end, "nodemonent")</send>
  </trigger>
  <trigger
   group="System_Herbs"
   match="^The following plants are growing in this room\:$"
   name="start_herbs"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTrigger ("get_herbs", true)
herbs ["inroom"] = {}
prompt:queue (function ()
EnableTrigger ("start_herbs", false)
EnableTrigger ("get_herbs", false)
end, "start_herbs")</send>
  </trigger>
  <trigger
   group="System_KataMods"
   match="^The force of the blow forces you to stagger backwards\, and you feel slightly dazed\.$"
   name="kata_stun"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone ("stun")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The form of a ghostly stag settles upon [A-Z][a-z]+\. (?:He|She) raises one golden hoof up high and stomps down upon you\, knocking the wind out of your lungs\.$"
   name="affstagstomp3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone("disrupted")
affs:prone ()
EnableTrigger("affstagstomp2", true)
;prompt:queue (function () EnableTrigger("affstagstomp2", false) end, "stagstomp3")</send>
  </trigger>
  <trigger
   group="System_Ent"
   match="^The foul wind picks you up and hurls you to the (\w+)\.$"
   name="squalled_away"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>display.warning ("Squalled "..string.upper ("%1"))
display.warning ("Squalled "..string.upper ("%1"))</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The fracture in the bones of your (left|right) arm knit together\.$"
   name="curefractured_arm"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("fractured_%1arm")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The freezing blizzard nips at your fingers and toes\.$"
   name="aff_aero_cold"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("chills")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The gaping wound in your chest closes up\.$"
   name="cureslicedchest"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("slicedchest")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The ghostly outline of an? (\w+) rune briefly appears in front of you before slamming into your forehead\.$"
   name="affrunes5"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:runes ("%1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The grim mark on your body suddenly darkens (slightly|greatly|brilliantly)\.$"
   name="affnecrodeathmark"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local marks = 1
if "%1" == "greatly" then
  marks = 2
elseif "%1" == "brilliantly" then
  marks = 3
end
affs:add_queue ("deathmark", math.min(15, (affs:has("deathmark") or 0) + marks))</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^The grotesque sound causes your insides to churn and you taste blood in your mouth\.$"
   name="affthroatcroaked"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:damaged ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Ent"
   match="^The ground convulses and you are no longer able to see through the pitch black clouds that contaminate the air\. The stinking pollution coats your skin\, dissolving your flesh like acid\, and you choke upon the foul fumes that eat away at your lungs\.$"
   name="pollute4"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>display.enemy ("Caster at 0 MANA, 0 POWER!")</send>
  </trigger>
  <trigger
   group="System_Offense"
   match="^The ground rumbles and splits open as a hideous archdemon crawls out and scuttles to your side\, cringing and groveling at your feet\.$"
   name="demon_summon"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if GetVariable ("demon_lasthit") == "-1" then
 if not next (offense.powers) or not (offense.powers.last_power) then
  SetVariable ("demon_power", "0")
  SetVariable ("demon_id", "")
 end--if
 SetVariable ("demon_lasthit", "0")
 SetVariable ("demon_willhit", "8")
 ResetTimer ("demon_four")
end--if
EnableTrigger ("demon_summon", false)
Execute ("ent")
display.system ("Demon Summoned")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The ground seems to tilt and you fall with a thump\.$"
   name="sympdizziness"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone("dizziness")
affs:prone ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The ground suddenly falls away from beneath you and you go tumbling into a pit\, but thankfully something soft and spongy breaks your fall\-\-Holy Nil\, it\'s a pile of snakes\!$"
   name="affpit3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:del ("climbing")
affs:add ("pit")
if not defs:has ("levitate") then
  affs:add_queue ("broken_leftleg")
  affs:add_queue ("broken_rightleg")
end--if
parry:init ()
stance:init ()
system:poisons_on()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The ground suddenly falls away from beneath you and you go tumbling into a pit\, landing painfully on the hard ground\.$"
   name="affpit1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:del ("climbing")
affs:add ("pit")
if not defs:has ("levitate") then
  affs:add_queue ("broken_leftleg")
  affs:add_queue ("broken_rightleg")
end--if
parry:init ()
stance:init ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The ground suddenly falls away from beneath you and you go tumbling into a pit\. Before you hit the bottom\, you are skewered upon some spikes\!$"
   name="affpit2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:del ("climbing")
affs:add ("pit")
if not defs:has ("levitate") then
  affs:add_queue ("broken_leftleg")
  affs:add_queue ("broken_rightleg")
end--if
parry:init ()
stance:init ()
system:poisons_on()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The healing presence of (?:[A-Z][a-z]+\'s|your) spirit totem washes over you\.$"
   name="totem"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:cures_on ()
system:add_cure ("totem")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The hole impaling your (left|right) (arm|leg) muscles closes\.$"
   name="curepierced_limb"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue("pierced_%1%2")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The hole in your throat prevents you from swallowing\.$"
   name="sympslitthroat1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("slitthroat")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Calendar"
   match="^The horizon glows with burnished shades of orange and red\, heralding the imminent arrival of Father Sun upon the rim of the world\.$"
   name="cal_day8"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>calendar:time (false)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Offense"
   match="^The icewall to the (.+?) quickly melts as you ignite it\.$"
   name="ignite_icewall"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("Ignite", "%1")</send>
  </trigger>
  <trigger
   group="System_Poisons"
   match="^The idea of eating or drinking is repulsive to you\.$"
   name="poison_anorexia"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:poison ("anorexia")</send>
  </trigger>
  <trigger
   group="System_Poisons"
   match="^The idea of heights makes you queasy suddenly\.$"
   name="poison_vertigo"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:poison ("vertigo")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The idea of putting something in your stomach sickens you\.$"
   name="sympanorexia1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("anorexia")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tarot"
   match="^The image of Kiakoda leaves your mind and the green glow around you fades away\.$"
   name="lostdef_world"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:lostdef ("world")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The jarring sound causes a cold pain to stab you in the forehead\.$"
   name="affpowerspikes1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("powerspikes")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tarot"
   match="^The jingling of the bells of a jester fall silent\.$"
   name="lostdef_fool"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:lostdef ("fool")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Calendar"
   match="^The last vestiges of midnight shadows flee as Mother Night hides herself from the luminous arrival of her shining mate as he chases her across the bowl of the sky\.$"
   name="cal_day10"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>calendar:time (false)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tarot"
   match="^The last vestiges of the Starleaper\ 's power leave your being\.$"
   name="lostdef_starleaper"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:lostdef ("starleaper")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The lethargy evaporates\, leaving you full of energy\.$"
   name="curelethargy"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue("lethargy")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The light of Holy Celestia surrounds you as blessed (Elohora|Japhiel|Methrenton|Raziela|Shakiniel) judges the unworthy\.$"
   name="affstarhymnchorale"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if not affs:has("deafness") then
  if "%1" == "Elohora" then
    affs:prone("paralysis")
  elseif "%1" == "Japhiel" then
    affs:add_queue("hallucinations")
  elseif "%1" == "Methrenton" then
    affs:add_queue("recklessness")
  elseif "%1" == "Raziela" then
    affs:add_queue("pacifism")
  else
    affs:add_queue("paranoia")
  end
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Bashing"
   match="^The lips of a female manticore peel back as she roars wildly\, the sound intensifying to such a point that bursts your eardrums and causes fierce pain to course violently through your body\.$"
   name="manticore_deafness"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ("truehearing")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The loud caw of a crow from above makes you shiver\, just as [A-Z][a-z]+ suddenly swoops down from the branches above and digs [hH](?:is|er) talons into your flesh\, dragging you back up into the trees\.$"
   name="affcrowtrees"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("in_trees")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The lyrical sound invokes a strange longing for ([A-Z][a-z]+)\.$"
   name="music_pfifth"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>for i=1,3 do
ColourTell ("crimson", "yellow", "PFIFTH ")
ColourNote ("white", "", " - %1")
end --if
offense:set_caster ("%1", "pfifth")
prompt:add_alert ("pf_%1", "PF %1", 5)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The maelstrom of rainbow colours whips violently around\, slamming (.+?) into you\.$"
   name="affmaelstrom"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:glamour("%1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The majesty of Mother Moon fades from your mind\.$"
   name="curesuccumbing"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:cured_queue ("succumb")
prompt:queue (function () system ["hme_priority"] = (GetVariable ("system_hme_priority") or "health")
display.option ("priority", system ["hme_priority"])
end, "curesuccumbing", true)</send>
  </trigger>
  <trigger
   group="System_KataMods"
   match="^The massive trauma to your head has damaged your skull and brain considerably\.$"
   name="kata_concussion"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("concussion")</send>
  </trigger>
  <trigger
   group="System_ShofangiMods"
   match="^The massive trauma to your head has damaged your skull and brain considerably\.$"
   name="shofangi_braindamage"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("concussion")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The mental weakness you suffer subsides\.$"
   name="curepowersink"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue("powersink")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The mud covering you slows your movement\.$"
   name="sympmuddy"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("muddy")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The mutt hanging off your arm keeps you from moving\.$"
   name="sympclampedmove"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if not affs:has("clamped_leftarm") and not affs:has("clamped_rightarm") then
  affs:add_queue("clamped_rightarm")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Calendar"
   match="^The night sky is clear\, and the stars twinkle like diamonds\.$"
   name="cal_night2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>calendar:time (true)</send>
  </trigger>
  <trigger
   group="System_Offense"
   match="^The ominous silence lifts as [A-Z][a-z]+ has fled beyond the range of the Soulless\.$"
   name="soulless_failed2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute ("sys on")
display.warning ("Soulless Failed")
EnableTrigger ("soulless_try", false)
EnableTrigger ("soulless_failed1", false)
EnableTrigger ("soulless_failed2", false)</send>
  </trigger>
  <trigger
   group="System_Offense"
   match="^The ominous silence lifts as your concentration is broken\.$"
   name="soulless_failed"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>for i = 1,5 do
display.success ("Soulless Failed")
end
EnableTrigger ("soulless_try", false)
EnableTrigger ("soulless_failed1", false)
EnableTrigger ("soulless_failed2", false)</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The oppressive whispering in your mind dies out\.$"
   name="cureegovice"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("egovice")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The overwhelming power of .+? forces you to humbly kneel down\.$"
   name="sympkneeling"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone()</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The pain in your (left|right) (hip|shoulder) recedes as the blood clot there dissolves\.$"
   name="cureclot"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>prompt:queue (function ()
system:cured_clot ("%1%2")end, "cured_clot", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The pain in your chest clears as your heart resumes its normal rhythm\.$"
   name="curechestpain"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:cured_queue ("chestpain")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The pain in your gut subsides as health returns to your internal organs\.$"
   name="cureburstorgans"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("burstorgans")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The pain in your gut subsides as health returns to your internal organs\.$"
   name="cureburst_organs"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("burstorgans")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The pain in your gut subsides as your innards regenerate\.$"
   name="curedisemboweled"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("disemboweled")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The pains in your stomach subside\.$"
   name="curerupturedgut"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("rupturedstomach")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The patience of a saint surrounds you\, and you refuse to hurry\.$"
   name="curedebatehurry"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:del_queue("debate_hurry")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The phantom shadows that plague your mind are lifted\.$"
   name="curephantoms"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:cured_queue ("phantoms")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The plague of bedeviling sickness causes your insides to clench in sheer agony\.$"
   name="bedeviled_confirmed"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>prompt:queue (function () nocure:bedeviled_confirmed () end, "bedeviled_confirmed", true)</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The potion burns through your veins\, destroying the deadly poisons that are killing you\.$"
   name="curecrotamine"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>for k,v in ipairs ({"crotamine_1", "crotamine_2", "crotamine_3", "crotamine_4"}) do
if affs:has (v) then
 system:cured_queue (v)
end --if
end --for</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The potion flows down your throat without effect\.$"
   name="offbal_elixir"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>act:offbal_elixir ()</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^The potion has no discernable effect\.$"
   name="nocure_apply_health_to_head"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>nocure:check ("apply_health_to_head")
EnableTrigger ("nocure_apply_health_to_head", false)</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^The potion has no discernable effect\.$"
   name="nocure_apply_health_to_chest"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>nocure:check ("apply_health_to_chest")
EnableTrigger ("nocure_apply_health_to_chest", false)</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^The potion has no discernable effect\.$"
   name="nocure_apply_health_to_legs"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>nocure:check ("apply_health_to_legs")
EnableTrigger ("nocure_apply_health_to_legs", false)</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^The potion has no discernable effect\.$"
   name="nocure_apply_health_to_arms"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>nocure:check ("apply_health_to_arms")
EnableTrigger ("nocure_apply_health_to_arms", false)</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^The potion has no discernable effect\.$"
   name="nocure_apply_health_to_gut"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>nocure:check ("apply_health_to_gut")
EnableTrigger ("nocure_apply_health_to_gut", false)</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The potion heals and soothes you\.$"
   name="curehealth"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>prompt:queue (function ()
system:cured_health ("drink_health")
end, "cured_health", true)</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The potion slides off your oily skin\.$"
   name="sympslickhealth"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if bals:get ("elixir") == 0.5 then
prompt:queue (function ()
fst:fire ("elixir", "now")
system:del_cure ()
affs:add ("slickness")
end, "sympslickhealth", true)
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tarot"
   match="^The presence of the Warrior leaves you\.$"
   name="lostdef_warrior"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:lostdef ("warrior")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The presence of your Deity\'s avatar soothes you\.$"
   name="exalt_aura"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:cures_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The psychedelic lights around ([A-Z][a-z]+) flare and shoot out at you\.$"
   name="aura_psychedelia"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_custom ("psychedelia", "herb", "eat pennyroyal")</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^The pull of the earth roots you more firmly to the ground\.$"
   name="def_malkuth"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("malkuth", nil, nil, "fromdef")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Cosmic"
   match="^The quickening within your being subsides\.$"
   name="lostdef_quickened"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:lostdef ("quickened")
prompt:del_alert ("quick")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The raging fire about your skin goes out\.$"
   name="cureablaze"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue("ablaze")</send>
  </trigger>
  <trigger
   group="System_Cleanse"
   match="^The raging fire about your skin goes out\.$"
   name="cureablaze_cleanse"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:del_queue({"mucous", "gunk", "muddy", "ectoplasm", "mucous", "stinky", "ablaze",})
if affs:has ("sap") then
 system:cured_queue ("sap")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Rituals"
   match="^The red haze of [rR]ubeus already fills you\.$"
   name="has_rubeus"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("rubeus")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The reverberating sound echoes through your head\, pounding you with excruciating pain\.$"
   name="affminorsecond"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:add_check ("recklessness")
-- TODO: auto-enable truehearing?</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The salve dissolves and quickly disappears after you apply it\.$"
   name="offbalsalve"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
act:offbal_salve ()
end, "offbal_salve", true)</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The salve fizzles away without effect\.$"
   name="offbal_salve_wtf"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>prompt:queue (function () act:offbal_salve () end, "offbal_salve_wtf", true)</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The salve slides off your oily skin\.$"
   name="sympslicksalve"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if bals:get ("salve") == 0.5 then
prompt:queue (function ()
 fst:fire ("salve", "now")
 system:del_cure ()
 affs:add ("slickness")
end, "sympslicksalve", true)
end</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The sapping of your power subsides\.$"
   name="curepowersap"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("powersap")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The screeching fades away from your inner hearing\.$"
   name="cureachromatic"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("achromaticaura")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The sense of impending doom lifts\.$"
   name="cureomen"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:cured_queue ("omen")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Calendar"
   match="^The shadows have lengthened\. It is late afternoon in Lusternia\.$"
   name="cal_day15"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>calendar:time (false)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The sharp pain in your foot from the weapon pinning it to the ground makes you incapable of anything other than thinking of escaping it\.$"
   name="symppinleg"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if not affs:has("pinleg") then
  affs:add_queue ("pinleg")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The shimmering image of White Hart appears and stares directly at you\. As the ghostly spirit throws back his head and bellows in harmony with the music\, the beauty of his voice blasts you\, causing your entire body to reel against the blinding force\.$"
   name="affwildarrane1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone("paralysis")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Calendar"
   match="^The sky lightens and stars fade as Father Sun approaches the horizon in his neverending quest to capture Mother Night\.$"
   name="cal_day4"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>calendar:time (false)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The slithering tentacles sprouting from ([A-Z][a-z]+) wrap around you and then snap off of [hH](?:im|er)\, entangling you like bloody ropes\.$"
   name="afftorsoblock"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone ("entangled")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The smoke envelops you\, leaving behind a thick coat of sticky slime\.$"
   name="affnecroecto"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("ectoplasm")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Calendar"
   match="^The soft glow of the sun reflects in a beautiful array of colou?rs upon the water\'s surface\, an almost entrancing display of nature\'s grace\.$"
   name="cal_day18"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>calendar:time (false)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   lines_to_match="2"
   match="^The song of an angelic choir fills the air with a blazing white light\.\nYou find you must cover your eyes and drop to your knees\.$"
   multi_line="y"
   name="affstarhymn1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone()
prompt:queue (function ()
 if affs:has ("prone") then defs:lostdef ("sixthsense") end
end, "starhymn1", true)</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The sores on your skin dry up and disappear\.$"
   name="curepox"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("pox")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The sounds of the world gradually return to you\.$"
   name="curedeafness"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("deafness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Bashing"
   match="^The spectre of Rudzine Reltine whispers his story to you\, and the raw emotion becomes manifest\, causing a painful burst behind your eyes\.$"
   name="rudzine_blackout"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add ("blackout")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Highmagic"
   match="^The sphere of Malkuth already binds you to the earth\.$"
   name="has_malkuth"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("malkuth")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The spinning emerald around [A-Z][a-z]+ suffuses you with a deep green glow\.$"
   name="harmonics_emerald"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:cures_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tarot"
   match="^The starleaper already protects you\.$"
   name="has_starleaper"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:ondef ("starleaper")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The sticky black gunk slows you down as you squelch to the \w+\.$"
   name="sympgunkmove"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("gunk")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The sticky sap coating your body causes you to move unbearably slowly\.$"
   name="affdruidsap2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if not affs:has("sap") then
affs:add ("sap")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The sticky sap coating your body causes you to move unbearably slowly\.$"
   name="sympsap"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>sca:check ("slowed", "sap")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The stinging feeling fades\.$"
   name="curesensitivity"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("sensitivity")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Ent"
   match="^The stinking gas creeps deep down your throat\, making you vomit violently\.$"
   name="poison"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>display.warning ("Poison!")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The stomach cramps lift and your gorge settles\.$"
   name="curevomitingblood"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("vomitingblood")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Calendar"
   match="^The sun has awakened from its long slumber\. It is dawn\.$"
   name="cal_day9"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>calendar:time (false)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The sun has rendered you too weak to move a muscle\.$"
   name="sympsunallergy2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
if string.find (prompt ["status"], "p")  then
 affs:del ("sunallergy_1")
 affs:add ("sunallergy_2")
end --if
end, "sympsunallergy_2", true)
affs:prone ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Calendar"
   match="^The sun reaches the zenith of the firmament\, pausing in his quest to allow the land to bask in his shining golden rays\.$"
   name="cal_day11"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>calendar:time (false)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Calendar"
   match="^The sun sits at its apex\. It is exactly noon\.$"
   name="cal_day12"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>calendar:time (false)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The tendon in your (left|right) leg reattaches itself\.$"
   name="curetendons"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("tendon_%1leg")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The thorny vines on your (left|right) (arm|leg) wither away\.$"
   name="cureonethorn"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:del_queue ("lashed_%1%2")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The thought of eating sickens you\.$"
   name="sympanorexia2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("anorexia")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The tiny red mushrooms on the ground release a cloud of yellow spores\, which travel up your nose and make your eyes water\.$"
   name="affdruidspores"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("masked", 1)
prompt:queue (function ()
 affs:add_custom ("druidspores", "herb", "eat pennyroyal")
 defs:lostdef ("protection", "silent")
end, "affs_add_druidspores", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The torr?id wind fans the flames on you\, roasting your flesh\.$"
   name="aff_pyro_twirl"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:burning()</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The twitching in your face settles down\.$"
   name="curegashedcheek"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("gashedcheek")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The ugly\, cankerous sores on your skin clear up and close\.$"
   name="curetaintsick"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:del_queue("taint_sick")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The unnatural feeling of peace leaves you\.$"
   name="curepeace"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("peace")</send>
  </trigger>
  <trigger
   group="System_Cleanse"
   match="^The vile black gunk that covers your body dissolves\.$"
   name="curegunk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if affs:has ("sap") then
 system:cured_queue ("sap")
end
affs:del_queue("gunk")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The walls close in to suffocate you \- you must escape\!$"
   name="affclaustrophobia"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("claustrophobia")
local hn = flags:get_check ("hex") --if I got hit by hex
  if hn then
    if hn==1 then --only once before getting the affliction
      flags:del_check ("hex")--I have detected all the hex attacks 
  flags:del_check ("recklessness")--and I don't need to check for reckless
    else
  flags:add_check ("hex", 1)--I still have one more hex attack to detect
    end--if
end --if</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The warping of time lightens\,? but you are still (minorly|moderately|majorly|massively) warped\.$"
   name="curetimewarp1"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>local threshold= string.gsub ("%1", "ly", "")
if threshold == "minor" then threshold = "slight"
affs:add_queue ("insawarped", "timewarped", -4, threshold)</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^The white light washes over you\, and you stagger back as the balefire erases something deep within you\.$"
   name="harmonics_balestonefire"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:damaged()
affs:add_queue ("insawarped", "timewarped", 7)</send>
  </trigger>
  <trigger
   custom_colour="17"
   enabled="y"
   group="System_Ent"
   match="^The white mist here washes over you in a wave of ghostly tendrils\.$"
   name="sleepmist"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="deeppink"
  >
  <send>display.warning("Dreamweaver attack!")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The white sphere that surrounds [A-Z][a-z]+ pulses\, emitting a high\-pitched screech and flashing a series of bright lights\.$"
   name="aff_aeonics_aeonfield"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTrigger ("aeonics_aeonfieldhit", true)
prompt:queue (function () EnableTrigger ("aeonics_aeonfieldhit", false) end, "aff_aeonics_aeonfield")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^The words of the scroll have no effect on you\.$"
   name="offbal_scroll"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>prompt:queue (function ()
flags:del ("healing")
bals:offbal ("scroll")
fst:disable ("scroll")
magic:used ("healing")
end, "offbal_scroll", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The world spins in darkness as the curse of the dark moon hits you\.$"
   name="affmoondark"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^The wrathful canticle of Ashtorath rings ominously in your ears\.$"
   name="affnecrocanticle"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local plague = 0
for k, a in ipairs({ "pox", "scabies", "epilepsy", "worms", "rigormortis" }) do
  if affs:has(a) then
    plague = plague + 1
  end
end
if plague &gt;= 5 then
  affs:add_queue("vapors")
elseif plague == 0 then
  affs:freezing ()
else
  local wrath = {
    [1] = "recklessness",
    [2] = "confusion",
    [3] = "stupidity",
    [4] = "sensitivity"
  }
  affs:add_queue(wrath[plague])
end
flags:add_check ("recklessness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Offense"
   match="^There are no poisons on that item at present\.$"
   name="wipingpoisons2"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^There are no trees from which to climb\.$"
   name="climbing_notrees"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
flags:del ("climbing")
flags:del_check ("intrees")
affs:del ("intrees")
fst:disable ("climbing")
end, "climbing_notrees", true)
</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_WNocure"
   match="^There are no vines around you\! You begin to writhe helplessly\, throwing your body off balance\.$"
   name="nclashed"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
nocure:writhe({"lashed_leftarm", "lashed_rightarm", "lashed_leftleg", "lashed_rightleg"})
end, "ncwrithe", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^There is a loud explosion in the distance followed by a whistling sound that becomes louder and louder\. You look up and see a glittering butterfly fluttering away\,? followed by the shadow of an enormous boulder\,? which then smashes into you\.$"
   name="aff_para_butterfly2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:damaged ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^There is a mangy mutt hanging off your (left|right) arm\!$"
   name="sympclampedarm"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("clamped_%1arm")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_WNocure"
   match="^There is no beast clamped onto you\! You begin to writhe helplessly\, throwing your body off balance\.$"
   name="ncclamped"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
nocure:writhe ({"clamped_left", "clamped_right"})
end, "ncclamped", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_MagicRecharge"
   match="^There is not enough energy in this cube to fully recharge that item\.$"
   name="magicrecharge_emptycube"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (flags:get ("todo_free") or "nil") == "recharge" then
todo:done ("recharge", "free")
magic:recharge_abort ("Missing Recharges")
end--if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^There is nothing in the pipe to light\.$"
   name="pipeslight_empty"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (affs:has ("sap") or affs:has ("aeon") or affs:has ("choke")) then
if flags:get ("curing") and flags:get ("curing") == "pipes_unlit" then
 fst:enable ("sca")
 flags:add ("curing", "pipel")
 Execute ("pipel")
end --if
elseif flags:get ("pipes_unlit") then
Execute ("pipel")
end --if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^There is nothing to fear but fear itself\.$"
   name="curefear1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:cured_queue ("fear")
fst:disable ("fear")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Thick black smoke wreaths you\, and you begin to hack and cough\.$"
   name="aff_pyro_asthma"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("asthma")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Thick shadows drag against your every action\.$"
   name="sympchoke"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>------symp</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Thin tendrils of shadow reach out from [A-Z][a-z]+ to rake across your skin\.$"
   name="affbleed_nightsweats"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("bleeding", 150)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Voting"
   match="^Think there are too many bards\, scholars\, and pilgrims running around\? Vote for Lusternia to help clear them out\.$"
   name="vote1"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   group="System_Cures"
   match="^Though still shivering\, you are no longer frozen solid\.$"
   name="curefrozen"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("frozen")
affs:add_queue("chills")
defs:del_queue("fire", "silent")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Three of the pale spirits haunting you disperse in a chilling\, biting winter wind\.$"
   name="affwildarrane4"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:add_check ("recklessness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Throwing a kick in the Spronghai style\, [A-Z][a-z]+ slams [hH](?:is|er) (?:left|right) heel on your (chest|gut|head|left arm|left leg|right arm|right leg)\.$"
   name="nekotai_spronghai"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local part = string.gsub("%2", " ", "")
wounds:monk_attack ({"Nekotai",}, part)
affs:add_queue("hemophilia")
flags:add_check ("recklessness")
affs:add_queue ("bleeding", 250)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Thunder roars and a bolt of lightning strikes you\, knocking you to the ground\.$"
   name="aff_aero_prone"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone ()
flags:add_check ("recklessness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Tight bindings (?:cling to you\, making that impossible|prevent you from moving)\.$"
   name="sympentangled"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone("entangled")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Time no longer warps around you\.$"
   name="curetimewarp2"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:add_queue ("insawarped", "timewarped", -1, "none")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^Tiny tremors spread through your body as the world seems to slow down\.$"
   name="ondef_speed"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>prompt:queue (function ()
affs:del ("no_speed")
fst:disable ("ondef_speed")
defs:ondef ("speed")
end, "ondef_speed", true)</send>
  </trigger>
  <trigger
   group="System_Skills"
   lines_to_match="2"
   match="^To see your abilities within each skill\, type AB \&lt;Skill\&gt;\.\n^HELP \&lt;skill\&gt; to get more information on a skill\.$"
   multi_line="y"
   name="skills_end"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTriggerGroup ("System_Skills", false)
silent = nil
display.system ("Skills Installed")
skills:get_available ()
skills:save ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Calendar"
   match="^Today is the (\d+).+? of (\w+)\, (\d+) years after the Coming of Estarra\. The phase of the moon is that of .+?\.$"
   name="cal_date"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>calendar:date (%1, "%2", %3)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   lines_to_match="2"
   match="^Tossing back your hair\, you rub some life in your cheeks and smile sensually\.\nYou transform yourself into a gorgeous beauty\!$"
   multi_line="y"
   name="defup_role_gorgeous"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:add_queue ("role", "gorgeous")</send>
  </trigger>
  <trigger
   group="System_Gear"
   match="^Total Containers\:\s+\d+$"
   name="potionlist_end"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTrigger ("potionlist_start", false)
EnableTrigger ("potionlist_get", false)
EnableTrigger ("potionlist_more", false)
EnableTrigger ("potionlist_end", false)
gear:check ("vials")</send>
  </trigger>
  <trigger
   group="System_Magiclist"
   match="^Total Magic Items\: \d+$"
   name="magiclist_done"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function () 
 magic:sync_done () 
 EnableTriggerGroup ("System_Magiclist", false)
end, "magiclist_done")</send>
  </trigger>
  <trigger
   group="System_Pipel"
   match="^Total Pipes\: (\d+)$"
   name="pipes_assign"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (tonumber("%1")&lt;3) then
  display.warning("not enough pipes")
else
  pipes:assign()
end--if
EnableTriggerGroup("System_Pipel", false)
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Cosmic"
   match="^Touching upon cosmic probabilities, you weave a net of safety around yourself\.$"
   name="ondef_timeslip"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("timeslip")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Voting"
   match="^Trader Bob says\, \&quot;The credit market prices are all my fault\! Vote for Lusternia if you want cheaper credits\!\&quot;$"
   name="vote5"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Twirling (.+?) so fast that it whistles\, [A-Z][a-z]+ grazes your (head|chest|gut|left arm|left leg|right arm|right leg)\, opening up a deep gash\.$"
   name="ninjakari_ninchu"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local part = string.gsub("%2", " ", "")
wounds:monk_attack({"Ninjakari",}, part, 0, "%1")
flags:add_check ("recklessness")
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Twirling .+?\, [A-Z][a-z]+ shreds your (left|right) (arm|leg) (?:with|in) the Angkai style\, sending piercing pain through your nerves\.$"
   name="nekotai_angkai_limb"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local part = "%1%2"
wounds:monk_attack ({"Nekotai"}, part)
system:poisons_on ()
affs:add_queue("pierced_"..part)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Bashing"
   match="^Twisting around\, a spider spirit spurts sticky strands of web at you from the spinners on his abdomen\.$"
   name="sspider_entangled"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone ("entangled")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Twisting in a circle\, [A-Z][a-z]+ plunges .+? into your chest\, smashing your chest inward\.$"
   name="nekotai_sprongma_chest"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("collapsedlungs")
wounds:monk_attack ({"Nekotai",}, "chest")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Twisting in a circle\, [A-Z][a-z]+ plunges .+? into your gut\, driving the foot so hard that it snaps your spine\.$"
   name="nekotai_sprongma_gut"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("severedspine")
wounds:monk_attack ({"Nekotai",}, "gut")</send>
  </trigger>
  <trigger
   group="System_Gear"
   match="^Type MORE to continue reading\. \(\d+\% shown\)$"
   name="potionlist_more"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SendNoEcho ("more")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Ugly sores break open up\s?on your skin\, seeping with a bloody yellow mucous\.$"
   name="affpox1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("pox")
local hn = flags:get_check ("hex") --if I got hit by hex
  if hn then
    if hn==1 then --only once before getting the affliction
      flags:del_check ("hex")--I have detected all the hex attacks 
  flags:del_check ("recklessness")--and I don't need to check for reckless
    else
  flags:add_check ("hex", 1)--I still have one more hex attack to detect
    end--if
end --if</send>
  </trigger>
  <trigger
   group="System_Poisons"
   match="^Unthinking paranoia overcomes you\.$"
   name="poison_paranoia"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:poison ("paranoia")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Unthinking terror seizes your mind as [A-Z][a-z]+ looms up before you\, [hH](?:is|er) visage nightmarish and impossibly powerful\.$"
   name="affascendfear"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("fear")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Offense"
   match="^Upon impact with the ground\, the tarot card blossoms into a hazy image of ancient Celest\, with glittering seashell towers and bathed in glorious light\. Suddenly\, the image explodes and crashes down around you\, leaving behind nothing but piles of rubble\.$"
   name="fall_"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("fall")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Upon reaching your destination your thigh buckles\, causing you to stumble and fall\.$"
   name="sympbucklethigh"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if not (affs:has("sliced_leftleg") or affs:has("sliced_rightleg")) then
  affs:masked (1)
end
affs:prone ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Voting"
   match="^VOTE LUSTERNIA or the furrikin gets it\!$"
   name="vote20"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   match="^Veritus n\'Rotri bows to you \- the lesson in (\w+) is over\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send ("learn 15 %1 from veritus")</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^Vines from the looming trees drape about your form\, clinging to you as you stumble along the twisted path\.$"
   name="affdruidpathtwist2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone("entangled")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Vines reach out and slither up around you\, wrapping you in a tight grip\.$"
   name="aff_liveforest"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone("entangled")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^Violent rain slams into your skin so hard that they hit you like hot needles\.$"
   name="lostdef_aquarandom"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ({ "fire", "frost" })
display.warning ("defenses lost")</send>
  </trigger>
  <trigger
   group="System_Rainbows"
   lines_to_match="2"
   match="^Vivid blue spirals spin wildly around you\, and suddenly you are seeing double\.\nBlood drips from your nose as the rainbow lights swirl around you in a maddening frenzy\.$"
   multi_line="y"
   name="affrainbow_dizziness"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("dizziness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Voting"
   match="^Vote for Lusternia to make all your dreams come true\! \(Disclaimer\: Only if your dreams involve more players enjoying Lusternia\.\)$"
   name="vote19"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="System_Voting"
   match="^Vote here\: http\:\/\/www\.ironrealms\.com(?:.*)$"
   name="votex"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="System_Cosmic"
   match="^Weaving the cosmic threads into a cloak\, you settle it upon your shoulders and feel somewhat more protected\.$"
   name="ondef_cloak"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("cloak")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_MagicRecharge"
   lines_to_match="2"
   match="^What are you trying to recharge\?\nSyntax\: RECHARGE \&lt;item\&gt; FROM \&lt;cube\&gt;$"
   multi_line="y"
   name="magicrecharge_missingitem"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (flags:get ("todo_free") or "nil") == "recharge" then
todo:done ("recharge", "free")
magic:recharge_abort ("Missing Item")
end--if</send>
  </trigger>
  <trigger
   group="System_Gear"
   match="^What container are you trying to refill\?$"
   name="novial"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>gear:refilled (true)</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^What do you wish to examine\?$"
   name="magicsync_missingitem"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (flags:get ("todo_free") or "nil") == "magic_sync" then
todo:done ("magic_sync", "free")
display.warning ("MISSING Item!")
magic:sync_done ()
end --if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_MagicRecharge"
   lines_to_match="2"
   match="^What energy cube are you trying to use\?\nSyntax\: RECHARGE \&lt;item\&gt; FROM \&lt;cube\&gt;$"
   multi_line="y"
   name="magicrecharge_missingcube"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (flags:get ("todo_free") or "nil") == "recharge" then
todo:done ("recharge", "free")
magic:recharge_abort ("Missing Cube")
end--if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^What is it that you wish to drink\?$"
   name="missingvial"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>display.warning ("vials are possibly empty - check you potionlist")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^What is it you wish to light\?$"
   name="pipeslight_unknown"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (affs:has ("sap") or affs:has ("aeon") or affs:has ("choke")) then
if flags:get ("curing") and flags:get ("curing") == "pipes_unlit" then
 fst:enable ("sca")
 flags:add ("curing", "pipel")
 Execute ("pipel")
end --if
elseif flags:get ("pipes_unlit") then
 Execute ("pipel")
end --if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^What is it you wish to smoke\?$"
   name="smoking_empty"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>pipes:err ("empty")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^What were you thinking\? You have no desire to find a mate\.$"
   name="curelove"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("love")
defs:del_queue ("love")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Whirling (.+?)\, [A-Z][a-z]+ slams it bluntly into your (head|chest|gut|left arm|left leg|right arm|right leg) with both hands\.$"
   name="tahtetso_tahtote"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local part = string.gsub("%2", " ", "")
wounds:monk_attack ({"Tahtetso"}, part)
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Whispering to [hH](?:im|er)self\, [A-Z][a-z]+ points at you and a silver light flashes across your field of vision\.$"
   name="affmoonsuccumb1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:reject_try ()
prompt:queue (function ()
affs:add ("succumb")
display.warning ("Watch mana!")
system ["hme_priority"] = "mana"
display.option ("priority", "mana")
if affs:has ("blackout") then
 flags:add_check ("reset_hme")
end --if
end, "affs_add_succumb", true)</send>
  </trigger>
  <trigger
   group="System_NinjakariMods"
   match="^White hot pain stabs through your head as the chain lashes it with a sickening crack\, ripping away chunks of your scalp\.$"
   name="ninjakari_concussion"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("concussion")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^White teeth shining brightly\, you flash a compellingly charismatic smile to all around you\.$"
   name="charismaticsmile"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:cures_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Why would you reject that person\?$"
   name="curelust2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if flags:get ("reject") then
affs:lusted (flags:get ("reject"), true)
flags:del ("reject")
fst:disable ("reject")
end--if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Voting"
   match="^Win a chance at a free cookie\, Vote for the Pastries\! I mean\, um\.\.\. Vote for Lusternia\. PS\. Power to the Pastries\!$"
   name="vote17"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^With [hH](?:is|er) deadly tail\, [A-Z][a-z]+ strikes out at you and stings you\.$"
   name="affsting"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("masked", 1)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^With a cold smile\, .+? digs [hH](?:is|er) claws into your flesh\, sending a bolt of excruciating pain through your body\.$"
   name="affdemon_nifilhema"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add ("masked", 1)
prompt:queue (function ()
 if string.find (prompt ["status"], "p") then
  affs:add ("shackled")
  affs:masked (-1)
 end
 prompt:add_alert ("demon", "Demon", 8, -1)
end, "demon_nifilhema", true)
affs:add_queue ("masked", 1)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^With a dark chant\, you suck out the nourishment from @system_target\'s body\.$"
   name="feed_"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("feed")
offense ["feeds"] = offense ["feeds"] or {}
offense ["feeds"] [GetVariable ("system_target")] = (offense ["feeds"] [GetVariable ("system_target")] or 0)+1</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^With a deft pirouette\, [A-Z][a-z]+ whirls (.+?) about (?:[hH]im|[hH]er)self\, bringing it crashing into the side of your head\.$"
   name="ninjakari_umubah"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack (nil, "head", nil, "%1")
affs:add ("blackout")
if wounds:get ("head") &gt; 800 then
  affs:add_queue({"confusion", "fracturedskull",})
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^With a flick of [hH](?:is|er) wrist\, [A-Z][a-z]+ wraps .+? around your (left|right) (arm|leg) and then jerks it off with a violent twist\, causing your limb to twist at an alarming angle\.$"
   name="ninjakari_ninthugi_limb"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack (nil, "%1%2", nil, "ninthugi")
affs:add_queue("twisted_%1%2")
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^With a flick of [hH](?:is|er) wrist\, [A-Z][a-z]+ wraps .+? around your chest and then jerks it off with a violent twist\, causing your ribcage to crack and splinter\.$"
   name="ninjakari_ninthugi_chest"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack (nil, "chest", nil, "ninthugi")
affs:add_queue("brokenchest")
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^With a flick of [hH](?:is|er) wrist\, [A-Z][a-z]+ wraps .+? around your gut and then jerks it off with a violent twist\, causing the blood to spout from your mouth\.$"
   name="ninjakari_ninthugi_gut"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack (nil, "gut", nil, "ninthugi")
affs:add_queue("dysentery")
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^With a flick of [hH](?:is|er) wrist\, [A-Z][a-z]+ wraps .+? around your head and then jerks it off with a violent twist\, causing your skull to crack and bleed\.$"
   name="ninjakari_ninthugi_head"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack (nil, "head", nil, "ninthugi")
affs:add_queue("fracturedskull")
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^With a flourish\, ([A-Z][a-z]+) jerks out the blades embedded in the bones of your arms\, sending bone fragments flying as (?:[sS]h|[hH])e disarms you\.$"
   name="shofangi_disarm"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("grappled", nil, "%1")
affs:add_queue ("broken_leftarm")
affs:add_queue ("broken_rightarm")
wounds:monk_attack (nil, "leftarm")
wounds:monk_attack (nil, "rightarm")
system:poisons_on ()
EnableTriggerGroup ("System_ShofangiMods", true)
prompt:queue (function ()
 EnableTriggerGroup ("System_ShofangiMods", false)
end, "shofangi_disarm")
affs:add_queue ("disarmed", "silent")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^With a grand gesture of righteous fury\, ([A-Z][a-z]+) bedevils you with [hH](?:is|er) afflictions\.$"
   name="affhealbedevil"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--When you get bedeviled, it's like the plague, where afflictions will pop up when you cure them
affs:add_queue("bedeviled")</send>
  </trigger>
  <trigger
   custom_colour="17"
   enabled="y"
   group="System_Ent"
   match="^With a great rumble\, the small fissures on the ground widen to large cracks\, sending great gouts of poisonous clouds roiling and churning into the air\, making breathing difficult and your eyes water painfully\.$"
   name="pollute3"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="deeppink"
  >
  <send>display.warning ("Pollute THIRD! Move, MOVE!")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^With a grim smile\, [A-Z][a-z]+ touches the trees and sap courses out in a thick syrup that lunges at you\, coating you in the viscid liquid\.$"
   name="affdruidsap1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if flags:get_check ("intrees") then
  affs:add ("sap")
  EnableTrigger("curejinx", true)
  prompt:queue (function () EnableTrigger("curejinx", false) end, "affdruidsap")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^With a hiss\, ([A-Z][a-z]+) slams [hH](?:is|er) nekai against your throat and presses against your windpipe\, painfully choking the life from you\.$"
   name="nekotai_choke"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("grappled", "head", "%1")
prompt:unqueue ("ungrappled_%1")
wounds:monk_attack ({"Nekotai",}, "head")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^With a look of agony on his face\, @system_target manages to writhe (?:[Hh]im|[Hh]er)self free of the cross\.$"
   name="crucifix_writhe"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>for i=1,2 do
display.enemy ("crucified no more")
end
prompt:add_alert ("uncrucifix", "UnCrucifix", 3)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^With a look of concentration\, [A-Z][a-z]+ unleashes a powerful kick at your (chest|gut|head|left arm|left leg|right arm|right leg)\.$"
   name="ninjakari_kicker"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local part = string.gsub("%1", " ", "")
wounds:monk_attack (nil, part, nil, "kick")
affs:add_queue ("numb", part)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Tracking"
   match="^With a look of intense concentration, (@system_target)\'s fingers pluck at non\-existent objects in the air\, then stops and smiles with satisfaction\.$"
   name="timeslip"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.enemy ("Timeslip - %1")
prompt:add_alert ("timeslip_%1", "Timeslip %1", 12)</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^With a loud crack\, your broken nose straightens and heals\.$"
   name="curebrokennose"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("brokennose")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^With a loud hiss of steam\, you sigh in relief as the waters put out the flames on your body\.$"
   name="cureablazewater1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:del_queue("ablaze")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^With a loud hiss\, .+? spits a stream of foul liquid into your face\.$"
   name="affbeastpoison"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:poisons_on()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_System_TahtetsoMods"
   match="^With a quick snap of the wrist\, [A-Z][a-z]+ swings .+? about\, slamming one end into your (left|right) leg\. Searing lancets of pain jolt up your leg as your foot is pulverised beneath the weapon\.$"
   name="tahtetso_bomrakini_leg"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("crushedfoot_%1leg")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^With a quick spin\, [A-Z][a-z]+ kicks you in the (chest|gut|head|left arm|left leg|right arm|right leg) with [hH](?:is|er) (?:left|right) foot\.$"
   name="kata_kick"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local part = string.gsub("%1", " ", "")
wounds:monk_attack ({"Nekotai", "Ninjakari", "Shofangi", "Tahtetso",}, part, 300, "kick")
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^With a quick spin\, [A-Z][a-z]+ strikes your (head|chest|gut|left arm|left leg|right arm|right leg) with (.+?)\.$"
   name="tahtetso_tahto"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local part = string.gsub("%1", " ", "")
wounds:monk_attack ({"Tahtetso",}, part)
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^With a slow\, jerking dance\, [A-Z][a-z]+ points at you and lowers [hH](?:is|er) arms\, and you feel the world about you slow\.$"
   name="affmoonaeon1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTrigger ("afftarotaeon1", true)
EnableTrigger ("afftarotaeon2", true)
prompt:queue (function ()
 EnableTrigger ("afftarotaeon1", false)
 EnableTrigger ("afftarotaeon2", false)
end, "affmoonaeon1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^With a snarl of contempt\, [A-Z][a-z]+ allows you to slide free of (?:[hH]is|[hH]er) antlers\.$"
   name="cureantlerimpale"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("impaled", -1)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^With a snarl\, ([A-Z][a-z]+) clutches your throat and begins to painfully choke the life from you\.$"
   name="kata_choke"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("grappled", "head", "%1")
prompt:unqueue ("ungrappled_%1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^With a sudden strike\, ([A-Z][a-z]+) skewers you with two nekais in the (chest|head|gut|left arm|right arm)\, holding you in place\.$"
   name="nekotai_ootangk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local part = string.gsub("%2", " ", "")
affs:add_queue ("grappled", part, "%1", "ootangk")
prompt:unqueue ("ungrappled_%1")
wounds:monk_attack ({"Nekotai",}, part)
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^With a swift drive\, [A-Z][a-z]+ jabs your head with (.+?)\.$"
   name="tahtetso_bairakobo"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack (nil, "head")
affs:add_queue ("grappled", "head")
affs:add_queue ("windpipe")
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^With a whirl of [hH](?:is|er) shofa\, ([A-Z][a-z]+) charges recklessly from the \w+ into you\, spearing the twin blades into your ribs and brutally hooking them\, knocking you to the ground\.$"
   name="shofangi_bullcharge"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("grappled", "gut", "%1")
prompt:unqueue ("ungrappled_%1")
affs:prone()
wounds:monk_attack (nil, "gut", nil, "bullcharge")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^With an heroic effort you manage to writhe yourself free from the blade through your (left|right) foot\.$"
   name="curepinleg"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("pinleg", -1)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^With an heroic effort you manage to writhe yourself free from the blade through your gut\.$"
   name="cureimpale"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("impaled", -1)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^With an heroic effort you manage to writhe yourself free from the cross\.$"
   name="curecrucified"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:cured_queue ("crucified")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^With blinding speed\, [A-Z][a-z]+ darts forward and pecks out your (left|right) eye\, and you scream in agony as blood flows down your face\. The eyeball plops messily to the ground\.$"
   name="affcroweyepeck"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("peckedeye_%1")</send>
  </trigger>
  <trigger
   group="System_Offense"
   match="^With seeming reluctance\, a hideous archdemon obeys your command\.$"
   name="demon_passive"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>offense:passive ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^With the whistling of .+? reaching a high-pitched whine\, [A-Z][a-z]+ swings [hH](?:is|er) chain at you\, but you are able to jump mostly out of the way for a glancing blow\.$"
   name="ninjakari_ughathalogg_glancing"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack (nil, "gut", nil, "ughathalogg")
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^With the whistling of .+? reaching a high-pitched whine\, [A-Z][a-z]+ swings [hH](?:is|er) chain into your gut\, tearing open the torso as organs burst forth in an explosion of blood\.$"
   name="ninjakari_ughathalogg"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack (nil, "gut", nil, "ughathalogg")
system:poisons_on ()
affs:add_queue("burstorgans")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Wounds open up all over your body and you start to bleed\.$"
   name="affshadowbeat2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("hemophilia")
affs:add_queue ("bleeding", 200)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Cosmic"
   match="^You (?:are )?already(?: are)? seeing death\.$"
   name="has_deathsight"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("deathsight")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You (?:are )?bleed(?:ing for)? (\d+) health\.$"
   name="affbleeding1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("bleeding", %1, true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You (?:take a drink|down the last drop) from (an? .*?(?:vial|bottle|stein|teapot).*?)\.$"
   name="drinking_potion"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>act:drinking ("%0")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You .+?\, no longer performing the role of the .+?\.$"
   name="lostdef_role"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ("role")</send>
  </trigger>
  <trigger
   group="System_Arena"
   match="^You accept [A-Z][a-z]+\'s challenge\, and enter the portal\, ready to do battle\."
   name="arena_spar_accept"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
flags:add_check ("arena")
fst:disable ("arena")
display.system ("Arena Mode Enabled")
EnableAlias ("arena_accept", false)
end, "arena_spar_accept", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Combat"
   match="^You adjust your attention spent parrying your (head|chest|gut|left arm|right arm|left leg|right leg)\.$"
   name="parry_done"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>bodypart = string.gsub ("%1", " ", "")
if flags:get ("parry") == bodypart then
parry:done (bodypart)
end --if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You allow the charm of Acquisitio to leave you and are no longer gripped by an unnatural need to accumulate things\.$"
   name="lostdef_acquisitio"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:del_queue ("acquisitio")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Highmagic"
   match="^You allow the charm of Acquisitio to leave you and are no longer gripped by an unnatural need to accumulate things\.$"
   name="lostdef_acquisitio1"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:lostdef ("acquisitio")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You almost lose your balance as .+? viciously shakes your (left|right) arm\, tearing your flesh and causing massive bleeding\.$"
   name="affclamp2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("clamped_%1arm")
affs:add_queue ("bleeding", 150)
flags:add_check ("recklessness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You already are a selfish bastard\.$"
   name="has_selfishness"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:add_queue ("selfishness")
affs:del ("no_selfishness")
fst:disable ("no_selfishness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Awaken"
   match="^You already are awake\.$"
   name="cureasleep2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if flags:get ("asleep") then
system:cured_queue ("asleep")
end--if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Combat"
   match="^You already are not putting any attention on parrying anything\.$"
   name="not_parrying"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if flags:get ("parry") then
parry ["current"] = {} --parry parts changed
parry ["unparried"] = true
flags:del ("parry")
fst:disable ("parry")
end --if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You already exude a charismatic aura\.$"
   name="has_charismaticaura"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:add_queue ("charismaticaura")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Nihilism"
   match="^You already have a barbed tail\.$"
   name="has_barbedtail"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("barbedtail")
bals:onbal ("tail", "silent")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Cosmic"
   match="^You already have cast a web of safety around yourself\.$"
   name="has_timeslip"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("timeslip")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You already have metawake turned on\.$"
   name="has_metawake"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>prompt:queue (function ()
affs:del ("no_metawake")
fst:disable ("no_metawake")
defs:ondef ("metawake")
end, "has_metawake", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Nihilism"
   match="^You already have wings\.$"
   name="has_wings"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("wings")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You already possess equilibrium\.$"
   name="curedisrupted"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if flags:get ("disrupted") then
system:cured ("disrupted")
fst:disable ("disrupted")
end--if</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You already possess the gift of the sixth sense\.$"
   name="has_sixthsense"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>prompt:queue (function ()
system:cured ("no_sixthsense", "silent")
fst:disable ("ondef_sixthsense")
defs:ondef ("sixthsense")
end, "has_truehearing", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You already possess the thirdeye\.$"
   name="has_thirdeye"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:add_queue ("thirdeye")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You already possess truehearing\.$"
   name="has_truehearing"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>prompt:queue (function ()
system:cured ("no_truehearing", "silent")
defs:ondef ("truehearing")
end, "has_truehearing", true)</send>
  </trigger>
  <trigger
   group="System_Arena"
   match="^You are OUT of the Wargames\!"
   name="arena_dead_wargames"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:add_check ("reset_defs")</send>
  </trigger>
  <trigger
   group="System_Arena"
   match="^You are OUT of the combat free\-for\-all\!"
   name="arena_dead_ffa"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:add_check ("reset_defs")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Combat"
   match="^You are already alerted by a keen eye\.$"
   name="has_keeneye"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:add_queue ("keeneye")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You are already an insomniac\.$"
   name="has_insomnia"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>prompt:queue (function ()
defs:ondef ("insomnia")
affs:del ("no_insomnia")
fst:disable ("no_insomnia")
end, "has_insomnia", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Highmagic"
   match="^You are already basking in the Geburah sphere\.$"
   name="has_geburah"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("geburah")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Highmagic"
   match="^You are already basking in the Netzach Sphere\.$"
   name="has_netzach"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("netzach")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Cosmic"
   match="^You are already cloaked\.$"
   name="has_cloak"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("cloak")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You are already concentrating on regaining equilibrium\.$"
   name="notdisrupted"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if flags:get ("disrupted") then
system:cured ("disrupted")
fst:disable ("disrupted")
end--if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Nihilism"
   match="^You are already covered with demonic scales\.$"
   name="has_demonscales"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("demonscales")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Rituals"
   match="^You are already filled with the exuber[ae]nce of Populus\.$"
   name="has_populus"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("populus")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You are already lipread\.$"
   name="has_lipread"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:add_queue ("lipread")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You are already moving at an increased pace\.$"
   name="has_adroitness"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("adroitness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You are already protected against psionic attacks\.$"
   name="has_psishield"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:add_queue ("psishield")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Rituals"
   match="^You are already reaping the gifts of Fortuna\.$"
   name="has_fortuna"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("fortuna")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Necromancy"
   match="^You are already releasing the frigid aura of the grave from your undead flesh\.$"
   name="has_coldaura"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("coldaura")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You are already sensing disruptions in the aether\.$"
   name="has_aethersight"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:add_queue ("aethersight")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Offense"
   match="^You are already soaring through the sky\, free as a bird\.$"
   name="wings_flyalready"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>display.success ("Fly", "already")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You are already walking on a small cushion of air\.$"
   name="has_levitate"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:add_queue ("levitate")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You are already water walking\.$"
   name="has_waterwalk"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:add_queue ("waterwalk")
affs:del ("no_waterwalk")
fst:disable ("no_waterwalk")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You are already wielding (.+?) in your (?:right|left) hand\.$"
   name="cureunwield2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:del ({"stun", "unconscious"})
fst:disable ("stun")
if flags:get ("unwield") then
 affs:unwield ("%1", true)
end --if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Offense"
   match="^You are already wielding (?:a|an) (?:.*) in your (?:left|right) hand\.$"
   name="already_wielding"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (flags:get ("todo_bal") or "nil") == "wield_weapon" then
todo:done ("wield_weapon", "bal")
end</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are an archlich\.$"
   name="def_archlich"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("archlich", nil, nil, "fromdef")
skills ["available"] ["adroitness"] = {
 ["use"] = "defs_free",
 ["syntax"] = "adroitness"}</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You are asleep and can do nothing\. WAKE will attempt to wake you\.$"
   name="sympasleep"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("asleep")
affs:prone ()</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are assisted by the Warrior\.$"
   name="def_warrior"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("warrior", nil, nil, "fromdef")</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are bathed in the glorious protection of decaying flesh\.$"
   name="def_putrefaction"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("putrefaction", nil, nil, "fromdef"</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You are being strangled by ."
   name="sympvestiphobia"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("vestiphobia")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You are blind and (?:can )?see nothing but darkness\.$"
   name="lostdef_sixthsensedark"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ("sixthsense")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You are capable of offensive acts once more\.$"
   name="curepacifism"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("pacifism")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You are caught in a powerful twister that hurtles you to the ground\.$"
   name="aff_aero_noflyer"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue("flying")</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are covered with demon scales\.$"
   name="def_demonscales"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("demonscales", nil, nil, "fromdef")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You are distracted by the movement of an impossible creature that you see out of the corner of your eye\.$"
   name="aff_para_eyesnare"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("insawarped", "insanity", 5)</send>
  </trigger>
  <trigger
   group="System_Poisons"
   match="^You are feeling a bit peckish right now\.$"
   name="poison_gluttony"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:poison ("gluttony")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You are feeling far too tranquil to attempt such a violent act\.$"
   name="symppacifism"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("pacifism")</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are filled with exuberance\.$"
   name="def_populus"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("populus", nil, nil, "fromdef")</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are filled with the wrath of Rubeus\.$"
   name="def_rubeus"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("rubeus", nil, nil, "fromdef")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You are gripped with fear \- you cannot leave the ground\.$"
   name="sympvertigo1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("vertigo")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You are haunted by the oracular visions of dark possible futures\, which fill you with fear and dread\.$"
   name="aff_aeonics_oracle2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if affs:has("oracle") then
 affs:add_queue ("insawarped", "timewarped", 4)
  prompt:queue (function ()
    affs:add_custom ("oracle2", "herb", "eat wormwood", nil, true)
 affs:masked (1)
  end, "affs_add_oracle2", true)
end</send>
  </trigger>
  <trigger
   group="System_TahtetsoMods"
   match="^You are hit by the sweep and topple to the ground\.$"
   name="tahtetso_tideswept"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You are impaled\, which makes movement impossible\.$"
   name="sympimpaled2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if not affs:has("impaled") and not affs:has ("pinleg") and not affs:has ("crucified") then
  affs:add_queue ("impaled")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Awaken"
   match="^You are jerked awake by the need to vomit\.$"
   name="cureasleep4"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
system:cured ("asleep")
affs:add ("vomiting")
flags:add_check ("recklessness")
end, "awake_vomiting", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Awaken"
   match="^You are jerked awake by the pain\.$"
   name="cureasleep3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
system:cured ("asleep")
flags:add_check ("recklessness")
end, "awake_pain", true)</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^You are knocked off your feet by the force of the blow\.$"
   name="affathheadslam2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone ()</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are moving at an increased rate of speed\.$"
   name="def_adroitness"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("adroitness", nil, nil, true)</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You are no longer deadened\.$"
   name="curedeadened"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("deadened")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You are no longer dizzy\.$"
   name="curedizziness"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("dizziness")</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^You are no longer immune from stun\.$"
   name="curestunimmune"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:del_check ("stun_immunity")
EnableTrigger ("curestunimmune", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You are no longer stunned(?: and have a brief stun immunity)?\.$"
   name="curestun"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if affs:has ("stun") then
system:cured_queue ("stun")
flags:add_check ("stun_immunity")
EnableTrigger ("curestunimmune", true)
end --if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You are not fallen or kneeling\.$"
   name="cureprone3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--wtf here?</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You are not on the ground\!$"
   name="cureprone_springup"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if flags:get ("prone") then
 if system:is_enabled ("diag") then
  affs:add_queue ("diag", nil, "shush")
 else
  affs:masked (2)
 end
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Necromancy"
   match="^You are not surrounded by the cold of the grave\.$"
   name="not_coldaura"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:lostdef ("coldaura")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You are not wielding (?:a|an) (.+?)\.$"
   name="affunwield2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if next (offense.current) then
 for id, name in pairs (offense.current) do
  if string.find (id, "%1") then
   affs:add_queue ("unwield",  name)
   break
  end--if
 end--for
end--if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You are not within the treetops\.$"
   name="already_down"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
flags:del ("climbing")
flags:del_check ("intrees")
affs:del ("intrees")
fst:disable ("climbing")
display.system ("down from trees")
end, "already_down", true)</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are observing with a keen eye\.$"
   name="def_keeneye"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("keeneye")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You are overcome by it all and topple over in a dead faint\.$"
   name="sympvapors"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add ("blackout")
flags:add_check ("vapors")
affs:prone()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You are paralysed and (?:cannot do that|unable to do that|are unable to drop anything)\.$"
   name="sympparalysis3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if not affs:has("severedspine") then
  affs:prone("paralysis")
end
if flags:get ("prone") then
fst:fire ("prone")
end --if</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You are patient once again\.$"
   name="cureimpatience"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("impatience")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You are picked up by the twister and thrown up into the sky\.$"
   name="ondef_flyingtornado"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:add_queue ("flying")</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are protected by the Starleaper\.$"
   name="def_starleaper"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("starleaper", nil, nil, "fromdef")</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are reaping the gifts of Fortuna\.$"
   name="def_fortuna"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("fortuna", nil, nil, "fromdef")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You are scorched by the firewall as you pass through\.$"
   name="affablaze3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("ablaze")
affs:burning ()</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are strengthened by the power of Kiakoda for (\d+) more tarot flings\.$"
   name="def_world"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("world", "%1 fling(s)", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You are stuck in a pit and must CLIMB UP to get out before you can move\.$"
   name="symp_pit"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("pit")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You are stunned by (?:a vision of divine astral beings|the sight of a massive pink bunny hopping by)\.$"
   name="symphallucinations3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone ({"stun", "hallucinations"})</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are surrounded by numinous dragon scales\.$"
   name="def_draconis"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("draconis", nil, nil, "fromdef")</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are surrounded by the Geburah Sphere\.$"
   name="def_geburah"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("geburah", nil, nil, "fromdef")</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are surrounded by the Netzach Sphere\.$"
   name="def_netzach"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("netzach", nil, nil, "fromdef")</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are surrounded by the cold of the grave\.$"
   name="def_coldaura"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("coldaura", nil, nil, "fromdef")</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are taught by D\'varsha in Highmagic\.$"
   name="def_teacher"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("teacher", nil, nil, "fromdef")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You are too afraid of heights to climb up\.$"
   name="sympvertigo3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("vertigo")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You are too close to the fireworks and are caught in the blazing explosion\!$"
   name="aff_fireworks"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:add_queue("ablaze")
affs:burning()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You are too confused to concentrate properly\.$"
   name="sympconfused"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("confusion")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You are too impatient to focus on anything\.$"
   name="sympimpatient"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("impatience")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You are too stunned to be able to do anything\.$"
   name="sympstunned"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone ("stun")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You are too tangled up to do that\.$"
   name="sympentangled2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone("entangled")</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You are touching upon cosmic probabilities\.$"
   name="def_timeslip"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("timeslip", nil, nil, "fromdef")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You are transfixed and cannot (?:do that\. You must writhe to escape|move)\.$"
   name="symptransfixed"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("transfixed")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You are trapped in time and can only helplessly watch the world pass you by\.$"
   name="aff_aeonics_displaced2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
affs:add ("displacement")
fst:enable ("displacement")
end, "displaced2", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You are trussed up and must writhe free of the tightly bound ropes\.$"
   name="symptrussed"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("trussed")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You are unable to (?:stand|spring up) with your legs locked\.$"
   name="sympleglock"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("leglock")
prompt:queue (function ()
if flags:get ("prone") then
  fst:fire ("prone", "now")
end
end, "sympleglock", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You are unable to maintain a stance for any period of time while your kneecaps are cracked\.$"
   name="sympkneecaps"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
stance:reset ()
if not affs:has("kneecap_leftleg") then
  affs:add ("kneecap_rightleg")
end
end, "sympkneecaps", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You are unable to smoke due to collapsed lungs\.$"
   name="sympasthma2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if flags:get ("smoking") then
 affs:add_queue ("collapsedlungs")
end--if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You are unconscious and thus incapable of action\.$"
   name="sympunconscious2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("unconscious")</send>
  </trigger>
  <trigger
   group="System_Combat"
   match="^You are weighing your attention spent parrying yourself as follows\:$"
   name="parry_start"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:del ("waiting_for_parry")
fst:disable ("parry")
parry:reset ("silent")
EnableTrigger ("parry_sync", true)
prompt:queue (function () EnableTrigger ("parry_sync", false) end, "parry_start")</send>
  </trigger>
  <trigger
   group="System_Offense"
   match="^You are wielding\:$"
   name="wielding_start"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>offense:reset ("current")
prompt:queue (function ()
  EnableTrigger ("wielding_start", false)
  EnableTrigger ("wielding_id", false)
  display.system ("No Weapons Wielded!")
end, "wielding_start")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You aren't such a complete idiot anymore\.$"
   name="curestupidity"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue("stupidity")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_WNocure"
   match="^You aren\'t bound in ropes\! You begin to writhe helplessly\, throwing your body off balance\.$"
   name="ncroped"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function () nocure:writhe("roped")end, "ncroped", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_WNocure"
   match="^You aren\'t entangled\! You begin to writhe helplessly\, throwing your body off balance\.$"
   name="ncentangled"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function () nocure:writhe("entangled")end, "ncentangled", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_WNocure"
   match="^You aren\'t grappled\! You begin to writhe helplessly\, throwing your body off balance\.$"
   name="ncgrappled"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function () nocure:writhe("grappled")end, "ncgrappled", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_WNocure"
   match="^You aren\'t hoisted\! You begin to writhe helplessly\, throwing your body off balance\.$"
   name="nchoisted"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function () nocure:writhe("hoisted")end, "nchoisted", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_WNocure"
   match="^You aren\'t shackled\! You begin to writhe helplessly\, throwing your body off balance\.$"
   name="ncshackled"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function () nocure:writhe("shackled")end, "ncshackled", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_WNocure"
   match="^You aren\'t transfixed\! You begin to writhe helplessly\, throwing your body off balance\.$"
   name="nctransfixed"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()nocure:writhe ("transfixed")end, "nctransfixed",true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_WNocure"
   match="^You aren\'t trussed up\! You begin to writhe helplessly\, throwing your body off balance\.$"
   name="nctrussed"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function () nocure:writhe("trussed")end, "nctrussed", true)</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^You assess the bodily wounds as follows\:$"
   name="assessing"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You attempt to inhale\, but only end up coughing out more black phlegm\.$"
   name="sympblacklung"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("blacklung")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You attempt to inhale\, but only end up making a wheezing noise\.$"
   name="smoking_phrenic"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>pipes:err ("phrenicnerve")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You attempt to move\, but the muscles of your legs are locked\.$"
   name="sympleglocked"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("leglock")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You attempt to move\, but the muscles of your legs do not respond\.$"
   name="sympleghemiplegy"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("hemiplegy_legs")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You attempt to stand up\, but your pierced leg gives out and you collapse back to the ground\.$"
   name="sympiercedleg"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
if affs:has ("prone") then
  affs:add_custom ("sympiercedleg", "herb", "smoke myrtle", 60)
end--if
fst:fire ("prone")
end, "symppiercedleg", true)</send>
  </trigger>
  <trigger
   group="System_Offense"
   match="^You backhand your archdemon and command him to shape up and start harrowing your enemies\. Your archdemon simpers and grovels at your feet\, agreeing to your demands\.$"
   name="demon_harrow"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>display.success ("harrow")
SetVariable ("demon_double", "1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Offense"
   match="^You bare your wrist to your .+? and grimace as (H|h)is teeth puncture your skin and greedily sucks your blood\. You sigh in relief as \1e withdraws and you feel slightly better\.$"
   name="demon_syphon"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("Syphon")
system:cures_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You bathe in the glory of the holy light that surrounds you\.$"
   name="holylight_cure"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:cures_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You bathe yourself in a scintillating shower of cleansing cosmic energy\.$"
   name="soulwash"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:del ({"stun", "unconscious"})
  fst:disable ("stun")
  if (flags:get ("curing") or "nil") == "soulwash" then
 sca:check ()
 system:cures_on ()
  end --if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You begin a performance to act more wounded than you are\.$"
   name="defup_role_wounded"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:add_queue ("wounded")</send>
  </trigger>
  <trigger
   group="System_Focus"
   match="^You begin focusing your mind on your motor skills\.$"
   name="focusbody"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>bals:offbal ("focus", "silent")
sca:check ()
EnableTriggerGroup ("System_Focus", false)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You begin intense concentration to restore your equilibrium\.$"
   name="curedisruptedconc"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if flags:get("disrupted")then --if I am trying to cure disrupted
system:cured ("disrupted")
fst:disable ("disrupted")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You begin moving your frozen body slowly \w+\.$"
   name="sympfrozen"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("frozen")
defs:del_queue("fire")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^You begin to chant the words of vile darkness\, and an iron cross rises up from the ground before @system_target\. Vicious spikes slam into (?:[Hh]is|[Hh]er) flesh and nail (?:[Hh]im|[Hh]er) to the cross\. (?:He|She) screams in pain and agony as blood is splattered in all directions\.$"
   name="crucify_"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("crucify")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You begin to climb out of the pit\.$"
   name="pit_climbing"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if affs:has ("pit") then
  prompt:queue (function ()
  fst:disable ("climbing")
  fst:enable ("pit")
  sca:check ()
  EnableTrigger ("pit_climbedout", true)
  end, "pit_climbing", true)
end--if</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You begin to concentrate on the sixth sense\.\.\.$"
   name="start_sixthsense"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>prompt:queue (function ()
system:del_cure ()
system:unqueue_cure ("eat_faeleaf")
bals:offbal ("herb", "silent")
fst:enable ("ondef_sixthsense")
end, "start_sixthsense", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You begin to descend\, the wind whistling past you as the earth draws ever closer\. You land easily\, back on the ground again\.$"
   name="lostdef_flyingarti"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ("flying")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Combat"
   match="^You begin to examine your surroundings with a keen eye\.$"
   name="ondef_keeneye"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:add_queue ("keeneye")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You begin to panic as the thought of wearing clothing strangles you\.$"
   name="affvestiphobia"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("vestiphobia")
local hn = flags:get_check ("hex") --if I got hit by hex
  if hn then
    if hn==1 then --only once before getting the affliction
      flags:del_check ("hex")--I have detected all the hex attacks 
  flags:del_check ("recklessness")--and I don't need to check for reckless
    else
  flags:add_check ("hex", 1)--I still have one more hex attack to detect
    end--if
end --if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You begin to rise on a cushion of air\.$"
   name="ondef_levitate"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:add_queue ("levitate")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_WStart"
   match="^You begin to struggle free of your entanglement\.$"
   name="startentangled"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
affs:impaled (0)
affs:pinleg (0)
act:writhing_start () end, "start_entangled", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You begin to sweat profusely in this sweltering heat\.$"
   name="aff_pyro_slickness"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("slickness")</send>
  </trigger>
  <trigger
   group="System_NinjakariMods"
   match="^You begin to twitch uncontrollably\.$"
   name="ninjakari_tremble"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("trembling")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You begin to vigorously scrub yourself all over\, trying to remove that awful mud caked all over your body\.$"
   name="curescrubmuddy"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if affs:has ("sap") then
 system:cured_queue ("sap")
  end--if
  affs:del_queue ("muddy")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You begin to vigorously scrub yourself all over\, trying to remove that horrible stench\.$"
   name="curescrubstinky"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if affs:has ("sap") then
 system:cured_queue ("sap")
  end --if
  affs:del_queue ({"muddy", "ectoplasm", "mucous", "stinky",})</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You begin to vigorously scrub yourself all over\, trying to remove that slippery oil that coats your skin\.$"
   name="curescrubslick"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if affs:has ("sap") then
 system:cured_queue ("sap")
  end--if
 if affs:has ("slickness") then
 system:cured_queue ("slickness")
  end--if
affs:del_queue ({"mucous", "muddy", "ectoplasm", "mucous", "stinky", "gunk",})</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You begin to vigorously scrub yourself all over\, trying to remove that sticky sap\.$"
   name="curescrubsap"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:cured_queue ("sap")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You begin to vigorously scrub yourself all over\, trying to remove that vile black gunk\.$"
   name="curescrubgunk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if affs:has ("sap") then
 system:cured_queue ("sap")
  end--if
affs:del_queue ({"mucous", "muddy", "ectoplasm", "mucous", "stinky", "gunk",})
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You begin to vigorously scrub yourself all over\, trying to remove the dark mark from your skin\.$"
   name="curescrubdeath"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if affs:has ("slickness") then
 system:cured_queue ("slickness")
end--if
if affs:has("deathmark")&gt;1 then
  affs:add_queue("deathmark", affs:has("deathmark") - 1)
else
  affs:del_queue("deathmark")
end
affs:del_queue({"mucous", "sap", "muddy", "ectoplasm", "mucous", "stinky", "gunk", "ablaze",})</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You begin to wield (.+?) in your (?:right|left) hand\.$"
   name="cureunwield1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:del ({"stun", "unconscious"})
fst:disable ("stun")
if flags:get ("unwield") then
 affs:unwield ("%1", true)
end --if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Offense"
   match="^You begin to wield (?:.*) in your (?:right|left) hand\.$"
   name="done_wielding"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (flags:get ("todo_bal") or "nil")=="wield_weapon" then
todo:done ("wield_weapon", "bal")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_WStart"
   match="^You begin to wrench your (left|right) arm from the mutt\'s mouth\.$"
   name="startclamped"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
affs:impaled (0)
affs:pinleg (0)  
act:writhing_start () end, "start_clamped", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_WStart"
   match="^You begin to writhe furiously to escape (?:from the iron cross|the antlers that have impaled you|the blade that has impaled you)\.$"
   name="startimpaled"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
affs:pinleg (0)
act:writhing_start () end, "start_impaled", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_WStart"
   match="^You begin to writhe furiously to escape the blade that has impaled your (right|left) foot\.$"
   name="starpinleg"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
act:writhing_start () end, "start_pinleg", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_WNocure"
   match="^You begin to writhe helplessly\, throwing your body off balance\.$"
   name="ncwrithe"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function () nocure:writhe()end, "ncwrithe", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_WStart"
   match="^You begin trying to wrest your mind free of that which has transfixed it\.$"
   name="starttransfixed"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
affs:impaled (0)
affs:pinleg (0)
act:writhing_start () end, "start_transfixed", true)</send>
  </trigger>
  <trigger
   group="System_Awaken"
   match="^You begin your struggle to escape from the dreamworld\.$"
   name="begin_waking"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
display.system ("beginning to wake up...")
fst:enable ("asleep")
sca:check ()
end, "waking_up", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You belch (?:loudly and begin to feel the pain|deeply and no longer feel so stoked)\.$"
   name="lostdef_beer"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:del_queue ("beer")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You belch and begin swaying back and forth like a drunkard\.$"
   name="defup_role_drunkard"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:add_queue ("drunkard")
defs:del_queue ("sober")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You belch softly under your breath\, ready to quaff another brew\.$"
   name="onbal_brew"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>bals:onbal ("brew")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^You bid your archdemon to draw @system_target in close\.$"
   name="beckon_target"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("beckon")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You blanch as the high[\-\s]pitched screech settles deep within your mind\.$"
   name="affachromatic"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("achromaticaura")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You bleed like a stuck pig upon the iron cross\.$"
   name="affnecrocrucified3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("crucified")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You blink for a moment\, then instantly\, all about you is darkness\.$"
   name="lostdef_sixthsenseblind"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ("sixthsense")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Cosmic"
   match="^You blur and slip through time as [A-Z][a-z]+ approaches you\.$"
   name="lostdef_timeslip"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:lostdef ("timeslip")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^You bow your head and chant the name of @system_target\, draining (?:[Hh]is|[Hh]er) reservoir of power into your own\.$"
   name="drain_"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("drain")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You bow your head and concentrate on blurring your personal energies until your power is masked\.$"
   name="ondef_powermask"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:add_queue ("powermask")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Nihilism"
   match="^You bow your head in obeisance to the Demon Lords of Nil and grunt in pain as wounds open up in your back\, sprouting leathery bat\-like wings\.$"
   name="ondef_wings"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("wings")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Nihilism"
   match="^You bow your head in obeisance to the Demon Lords of Nil\, and a jolt of pain shoots down your spine as a barbed tail thrusts itself out of your flesh\, flailing with a life of its own\.$"
   name="ondef_barbedtail"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("barbedtail")
bals:onbal ("tail", "silent")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Nihilism"
   match="^You bow your head in obeisance to the Demon Lords of Nil\, and excruciating pain forces you onto the ground\, writhing in agony\. Bloody cracks appear on your skin as gleaming black plates of demonic scales burst forth\.$"
   name="ondef_demonscales"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("demonscales")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You breathe a sigh of relief as blood stops gushing from your throat\.$"
   name="cureslitthroat"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("slitthroat")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You breathe a sigh of relief as the reverberating ringing note here fades away\.$"
   name="affmaestoso_gone"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
 fst:fire ("maestoso", "now")
end, "maestoso_gone", true)</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You breathe easier as your lungs clear up of the dreadful black phlegm\.$"
   name="cureblacklung"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>prompt:queue (function ()
  system:cured ("blacklung")
  local aff, cure=flags:bals_try ("herb")
 --if I diaged before I could smoke
  if
 flags:get ("smoking") or
 (bals:get ("herb")==0.5 and not cure)
  then
 fst:fire ("herb", "now")
  end--if
end, "cured_blacklung", true)</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You breathe easier as your punctured lung mends\.$"
   name="curepuncturedlung"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("puncturedlung")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You breathe in some black ashes\,? and then begin coughing hoarsely\.$"
   name="aff_pyro_blacklung"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("blacklung")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You breathe? easier as the pain in your ribs subsides\.$"
   name="curesnappedrib"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("snappedrib")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You briefly hold your hand over your mouth until your lips and tongue tingle\.$"
   name="ondef_waterbreathe"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:add_queue ("waterbreathe")
affs:del ("no_waterbreathe")
fst:disable ("no_waterbreathe")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Necromancy"
   match="^You call the cold of the grave back to preserve your undead flesh\.$"
   name="lostdef_coldaura"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:lostdef ("coldaura")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You can breathe easier as your ribs snap into place\.$"
   name="curebrokenchest"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("brokenchest")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You can climb no higher\.$"
   name="climbing_maxaltitude"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
flags:del ("climbing")
fst:disable ("climbing")
end, "climbing_maxaltitude", true)</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You can handle the idea of open spaces again\.$"
   name="cureagoraphobia"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("agoraphobia")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You can\'t concentrate enough to focus on your mind as you are crucified\!$"
   name="affnecrocrucified4"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("crucified")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You can\'t see that item here to coat\.$"
   name="sharpness_noitem"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if flags:get ("todo_bal") == "sharpness" then
for k, tag in ipairs (todo ["bal"]) do
  if tag ["id"] == "sharpness" then
    todo:done ("sharpness", "bal")
  end--if
end --for
system:set_auto ("sharpness", 0, "silent")
flags:del_check ("sharpness")
display.warning ("You have no wielded weapons!")
end --if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You cannot climb up the side of a pit you are not in\.$"
   name="rockclimbing_nopit"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
if flags:get ("climbing")=="up" then
  affs:del ("pit")
  flags:del ("climbing")
  fst:disable ("climbing")
  sca:check ()
end
end, "rockclimbing_nopit", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You cannot contain the convulsions in your stomach any longer and double over\, retching violently\.$"
   name="sympvomiting"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:bal ("vomiting")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You cannot move as both your legs are crippled\.$"
   name="sympcrippled"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ({"broken_leftleg", "broken_rightleg",})</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Bashing"
   match="^You cannot see that being here\.$"
   name="notarget3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (flags:get ("todo_bal") or "nil") == "bash" then
system:set_auto ("bashing", 0)
end--if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You carefully light your treasured pipe until it is smoking nicely\.$"
   name="pipeslight"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>pipes:light ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You carefully watch your footing and shimmy down from the treetops\.$"
   name="climbing_down"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
flags:del ("climbing")
flags:del_check ("intrees")
affs:del ("intrees")
fst:disable ("climbing")
display.system ("Down from trees")
end, "climbing_down", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You carefully writhe out of ([A-Z][a-z]+)\'s grapple\, escaping (?:[hH]is|[hH]er) grasp\.$"
   name="curegrappleperson"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:cured_queue ("grappled", "%1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You cease (?:to wield|wielding) (.+?)(?: in your (?:right|left) hand)?\.$"
   name="affunwield1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("unwield", "%1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You cease acting (drunk|sober|wounded)\.$"
   name="lostdef_drunk_sober_wounded"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if "%1" == "drunk" then
  defs:del_queue ("drunkard")
else
  defs:del_queue ("%1")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You cease concentrating on maintaining distance from the dreamworld\.$"
   name="lostdef_metawakeoff"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ("metawake")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You cease holding your breath and exhale loudly\.$"
   name="lostdef_holdbreath"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ("holdbreath")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Combat"
   match="^You cease parrying\.$"
   name="unparry"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if flags:get ("parry") then
parry ["current"] = {}
parry ["unparried"] = true
flags:del ("parry")
fst:disable ("parry")
end --if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You cease reviewing the performances of others\.$"
   name="lostdef_review"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ("review")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Combat"
   match="^You cease using your keen eye\.$"
   name="lostdef_keeneye"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:del_queue ("keeneye")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Offense"
   match="^You cease wielding (?:.*) in your (?:right|left) hand\.$"
   name="cease_wielding"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if system:is_auto ("wielding") then
prompt:queue (function ()
for k, id in ipairs (offense ["current"]) do
 todo:add ("bal", "wield_weapon", "wield "..id, 1, true)
end
end, "cease_wielding", true)
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You cease your praying\.$"
   name="logout_stop"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTrigger ("login", false)
EnableTrigger ("logout_stop", false)
EnableTrigger ("logout", false)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Offense"
   match="^You chant the ritual of Carcer and raise your arms\. Shafts of blue light rise up around the location\, like the bars of a prison\.$"
   name="carcer_"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("carcer")
prompt:add_alert ("cexp", "CExp", 120, -1)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^You chant the ritual of Conjuctio at @system_target\, and feel (?:[Hh]im|[Hh]er) magnetically drawn to your side\.$"
   name="conjunctio_"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("conjunctio")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Rituals"
   match="^You chant the ritual of Draconis and sense a numinous layer of dragon scales surround you\.$"
   name="ondef_draconis"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("draconis")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^You chant the words of rot at @system_target\, while cracking your knuckles loudly\.$"
   name="shrivel_"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("shrivel")</send>
  </trigger>
  <trigger
   group="System_Eating"
   match="^You chew an arnica bud\, then spread it on your (head|chest|arms|legs)\.$"
   name="applying_arnica"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:cures_on ()
EnableTrigger ("nocure_apply_arnica_to_%1", true)
prompt:queue (function ()EnableTrigger ("nocure_apply_arnica_to_%1", false) end, "cond")
system:add_cure ("apply arnica to %1")
act:del_inv ("arnica")</send>
  </trigger>
  <trigger
   group="System_NinjakariMods"
   match="^You choke up bile and blood as your stomach ruptures\, your skin blotching with angry bruises from internal bleeding\.$"
   name="ninjakari_rupture_gut"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("rupturedstomach")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You clench your fists\, grit your teeth\, and banish all possibility of sleep\.$"
   name="ondef_insomnia"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>prompt:queue (function ()
defs:ondef ("insomnia")
affs:del ("no_insomnia")
fst:disable ("no_insomnia")
end, "ondef_insomnia", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You climb up on (.+?)\.$"
   name="ondef_mounted"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:add_queue ("mounted", "%1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You close your eyes for a moment\, and cease concentrating on the aether\.$"
   name="lostdef_aethersight"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:del_queue ("aethersight")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You close your eyes\, curl up in a ball\, and fall asleep\.$"
   name="affasleep1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone("asleep")
affs:prone ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Necromancy"
   match="^You concentrate and are once again .+?\.$"
   name="lostdef_ghost"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:lostdef ("ghost")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^You concentrate and curse @system_target with the visage of a rotting corpse\.$"
   name="disfigure_"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("disfigure")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Necromancy"
   match="^You concentrate for a moment and your flesh begins to dissolve away\, becoming slimy and wet\.$"
   name="ondef_putrefaction"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("putrefaction")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You concentrate for a moment\, surrounding yourself with a psionic barrier\.$"
   name="ondef_psishield"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:add_queue ("psishield")</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^You consider the following adventurers your allies\:$"
   name="start_allies"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTrigger ("get_allies", true)
EnableTrigger ("lust_for", true)
affs ["lusts"] = {}
prompt:queue (function () 
EnableTrigger ("get_allies", true)
EnableTrigger ("lust_for", true)
end, "start_allies")</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^You consider the following adventurers your enemies\:$"
   name="start_enemies"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTrigger ("get_enemies", true)
EnableTrigger ("highlight_enemies", false) 
adven:reset ("enemy_list")
prompt:queue (function () EnableTrigger ("get_enemies", false) EnableTrigger ("highlight_enemies", true)  end, "start_enemies")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_WContinue"
   match="^You continue trying to wrest your (left|right) arm free from that filthy mutt\.$"
   name="cclamped"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function () act:writhing () end, "cclamped", true)</send>
  </trigger>
  <trigger
   group="System_WContinue"
   match="^You continue trying to wrest your mind free\.$"
   name="ctransfixed"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>prompt:queue (function () act:writhing () end, "ctransfixed", true)</send>
  </trigger>
  <trigger
   group="System_Awaken"
   match="^You continue your struggle to escape from the dreamworld\.$"
   name="waking_up"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
display.system ("waking up...")
fst:enable ("asleep")
end, "waking_up", true) </send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You cough and wheeze as [A-Z][a-z]+ strikes (.+?) into your chest\, the vibrations constricting your lungs\.$"
   name="tahtetso_gahtisho"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack (nil, "chest")
affs:add_queue ("asthma")
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You cough as something gets lodged deep in your throat\.$"
   name="afftelekthroat"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("throatlock")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You cough suddenly\, expelling black fluid with bits of what looks to be tissue suspended in it\.$"
   name="sympcrotamine2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:del_queue ({"crotamine_1", "crotamine_3", "crotamine_4"})
affs:add_queue ("crotamine_2")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You cough uncontrollably\, as you hack up some black phlegm\.$"
   name="sympblack_lung2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("blacklung")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You cough up some black slime\.$"
   name="affnecrodisease"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:cond ({"poison_worms", "poison_epilepsy",}
prompt:queue (function ()
 system:cond ()
end, "affnecrodisease")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You cry out in pain as your (left|right) leg twists and snaps beneath you\.$"
   name="afflegsnap"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("broken_%1leg")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You declare that ([A-Z][a-z]+) will no longer be one of your enemies\.$"
   name="unenemying"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if flags:get ("unenemying") then
 system:del_enemy ("%1")
 flags:del ("unenemying")
else
 display.warning ("Forced into Unenemying!")
 todo:add ("free", "enemying", "enemy %1", 1, true)
end--if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Bashing"
   match="^You detect nothing here by that name\.$"
   name="notarget5"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (flags:get ("todo_bal") or "nil") == "bash" then
system:set_auto ("bashing", 0)
end--if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You dive towards the ground\, alighting gently upon its surface as the currents of power swirling around you dissipate\.$"
   name="lostdef_flyingasc"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ("flying")</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^You do not bleed\, my friend\.$"
   name="clotstop"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:cured_queue ("bleeding")</send>
  </trigger>
  <trigger
   group="System_Gear"
   match="^You don't have enough gold to refill from that keg\.$"
   name="nogold"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>gear:refilled (true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_MagicRecharge"
   match="^You don\'t have enough gold to recharge that item\.$"
   name="magicrecharge_missinggold"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (flags:get ("todo_free") or "nil") == "recharge" then
todo:done ("recharge", free")
magic:recharge_abort ("NOT ENOUGH GOLD")
end--if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You don\'t see that to coat on (?:a|an) .*\.$"
   name="sharpness_nooils"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if flags:get ("todo_bal") == "sharpness" then
for k, tag in ipairs (todo ["bal"]) do
  if tag ["id"] == "sharpness" then
    todo:done ("sharpness", "bal")
  end--if
end --for
flags:del_check ("sharpness")
system:set_auto ("sharpness", 0, "silent")
display.warning ("You have no Sharpness Oil!")
end --if</send>
  </trigger>
  <trigger
   group="System_TahtetsoMods"
   match="^You draw breath in short\, rasping gasps from the pain in your chest\.$"
   name="tahtetso_rasp"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("shortbreath")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You draw deeply upon your divine essence and rise gracefully into the skies on swirling currents of power\.$"
   name="ondef_flyingasc"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:add_queue ("flying")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You easily vault onto the back of (.+?)\.$"
   name="ondef_mountedvault"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:add_queue ("mounted", "%1")</send>
  </trigger>
  <trigger
   group="System_Eating"
   match="^You eat (kombu) seaweed\.$"
   name="eating_kombu"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>act:eating ("%1")</send>
  </trigger>
  <trigger
   group="System_Eating"
   match="^You eat a (calamus) root\.$"
   name="eating_calamus"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>act:eating ("%1")</send>
  </trigger>
  <trigger
   group="System_Eating"
   match="^You eat a (horehound) blossom\.$"
   name="eating_horehound"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>act:eating ("%1")</send>
  </trigger>
  <trigger
   group="System_Eating"
   match="^You eat a (kafe) bean\.$"
   name="eating_kafe"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>act:eating ("%1")</send>
  </trigger>
  <trigger
   group="System_Eating"
   match="^You eat a (reishi) mushroom\.$"
   name="eating_reishi"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>act:eating ("%1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You eat a (sparkleberry)\.$"
   name="eating_sparklies"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>act:eating ("%1")</send>
  </trigger>
  <trigger
   group="System_Eating"
   match="^You eat a (wormwood) stem\.$"
   name="eating_wormwood"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>act:eating ("%1")</send>
  </trigger>
  <trigger
   group="System_Eating"
   match="^You eat a (yarrow) sprig\.$"
   name="eating_yarrow"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>act:eating ("%1")</send>
  </trigger>
  <trigger
   group="System_Eating"
   match="^You eat a bog (myrtle) leaf\.$"
   name="eating_myrtle"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>act:eating ("%1")</send>
  </trigger>
  <trigger
   group="System_Eating"
   match="^You eat a bunch of (pennyroyal)\.$"
   name="eating_pennyroyal"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>act:eating ("%1")</send>
  </trigger>
  <trigger
   group="System_Eating"
   match="^You eat a piece of (merbloom) seaweed\.$"
   name="eating_merbloom"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>act:eating ("%1")</send>
  </trigger>
  <trigger
   group="System_Eating"
   match="^You eat a piece of black (earwort)\.$"
   name="eating_earwort"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>act:eating ("%1")</send>
  </trigger>
  <trigger
   group="System_Eating"
   match="^You eat a plug of (coltsfoot)\.$"
   name="eating_coltsfoot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>act:eating ("%1")</send>
  </trigger>
  <trigger
   group="System_Eating"
   match="^You eat a sprig of (chervil)\.$"
   name="eating_chervil"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>act:eating ("%1")</send>
  </trigger>
  <trigger
   group="System_Eating"
   match="^You eat a sprig of (marjoram)\.$"
   name="eating_marjoram"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>act:eating ("%1")</send>
  </trigger>
  <trigger
   group="System_Eating"
   match="^You eat a stalk of (faeleaf)\.$"
   name="eating_faeleaf"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>act:eating ("%1")</send>
  </trigger>
  <trigger
   group="System_Eating"
   match="^You eat a stem of (galingale)\.$"
   name="eating_galingale"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>act:eating ("%1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Combat"
   match="^You enter a stance to protect your (.*)\.$"
   name="stance_done"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>if flags:get ("stance") then
stance:done ()
end --if</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^You exert superior mental control and your wounds clot before your eyes\.$"
   name="clotcontinue"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
affs:bleeding (-20)
flags:del ("clotting")
fst:disable ("clotting")
EnableTrigger ("clotcontinue", false)
EnableTrigger ("clotstop", false)
end, "clotcontinue", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Ent"
   match="^You fail to muster enough power to move ([A-Z][a-z]+)\.$"
   name="gust_failed"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>for i=1,3 do
ColourTell ("deeppink", "", "GUST")
ColourNote ("lightgrey", "", " %1 FAILED!")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You fall on your face as your legs are suddenly pulled out from under you\.$"
   name="afftelekprone"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone ({"prone", "stun"})</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You fall to the ground as the last drops of life\-giving blood drain out of your body\.$"
   name="dead_bleeding"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:add_check ("dead")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You feel a bit more alert and awake\.$"
   name="curehypersomnia"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("hypersomnia")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Bashing"
   lines_to_match="2"
   match="^You feel a burning sensation emanating from the wound\.$\n^You realize that your heroic actions can no longer continue unnoticed\, and you take it upon yourself to rectify the situation\.$"
   multi_line="y"
   name="bashing_recklessness_surtami"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("recklessness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Ent"
   match="^You feel a slight tug within your chest and the air around you sparkles with motes of bright light\.$"
   name="teleporting"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>for i=1,5 do
display.warning ("Teleport")
end--if
prompt:add_alert ("teleport", "Teleport", 5)</send>
  </trigger>
  <trigger
   group="System_Poisons"
   match="^You feel a terrible thirst for elixirs grow within you\.$"
   name="poison_addiction"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:poison ("addiction")</send>
  </trigger>
  <trigger
   group="System_Poisons"
   match="^You feel a tightening sensation grow in your lungs\.$"
   name="poison_chansu"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:poison ("asthma")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You feel an aura of rebounding surround you\.$"
   name="ondef_rebound"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>prompt:queue (function ()
fst:disable ("ondef_rebound")
affs:del ("no_rebound")
defs:ondef ("rebound")
end, "ondef_rebound", true)</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You feel an invigorating energy rush through you\.$"
   name="healscroll"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>prompt:queue (function ()
display.cured ("Heal Scroll")
flags:del ("healing")
bals:offbal ("scroll", "silent")
fst:disable ("scroll")
magic:used ("healing")
end, "healing", true)</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^You feel an unusually strong lust for ([A-Z][a-z]+)\.$"
   name="lust_for"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:lusted ("%1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You feel incredibly tired\, and fall asleep immediately\.$"
   name="affasleep2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone("asleep")
affs:prone ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You feel just as tired as before\.$"
   name="affnarcolepsy"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("narcolepsy")</send>
  </trigger>
  <trigger
   group="System_Poisons"
   match="^You feel light headed and dizzy\.$"
   name="poison_relapsing"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:poison ("relapsing")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You feel nauseous and your skin turns blotchy\.$"
   name="affpox2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("pox")
local hn = flags:get_check ("hex") --if I got hit by hex
  if hn then
    if hn==1 then --only once before getting the affliction
      flags:del_check ("hex")--I have detected all the hex attacks 
  flags:del_check ("recklessness")--and I don't need to check for reckless
    else
  flags:add_check ("hex", 1)--I still have one more hex attack to detect
    end--if
end --if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Highmagic"
   match="^You feel the Netzach Sphere leave you\.$"
   name="lostdef_netzach"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:lostdef ("netzach")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You feel the curse of the (Bat|Herb|Snake) Bane lift(?:s|ed) from your being\.$"
   name="curebane"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:del_queue ("bane_" .. string.lower("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You feel the dark mark upon your body finally disappear\.$"
   name="curedeathmark_passive"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:del_queue ("deathmark")
display.cured ("deathmark")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You feel the earth\'s taint leave your soul\.$"
   name="curetaint_sick"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("taint_sick")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You feel the full potential of the (moonwater|unholy water|holy water) manifest in you\.$"
   name="ondef_orgpotion"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>if flags:get ("ondef_orgpotion") then
prompt:queue (function ()
fst:disable ("ondef_orgpotion")
flags:del ("ondef_orgpotion")
defs:add_queue ("orgpotion", "%1")
end, "ondef_orgpotion", true)
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You feel the full potential of the nightsweats manifest in you\.$"
   name="ondef_nightsweats"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:add_queue ("nightsweats")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You feel the muscles in your legs unlocking\.$"
   name="cureleglocked"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:cured_queue ("leglock")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You feel the muscles in your throat opening up again\.$"
   name="curethroatlocked"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
  system:cured ("throatlock")
  if bals:get ("elixir")==0.5 and not string.find (flags:get ("applying_salve") or "nil", "apply_health_to_") then fst:fire ("elixir", "now") end
  if bals:get ("purg")==0.5 then fst:fire ("purg", "now")end
  if bals:get ("herb")==0.5 and not flags:get ("smoking") and not string.find (flags:get ("applying_salve") or "nil", "apply_health_to_") then fst:fire ("herb", "now")end
  if bals:get ("sparklies") ==0.5 then fst:fire ("sparklies", "now") end
  if bals:get ("speed") ==0.5 then fst:fire ("purg", "now") end
  if flags:get ("orgpotion") then fst:fire ("orgpotion", "now") end
  if flags:get ("brew") then fst:fire ("brew", "now") end
  if bals:get ("ah") ==0.5 then fst:fire ("ah", "now") end
  end, "curesthroat", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You feel the strength ebb from your body as the cold takes its toll\.$"
   name="sympchills1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("chills")
defs:del_queue("fire")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You feel the world about you slow as the brief outline of the dancing form of [A-Z][a-z]+ passes across your mind\.$"
   name="affmoonaeon2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTrigger ("afftarotaeon1", true)
EnableTrigger ("afftarotaeon2", true)
prompt:queue (function ()
 EnableTrigger ("afftarotaeon1", false)
 EnableTrigger ("afftarotaeon2", false)
end, "affmoonaeon2")</send>
  </trigger>
  <trigger
   group="System_Poisons"
   match="^You feel ugliness radiating from you\.$"
   name="poison_disloyalty"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:poison ("disloyalty")</send>
  </trigger>
  <trigger
   group="System_Poisons"
   match="^You feel your allergy to the sun going into temporary remission\.$"
   name="poison_sunallergy2"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:poison ("sunallergy")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You feel your blood thickening\.$"
   name="curerelapsing"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("relapsing")</send>
  </trigger>
  <trigger
   group="System_Poisons"
   match="^You feel your control over your power begin to slip away\.$"
   name="poison_powersap"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:poison ("powersap")
local is_telepaff = flags:get_check ("telepathy") or 0
if is_telepaff then
  if is_telepaff == 1 then
    flags:del_check ("telepathy")
  elseif is_telepaff == 2 then
    flags:add_check ("telepathy", 1)
  end--if
end--if</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^You feel your grasp over your consciousness slip away with a wrenching feeling of sickness\.$"
   name="lostdef_consciousness_plague"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
defs:lostdef ("consciousness")
if system:is_auto ("consciousness") then
  table.insert (defs ["ubal"], "consciousness")
end
end, "lostdef_consciousness_plague", true)</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You feel your health\, mana and ego replenished\.$"
   name="curesparklies"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>prompt:queue (function ()
system:cured_sparklies ()
end, "cured_sparklies", true)</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You feel your mouth return to normalcy as your tongue heals\.$"
   name="curemangledtongue"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("mangledtongue")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You feel yourself released from the painful inquisition\.$"
   name="cureinquisition"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:del_queue({ "heretic", "infidel", "inquisition" })</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^You fill your pipe with .*?(coltsfoot|faeleaf|myrtle).*?\.$"
   name="pipesfilled"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>pipes:filled ()
act:del_inv ("%1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You find ([A-Z][a-z]+) far too irresistable to declare an enemy\.$"
   name="enemying2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (flags:get ("todo_free") or "nil") == "enemying" or flags:get ("enemying") then
todo:done ("enemying", "free")
flags:del ("enemying")
affs:lusted ("%1")
end--if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You find that you are not yet ready to perform that feat\.$"
   name="sympfeatfail"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:add_check ("recklessness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You find you cannot bear to part from [A-Z][a-z]+\.$"
   name="music_perfectfifthed_still"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if not (defs:has("truehearing")) and
    not system:is_auto("truehearing") then
  system:set_auto ("truehearing", 1)
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You find yourself unwilling to drink while this music is playing\.$"
   name="affstarhymn4"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
  if bals:get ("elixir")==0.5 and not string.find (flags:get ("applying_salve") or "nil", "apply_health_to_") then fst:fire ("elixir", "now") end
  if bals:get ("purg")==0.5 then fst:fire ("purg", "now")end
  if bals:get ("speed") ==0.5 then fst:fire ("purg", "now") end
  if flags:get ("orgpotion") then fst:fire ("orgpotion", "now") end
  if flags:get ("brew") then fst:fire ("brew", "now") end
  if bals:get ("ah") ==0.5 then fst:fire ("ah", "now") end
  end, "starhymn4", true</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You find yourself unwilling to eat while this music is playing\.$"
   name="affstarhymn3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if bals:get ("herb") == 0.5 and
  not string.find ((flags:get ("applying") or "nil"), "apply_arnica_to") and
  not flags:get ("smoking")
 then
  prompt:queue (function () fst:fire ("herb", "now") end, "affstarhymn3", true)
end--if
if flags:get("sparklies") then
  prompt:queue (function () fst:fire ("sparklies", "now") end, "affstarhymn3", true)
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You flap your arms madly\.$"
   name="affstupidity9"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("stupidity")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tarot"
   match="^You fling a tarot card at the ground\, and a fountain of sparkling flecks of colour erupt at your feet\. An image of the Imperial Princess appears and touches your brow\, leaving a strange feeling in its wake\.$"
   name="ondef_princess"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("princess")
display.success ("princess")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tarot"
   match="^You fling a tarot card at yourself\, which transforms into the image of D\'varsha\, who then whispers the secrets of Highmagic to you\. Though your mind expands\, it is a struggle to retain this new understanding\.$"
   name="ondef_teacher"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("teacher")
display.success ("teacher")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tarot"
   match="^You fling a tarot card upon the ground\, and an image of Klangratch\, the Axe of War rises up\. He salutes you\, and gives you a knowing wink\, before fading from sight\.$"
   name="ondef_warrior"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("warrior", nil, "silent")
display.success ("warrior")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tarot"
   match="^You fling a tarot card upon the ground\, and an image of Shanth of the Quiet Mind rises up\, circling around you so fast that he becomes nothing but a blur\. His speed becomes so great that even the blur fades from sight\, though you sense his presence protecting you\.$"
   name="ondef_starleaper"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("starleaper", nil, "silent")
display.success ("starleaper")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tarot"
   match="^You fling a tarot card upon the ground\, and you hear the jingling of the bells of a jester\.$"
   name="ondef_fool"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("fool", nil, "silent")
display.success ("fool")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tarot"
   match="^You fling a tarot card upon the ground\, which explodes on impact and expands into a bubble of green light that rises up and engulfs you\. The image of Kiakoda rises up in your mind and the ground vibrates beneath your feet\.$"
   name="ondef_world"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("world", nil, "silent")
display.success ("world")</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="System_Offense"
   match="^You fling the Soulless tarot card at @system_target and upon impact\, it disappears\. An ominous silence overtakes your surroundings\.$"
   name="soulless_try"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTrigger ("soulless_try", false)
flags:add_check ("soulless", (flags:get_check ("soulless") or 1)-1)
if flags:get_check ("soulless")&lt;=0 then
 flags:del_check ("soulless")
end--if
EnableTrigger ("soulless_failed1", true)
EnableTrigger ("soulless_failed2", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tarot"
   match="^You fling the card at the ground\, and an image of Tzaraziko the Enigmatic springs forth\. She smiles at you cryptically and raises her dark crystal hand\. A deep vibration passes through you\, and she mysteriously vanishes in the blink of an eye\.$"
   name="ondef_enigma"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("enigma", nil, "silent")
display.success ("enigma")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^You fling your tarot card at @system_target\, which expands into an image of Juliana\. A set of scales appears above (?:[Hh]is|[Hh]er) head and one side of the scale quickly descends\. Justice will be done\.$"
   name="judge_"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("judge")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You flip the bird\.$"
   name="affstupidity5"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("stupidity")</send>
  </trigger>
  <trigger
   group="System_Focus"
   match="^You focus your mind intently on curing your (mental|spiritual) maladies\.$"
   name="focusmind_or_spirit"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if "%1" == "mental" then
system:add_cure ("focus_mind")
else
system:add_cure ("focus_spirit")
end--if
system:cures_on ()
EnableTriggerGroup ("System_Focus", false)</send>
  </trigger>
  <trigger
   group="System_Focus"
   match="^You focus your mind on your motor skills but find you are already mobile\.$"
   name="nocurefocus_body"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
nocure:check ("focus_body")
end, "nocurefocus_body", true)
EnableTriggerGroup ("System_Focus", false)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You follow .+? \w+ to .+?\.$"
   name="contemplating"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send ("ql")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You fondle yourself absently\.$"
   name="affstupidity7"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("stupidity")</send>
  </trigger>
  <trigger
   group="System_Gear"
   match="^You fuse together several .+? and form (?:a|an) \w+ vial\.$"
   name="madevial"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>gear:madevial ()</send>
  </trigger>
  <trigger
   group="System_TahtetsoMods"
   match="^You gasp and clutch your chest as it is struck with a crack\.$"
   name="tahtetso_gahtiahsho"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("chestpain")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You gasp and shiver as you feel yourself losing control of your own power\.$"
   name="symppowersap"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("powersap")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You gasp as a surging pain strikes you in your (left|right) (arm|hip)\.$"
   name="afftelekclot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if "%2" == "hip" then
  affs:add_queue ("clot", "%1leg")
else
 affs:add_queue ("clot", "%1arm")
end</send>
  </trigger>
  <trigger
   group="System_Poisons"
   match="^You gasp as your fine\-tuned reflexes disappear into a haze of confusion\.$"
   name="poison_clumsiness"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:poison ("clumsiness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You gasp helplessly for breath as ([A-Z][a-z]+) continues to viciously choke you\.$"
   name="kata_choking"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("grappled", "head", "%1")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You gently float to the ground\, protected from a nasty fall by your levitation\.$"
   name="fallen_levitation"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
flags:del ("climbing")
flags:del_check ("intrees")
affs:del ("intrees")
fst:disable ("climbing")
display.system ("Down from trees")
end, "climbing_down", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Offense"
   match="^You get ready to lunge through defenses\!$"
   name="raze5"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>offense ["rebounds"] [GetVariable ("system_target")] = nil
prompt:unqueue ("fist_norebound")</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^You glance over [A-Z][a-z]+ and see that (?:[Hh]is|[Hh]er) health is at (\d+)\/(\d+)\.$"
   name="start_assess"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>offense:assess ("health", %1, %2)
EnableTrigger ("assessing_wounds", true)
EnableTrigger ("assessing", true)
prompt:queue (function ()
 EnableTrigger ("start_assess", false)
 EnableTrigger ("assessing_wounds", false)
 EnableTrigger ("assessing", false)
 offense:assess ()
end, "start_assess")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You glare about you in religious indignity and hiss\, \&quot;Heathen\.\&quot;$"
   name="affstupidity3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("stupidity")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^You grasp a handful of cosmic threads and will them into existence\, then release them onto @system_target as a mass of sticky webs\.$"
   name="web_"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("web")</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^You grow still and begin to pray silently for preservation of your soul while you are out of the land\.$"
   name="logout"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:logout ()</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You have a barbed tail\.$"
   name="def_barbedtail"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("barbedtail", nil, nil, "fromdef")
bals:onbal ("tail", "silent")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You have a particularly intense shiver\.$"
   name="sympchills2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue({ "chills"})
affs:add ("disrupted")
defs:del_queue("fire")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You have a sudden sense of deja vu\.$"
   name="aff_aeonics_temporalbonds"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("insawarped", "timewarped", 5)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Necromancy"
   match="^You have already melted your flesh\. Why do it again\?$"
   name="has_putrefaction"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("putrefaction")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You have been slain(?: by .+)?\.$"
   name="dead_slain"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:add_check ("dead")</send>
  </trigger>
  <trigger
   group="System_Gear"
   match="^You have no \w+ stored in the rift\.$"
   name="outr_nogem"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>gear:madevial (true)</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You have no ailment that can be cured by this\.$"
   name="nocure_antidote"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>nocure:check ("drink_antidote")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You have no arms\!$"
   name="sympseveredarms"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add ({"amputated_leftarm"}, {"amputated_rightarm"})</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Gear"
   match="^You have no containers in your inventory\.$"
   name="potionlist_none"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTrigger ("potionlist_start", false)
EnableTrigger ("potionlist_none", false)
gear:reset ("vials")
gear:save ()
gear:check ("vials")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You have no enemies\.$"
   name="no_enemies"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if flags:get ("unenemying") or (flags:get ("todo_free") or "") == "unenemyall" or
 GetTriggerInfo ("start_enemies", 8) then
 adven:reset ("enemy_list")
end--if
if GetTriggerInfo ("start_enemies", 8) then
 EnableTrigger ("start_enemies", false)
end--if
if (flags:get ("todo_free") or "") == "unenemyall" then
 todo:done ("unenemyall", "free")
 adven:enemied ()
end--if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Nihilism"
   match="^You have no tail with which to sting\.$"
   name="no_tail"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if flags:get ("no_sting") then
defs:lostdef ("barbedtail", "silent")
affs:del ("no_sting")
fst:disable ("no_sting")
system:set_auto ("sting", 0)
end</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^You have opened your aetheric channels to other planar entities\.$"
   name="def_channnels"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("channels", nil, nil, "fromdef")</send>
  </trigger>
  <trigger
   custom_colour="17"
   enabled="y"
   group="System_Tracking"
   keep_evaluating="y"
   match="^You have recovered balance on all limbs\.$"
   name="onbal_limbs"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
   other_back_colour="forestgreen"
  >
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Tracking"
   match="^You have recovered balance on your (left|right) arm\.$"
   name="onbal_arms"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
   other_text_colour="white"
   other_back_colour="forestgreen"
  >
  <send>ColourNote ("blue", "lime", "&lt;&lt; "..string.upper ("%1").." &gt;&gt;")</send>
  </trigger>
  <trigger
   custom_colour="17"
   enabled="y"
   group="System_Tracking"
   match="^You have recovered balance\.$"
   name="onbal_bal"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
   other_back_colour="forestgreen"
  >
  </trigger>
  <trigger
   custom_colour="17"
   enabled="y"
   group="System_Tracking"
   match="^You have recovered equilibrium\.$"
   name="onbal_eq"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
   other_back_colour="forestgreen"
  >
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You have writhed free of the jaws of the mutt clamped on your (left|right) arm\.$"
   name="cureclampedmutt"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:cured_queue (("clamped_%1arm")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You have writhed free of your entanglement\.$"
   name="cureentangled"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:cured_queue ("entangled")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You have writhed free of your ropes\.$"
   name="cureroped"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:cured_queue ("roped")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You have writhed free of your shackles\.$"
   name="cureshackled"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:cured_queue ("shackled")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You have writhed free of your state of transfixion\.$"
   name="curetransfixed"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:cured_queue ("transfixed")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You have writhed free of your tight bindings\.$"
   name="curetrussed"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:cured_queue ("trussed")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You hear a dark thrumming\, and pain wracks your entire being\.$"
   name="affpowerspikes2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("powerspikes")
flags:add_check ("recklessness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You hear an ominous sound\, and a dull pain stab throbs throughout your head\.$"
   name="affmanabarbs2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("manabarbs")
flags:add_check ("recklessness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You hear strange whispers\, and a sharp pain stabs you between the eyes\.$"
   name="affegovice2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("egovice")
flags:add_check ("recklessness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You hear whispers that make no sense but tickle the back of your mind and make you want to scream\.$"
   name="para_greywhisperssymp"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("insawarped", "insanity", 3)
affs:add_queue ("add_custom", "greywhisperssymp", "focus", "focus mind")</send>
  </trigger>
  <trigger
   group="System_Rainbows"
   match="^You heave a sigh of relief as the beautiful and maddening rainbow patterns that swirl feverishly around you fade away in a multi\-coloured smoke\.$"
   name="affrainbowsdone"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:del ("rainbow_patterns")
fst:fire ("rainbow_patterns", "now")</send>
  </trigger>
  <trigger
   group="System_ShofangiMods"
   match="^You howl in agony as the .+? digs deep and pierces your spine\. Your body suddenly starts to feel numb\.$"
   name="shofangi_spinaltap"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone("paralysis")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You immediately throw up what you just ate\.$"
   name="sympgluttony"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("gluttony")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You inhale a deep breath\, ready to run quickly if the need arises\.$"
   name="ondef_adroitness"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("adroitness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You inhale deeply and begin holding your breath\.$"
   name="ondef_holdbreath"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:add_queue ("holdbreath")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You jerk as the iron cross pulls your limbs\, resulting in a sickening crunch of bones\.$"
   name="affnecrocrucified1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("crucified")
if not affs:has ("broken_leftleg") then
 affs:add_queue ("broken_leftleg")
else
  affs:add_queue ("broken_rightleg")
end
if not affs:has ("broken_leftarm") then
 affs:add_queue ("broken_leftarm")
else
  affs:add_queue ("broken_rightarm")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You lash out clumsily\.$"
   name="sympclumsiness"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:bal ("clumsiness")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You laugh off the circuitous logic in your arguments\.$"
   name="curedebatecircuitous"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:del_queue("debate_circuitous")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You leap up and attempt a graceful swan dive\.\.\.right into the solid ground\.$"
   name="symphallucinations4"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone("hallucinations")
affs:prone ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You let out a deep breath and release yourself from performing\.$"
   name="lostdef_performances"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del({ "drunkard", "performance", "role", "sober", "wounded" })</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You let out a massive belch into the air\.$"
   name="affstupidity4"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("stupidity")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^You lightly stroke the flesh of @system_target\, drinking in the warmth\.$"
   name="lichtouch_"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("touch")</send>
  </trigger>
  <trigger
   group="System_Poisons"
   match="^You look about yourself nervously\.$"
   name="poison_aleutian"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:poison ("paranoia")</send>
  </trigger>
  <trigger
   group="System_Poisons"
   match="^You look about yourself\, frenzied and wild\-eyed\.$"
   name="poison_dementia"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:poison ("dementia")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You look downwards and the ground spins dizzily beneath you\.$"
   name="sympvertigo2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("vertigo")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You lose consciousness as ([A-Z][a-z]+) continues to choke you with [hH](?:is|er) tahto staff\.$"
   name="tahtetso_choking"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("grappled", "head", "%1")
prompt:unqueue ("ungrappled_%1")
wounds:monk_attack (nil, "head", 0, "tahto")
affs:add ("blackout")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You lose purchase on .+?\.$"
   name="lostdef_mounted"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ("mounted")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You lose your footing and tumble crashing down to the forest floor\.$"
   name="falling_down"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
flags:del ("climbing")
flags:del_check ("intrees")
affs:del ("intrees")
fst:disable ("climbing")
display.system ("down from trees")
end, "falling_down", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You love [A-Z][a-z]+ far too much to even THINK of hurting (?:[hH]im|[hH]er)\.$"
   name="symplovers"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("lovers")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You lurch forward and vomit out a puddle of blood\.$"
   name="sympvomitingblood"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:bal ("vomitingblood")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Nihilism"
   match="^You make a subtle gesture towards your demonic thrall\, cloaking it from prying eyes\.$"
   name="ondef_demoncloak"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("demoncloak")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You may (?:drink|use) another health\, mana\, or bromide potion(?:\, or medicine bag)?\.$"
   name="onbal_elixir"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>bals:onbal ("elixir")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You may apply another salve to yourself\.$"
   name="onbal_salve"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>bals:onbal ("salve")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You may be healed by a scroll again\.$"
   name="onbal_scroll"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>bals:onbal("scroll")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You may drink another purgative or curing potion\.$"
   name="onbal_purg"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>bals:onbal("purg")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You may eat another herb that gives the sparkleberry effect\.$"
   name="onbal_sparklies"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>bals:onbal("sparklies")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You may eat or smoke another herb\.$"
   name="onbal_herb"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>bals:onbal("herb")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You may not take another dose of allheale so soon\.$"
   name="offbal_ah"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>fst:fire ("ah", "now")
bals:offbal ("ah", "silent")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You may take another dose of allheale\.$"
   name="onbal_ah"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>bals:onbal("ah")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You may use a focus charm again\.$"
   name="charmbalance"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>bals:gain("charm")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You mind quickly focuses on the real world\, shrugging off childish daydreams\.$"
   name="curedaydreaming"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("daydreaming")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You move about quickly and lose a pigwidgeon"
   name="curepigwidgeon2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if flags:get ("todo_bal") == "pigwidgeon" then
todo:done ("pigwidgeon", "bal")
end
display.system ("Pigwidgeon Lost")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You move sluggishly into action\.$"
   name="sympaeon"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>sca:check ("slowed", "aeon")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You must (?:first raise yourself from the floor and stand up|pick yourself off the ground first|first stand up before you can do that)\.$"
   name="sympprone"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You narrow your eyes and look around greedily for something to add to your hoard\.$"
   name="ondef_acquisitio"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:add_queue ("acquisitio")</send>
  </trigger>
  <trigger
   group="System_Gear"
   match="^You need five .+? to create that vial\.$"
   name="nogem"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>gear:madevial (true)</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You no longer enjoy pain\.$"
   name="curemasochism"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue("masochism")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You no longer fear wearing clothes\.$"
   name="curevestiphobia"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("vestiphobia")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You no longer feel lightheaded and weak\.$"
   name="curelightheaded"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:cured_queue ("lightheaded")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You no longer feel so sluggish\.$"
   name="curesluggish"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:del_alert ("sluggish")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You no longer have any temporary insanity\.$"
   name="cureinsanity2"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:add_queue ("insawarped", "insanity", -1, "none")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You no longer move so adroitly\.$"
   name="lostdef_adroitness"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:lostdef ("adroitness")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You no longer will inspire disloyalty among friends\.$"
   name="cureredisloyalty"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("disloyalty")</send>
  </trigger>
  <trigger
   group="System_Poisons"
   match="^You notice that your sweat glands have begun to rapidly secrete a foul\, oily substance\.$"
   name="poison_senso"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:poison ("slickness")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You notice the glow illuminating you fades away\.$"
   name="cureilluminated"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("illuminated")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You now possess the gift of the sixth sense\.$"
   name="ondef_sixthsense"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>prompt:queue (function ()
affs:del ("no_sixthsense")
fst:disable ("ondef_sixthsense")
defs:ondef ("sixthsense")
end, "ondef_sixthsense", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You now possess the gift of the third eye\.$"
   name="ondef_thirdeye"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:add_queue ("thirdeye")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You now possess the gift of truehearing\.$"
   name="ondef_truehearing"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>prompt:queue (function ()
system:cured ("no_truehearing", "silent")
defs:ondef ("truehearing")
end, "ondef_truehearing", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Awaken"
   match="^You open your eyes and (?:yawn mightily|stretch languidly\, feeling deliciously well\-rested)\.$"
   name="cureasleep1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if flags:get ("asleep") then
system:cured_queue ("asleep")
end--if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You open your eyes wide\, concentrating on the small strands of aether around you\.$"
   name="ondef_aethersight"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:add_queue ("aethersight")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You order your mind to ensure you will not journey far into the dreamworld\.$"
   name="ondef_metawake"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>prompt:queue (function ()
affs:del ("no_metawake")
fst:disable ("no_metawake")
defs:ondef ("metawake")
sca:check ()
end, "ondef_metawake", true)</send>
  </trigger>
  <trigger
   group="System_Gear"
   match="^You pay \d+ gold to refill .+? from .+? with .+?\.$"
   name="refilling"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>gear:refilled ()</send>
  </trigger>
  <trigger
   group="System_Bashing"
   match="^You pick up (?:a|\d+) gold sovereigns."
   name="gotgold"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>todo:done ("gold_drop", "bal")
EnableTrigger ("nogold", false)
EnableTrigger ("gotgold", false)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You plummet head first into the ground with a sickening crunch\.$"
   name="affconcussion"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone ({"concussion", "damagedhead"})
affs:prone ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Offense"
   match="^You point a blighted symbol of pestilence towards .+?\, and a gout of black fire slams into (?:[Hh]is|[Hh]er|[Ii]ts) chest\.$"
   name="bash_attack"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if system:is_auto ("bashing") then
todo:done ("bash", "bal")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^You point at @system_target and shove your \w+ towards him\. Wicked steel implements appear in his claws as he jumps on @system_target and begins carving deeply and slowly into (?:[Hh]is|[Hh]er) flesh\. (?:He|She) screams in abject agony during this obscene torture\.$"
   name="torture_"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("torture")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^You point at @system_target and utter words of power\, leeching (?:[Hh]is|[Hh]er) mental reserves into your own\.$"
   name="leech_"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("leech")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You pour a glowing gold oil into your hand and furiously rub it into the surface of (.*)\. Magically\, the nicks and dull spots of \1 slowly fade away\, leaving behind a keen weapon\.$"
   name="ondef_sharpness"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>if flags:get ("todo_bal") == "sharpness" then todo:done ("sharpness", "bal") end
if offense and offense ["current"] then
local has_sharpness = (defs:has ("sharpness") or 0)+1
if has_sharpness &gt; #offense ["current"] then has_sharpness = #offense ["current"] end
if has_sharpness == #offense ["current"] then
  flags:del_check ("sharpness")
end --if
defs:ondef ("sharpness", has_sharpness)
end--if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Nihilism"
   match="^You press your hands together and bow your head\, concentrating (?:up)?on opening up the aetheric channels to other planar entities\.$"
   name="ondef_channnels"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("channels")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You pull a cosmic web down around your feet\, and you sense that gravity will be your ally when entering water\.$"
   name="ondef_waterwalk"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:add_queue ("waterwalk")
affs:del ("no_waterwalk")
fst:disable ("no_waterwalk")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You put a hand to your throat as an invisible force tightens around your neck and chokes you\.$"
   name="afftelekchoke"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>display.warning ("Choking!")
affs:add ("blackout")
affs:add_queue ("clot", "unknown")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Offense"
   match="^You put one tarot card with the image of the Soulless in your deck of cards\.$"
   name="ind_soulless"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send> flags:add_check ("soulless", (flags:get_check ("soulless") or 1)-1)
 if flags:get_check ("soulless")&lt;=0 then
  flags:del_check ("soulless")
 end--if</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^You quickly fling a Lust card at @system_target and (?:[Hh]is|[Hh]er) eyes light up\.$"
   name="lust_"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("lust")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Awaken"
   match="^You quickly pull yourself out of sleep\.$"
   name="ondef_metawakeeffect"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
if affs:has ("asleep") then
  system:cured_queue ("asleep")
end--if
affs:del ("no_metawake")
fst:disable ("no_metawake")
defs:ondef ("metawake")
affs:prone ()
end, "cured_asleep", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Offense"
   match="^You raze ([A-Z][a-z]+)\'s aura of rebounding with .+?\.$"
   name="raze1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>offense:rebound ("%1", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Offense"
   match="^You raze ([A-Z][a-z]+)\'s magical shield with .+?\.$"
   name="raze4"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>offense:rebound ("%1", true)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^You raze @system_target(?:\'s|\') speed defen[sc]e with(?:.*)\.$"
   name="raze3"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>offense ["rebounds"] [GetVariable ("system_target")] = nil
display.mult ("white", "blue", "noSPEED")
prompt:unqueue ("fist_norebound")</send>
  </trigger>
  <trigger
   group="System_Herbs"
   match="^You reach down and carefully harvest .*\.$"
   name="harvesting_"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>herbs:picked()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You reach upwards and concentrate on finding a sturdy branch\, then lift yourself up with relative ease\.$"
   name="climbing_tress"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
flags:add_check ("intrees")
if flags:get ("climbing")=="up" then
  affs:del ("pit")
  flags:del ("climbing")
  fst:disable ("climbing")
  sca:check ()
end
end, "climbing_trees", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You read a Scroll of Healing\.$"
   name="readhealing"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTrigger ("readhealing", false)
system:cures_on()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You read a Scroll of Protection\.$"
   name="readprotection"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTrigger ("readprotection", false)
prompt:queue (function ()
fst:disable ("no_protection")
fst:enable ("ondef_protection")
magic:used ("protection")
end, "readprotection", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You read a magic tome\.$"
   name="readhtome"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if flags:get("tome") == "healing" then
prompt:queue (function ()
bals:offbal ("scroll", "silent")
fst:disable ("scroll")
magic:used ("tome")
end, "readhtome", true)
end
flags:clear("tome")</send>
  </trigger>
  <trigger
   group="System_Poisons"
   match="^You reali[sz]e that your heroic actions can no longer continue unnoticed\, and you take it upon yourself to rectify the situation\.$"
   name="poison_reckless2"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:poison ("recklessness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You realise that you have been left alone \- you must find companionship\!$"
   name="symploneliness"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("loneliness")</send>
  </trigger>
  <trigger
   group="System_NinjakariMods"
   match="^You reel backwards as blood splurts out of your chest\.$"
   name="ninjakari_illgathoru_chest"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("phrenicnerve")
affs:add_queue ("bleeding", 175)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You regain consciousness with a start\.$"
   name="cureunconscious"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone()
prompt:queue (function ()
 if string.find (prompt ["status"], "p") and affs:has ("unconscious") then
  affs:del ("unconscious")
  affs:add ("disrupted")
  affs:masked (2)
 end
end, "cureunconscious", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You reject the friendship of ([A-Z][a-z]+)\.$"
   name="curelust1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if flags:get ("reject") then
affs:lusted ("%1", true)
flags:del ("reject")
fst:disable ("reject")
end--if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Offense"
   match="^You release the Healer tarot\, which rises up and forms the image of Dionamus\. The image turns into a golden sun that basks (you|[A-Z][a-z]+) in its radiant healing rays\.$"
   name="healer_"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("healer", "%1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Offense"
   match="^You release the Magician tarot and as it drops slowly to the earth\, it bathes (you|[A-Z][a-z]+) in a muted blue light\.$"
   name="magician_"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("magician", "%1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Necromancy"
   match="^You release the cold of the grave from your undead flesh\.$"
   name="ondef_coldaura"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("coldaura")</send>
  </trigger>
  <trigger
   group="System_Gear"
   match="^You remove (\d+) (\w+), bringing the total in the rift to \d+\.$"
   name="outr_gem"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local number = tonumber ("%1")
EnableTrigger ("outr_gem", false)
EnableTrigger ("outr_nogem", false)
todo:done ("outr_gem", "free")
if number~= 5 then
 Send ("inr %1 %2")
 gear:madevial (true)
 return
end
todo:add ("bal", "makevial", "fashion vial %2")
EnableTrigger ("madevial", true)
EnableTrigger ("nogem", true)
EnableTrigger ("novialtype", true)
EnableTrigger ("noskill", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You return to the normal timestream\.$"
   name="cureaeon_passive"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:cured_queue ("aeon")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You return to the normal timestream\.$"
   name="cureaeon"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("aeon")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You review the performances of others around you\.$"
   name="defup_review"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:add_queue ("review")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You rub .*?(?:prayer beads|hairpin).*? and (?:it|they) begins? to glow with a pulsating light\.$"
   name="rubbed_focus_charm"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:rubbed_focus()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Offense"
   match="^You rub some \w+ on .+?\.$"
   name="envenoming"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^You rub the image of the Soulless on @system_target\, who pales slightly\.$"
   name="soulless_rub"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("Rubbed")
SendNoEcho ("sniff soulless")
EnableTrigger ("soulless_sniff")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You rub your hands together greedily\.$"
   name="ondef_selfishness"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:add_queue ("selfishness")
affs:del ("no_selfishness")
fst:disable ("no_selfishness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You run into a network of rainbows\, the light and colour confusing you and making you disoriented\.$"
   name="aff_aero_rainbowclouds"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("confusion")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You rush about in a state of utter panic\.$"
   name="sympfear"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("fear")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You scream as [A-Z][a-z]+ applies pressure with .+?\, dislocating your (head|chest|gut|left arm|left leg|right arm|right leg) with a loud snap\.$"
   name="tahtetso_bomrakobo"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local part = string.gsub("%1", " ", "")
wounds:monk_attack (nil, part)
affs:add_queue ("grappled", part)
if string.find(part, "leg") or string.find(part, "arm") then
  affs:add_queue("dislocated_" .. part)
end</send>
  </trigger>
  <trigger
   group="System_NinjakariMods"
   match="^You scream as the chain tears through a nerve in your (left|right) arm\.$"
   name="ninjakari_illgathoru_arm"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("collapsednerve_%1arm")
affs:add_queue ("bleeding", 175)</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^You scream as you feel the force of the landing break both your legs\.$"
   name="blown_crippledlegs"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("broken_rightleg")
affs:add_queue ("broken_leftleg")</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^You scream as your entire (left|right) (arm|leg) is reduced to ash\.$"
   name="aff_pyro_ashlimb"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("amputated_%1%2")
affs:add_queue ("bleeding", 500)
affs:add_queue ("stun")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You scream in absolute agony and spin violently through the air in a spray of crimson blood\, crashing painfully to the ground elsewhere\.$"
   name="shofangi_bulltoss"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
 affs:add ("grappled")
end, "ungrappled_%1", true)
for i=1,3 do
display.warning ("Shofa Throw!")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You scream in agony as thorny vines suddenly sprout out of your skin and wrap you in a bloody embrace\.$"
   name="affdruiddarkseed2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue({ "darkseed", "entangled"})
--fst:enable ("darkseed")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You scream out in pain as a phantom rakes your skin with its sharp claws\.$"
   name="affphanclaws"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("bleeding", 400)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You screem in agony as the violent chord threatens to rip you asunder\.$"
   name="affnecrodiscordant"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:add_check ("recklessness")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You scrub yourself vigorously and wash away the horrible ectoplasm\.$"
   name="curescrubectoplasm"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if affs:has ("sap") then
 system:cured_queue ("sap")
  end--if
  affs:del_queue ({"muddy", "ectoplasm",})</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You scrub yourself vigorously until you feel squeaky clean\.$"
   name="curescrubbables"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if affs:has ("sap") then
 system:cured_queue ("sap")
end --if
if affs:has ("slickness") then
 system:cured_queue ("slickness")
end --if
affs:del_queue({"mucous", "muddy", "ectoplasm", "mucous", "stinky", "gunk", "ablaze", "deathmark",})</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="System_Offense"
   match="^You sense that your archdemon has control of @system_target\.$"
   name="demon_dominate"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>local msgs = {
 ["vomits forth a stream of noxious fluid"] = "Gorgulu",
 ["With a cold smile"] = "Nifilhema",
 ["screams in rage"] = "Asthorath",
 ["shadowy tendrils burst forth and slither over"] = "Luciphage",
 ["and guturally whispers something to"] = "Baalphegar",}
for k, v in pairs (msgs) do
 if string.find ("%0", k) then
  offense:demon ("%0", v)
 end
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You sense the choking effect of the shadow leaving you\.$"
   name="curechoke"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:del_queue("choke")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You sense the curse of treebane leaves? your spirit\.$"
   name="curetreebane"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("treebane")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You shake your head and clear it of vapors\.$"
   name="curevapors"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("vapors")</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^You shake your head and glare hatefully at all your surroundings\.$"
   name="reject_rubeus"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:reject ("rubeus")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You shake your head\, wondering what you ever saw in .+"
   name="curelovers"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("lovers")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You shrug off your impatience and focus your mind once again\.$"
   name="cureimpatient"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:cured_queue ("impatience")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You shrug off your narcoleptic tendencies\.$"
   name="curenarcolepsy"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("narcolepsy")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Offense"
   match="^You shuffle one tarot card with the image of the (.+?) out of your deck\.$"
   name="outd_"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>if "%1" == "Soulless" then
 flags:add_check ("soulless", (flags:get_check ("soulless") or 0)+1)
 if flags:get_check ("soulless_rub") then
  offense:soulless_rub ()
  flags:del_check ("soulless_rub")
 end
end--if</send>
  </trigger>
  <trigger
   group="System_Poisons"
   match="^You shuffle your feet noisily\, suddenly bored\.$"
   name="poison_impatience"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:poison ("impatience")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You shut your eyes and concentrate on the end of life\. A moment later\, you feel inextricably linked with the strings of fate\.$"
   name="ondef_deathsense"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:add_queue ("deathsense")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You sigh contentedly as the amber brew takes away your pain\.$"
   name="ondef_amberbeer"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>prompt:queue (function ()
flags:del ("brew")
fst:disable ("brew")
bals:onbal ("brew", "silent")
end, "brew", true)
defs:add_queue ("beer", "amber")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You sigh in relief as the fire on your body flickers and fades\.$"
   name="cureablazeauto"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:del_queue("ablaze")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You sigh in relief as the jinx that confounds your mind lifts\.$"
   name="curejinx"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("jinx")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You sigh in relief as the ravaging plague subsides\.$"
   name="curehomeostasis"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:del_queue("homeostasis")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You sit upon your throne\, and your heart beats faster as a feeling of transcendent superiority floods through your being\.$"
   name="ondef_throne"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:add_queue ("throne")</send>
  </trigger>
  <trigger
   group="System_Offense"
   match="^You sniff the card of the Soulless\, and sense it has been imprinted upon ([A-Z][a-z]+) (\d+) times\.$"
   name="soulless_sniff"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if tonumber ("%2")&lt;7 then
display.enemy ("%1 %2 rubs")
else
 if "%1" == GetVariable ("system_target") then
  ColourNote ("magenta", "","    _____ ")
  ColourNote ("magenta", "","   / ____|")
  ColourNote ("magenta", "","  | (___  ")
  ColourNote ("magenta", "","   \\___ \\ ")
  ColourNote ("magenta", "","   ____) |")
  ColourNote ("magenta", "","  |_____/ ")
  display.success ("Soulless")
 else
  display.success ("Soulless", "%1")
 end
end
EnableTrigger ("soulless_sniff", false)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Offense"
   match="^You spew forth a filthy cloud of bloated green flies\.$"
   name="contagion_"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("Contagion")
prompt:add_alert ("t_contagion", "T_Flies", 120)</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^You spread the healing potion on yourself but it quickly evaporates\.$"
   name="applying_healthfail"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>act:applying_healthfail ()
EnableTrigger ("applying_health", false)
EnableTrigger ("applying_healthfail", false)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You sprinkle a circle of salt around yourself\, and a shimmering white orb springs up around you\.$"
   name="ondef_shieldsalt"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:add_queue ("shield")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^You stand an Aeon tarot on your palm\, and blow it lightly at @system_target\.$"
   name="tarot_aeon"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>EnableTrigger ("target_aeoned", true)
prompt:queue (function ()
 if flags:get_check ("target_aeoned") then
  display.success ("aeon")
  flags:del_check ("target_aeoned")
  prompt:add_alert ("t_aeon", "T_aeon", 4)
 else
  display.success ("Quicksilv")
 end
end, "offense_aeon", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You stand straight up\.$"
   name="cureprone1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if flags:get ("prone") then
affs:prone ("frozen")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You stand straight up\.$"
   name="cureprone"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if flags:get ("prone") then
system:cured_queue ("prone")
end--if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You stand up a little straighter and try to act more sober\.$"
   name="defup_role_sober"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:add_queue ("sober")
defs:del_queue ("drunkard")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You stand up and stretch your arms out wide\.$"
   name="cureprone2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if flags:get ("prone") then
affs:prone ("frozen")
end --if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You step back into the normal timestream\.$"
   name="aff_aeonics_displaced3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
affs:del ("displacement")
fst:disable ("displacement")
end, "displaced3", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You step down off of .+?\.$"
   name="lostdef_dismount"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ("mounted")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You stop trembling\.$"
   name="curetrembling"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("trembling")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_WStart"
   match="^You strain against the bindings that have you painfully trussed up\.$"
   name="starttrussed"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
affs:impaled (0)
affs:pinleg (0)  
act:writhing_start () end, "start_trussed", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Offense"
   match="^You stretch out your leathery\, bat\-like wings to their full length and hurl yourself into the skies above\.$"
   name="wings_fly"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>display.success ("Fly")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Offense"
   match="^You strike out at ([A-Z][a-z]+) with your deadly tail\, and sting (?:[Hh]im|[Hh]er)\.$"
   name="stinging_"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:del ("no_sting")
fst:disable ("no_sting")
defs:ondef ("barbedtail", true, "silent")
bals:offbal ("tail", "silent")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^You strike out at @system_target, but (?:[Hh]e|[Ss]he) neatly sidesteps the blow\.$"
   name="miss2"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.miss ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_WStart"
   match="^You struggle to free your limbs from the thorny vines\.$"
   name="startlashed"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
affs:impaled (0)
affs:pinleg (0)
act:writhing_start () end, "start_lashed", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_WStart"
   match="^You struggle to free yourself from being hoisted in the air\.$"
   name="starthoisted"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
affs:impaled (0)
affs:pinleg (0)    
act:writhing_start () end, "start_hoisted", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You stumble and lose your combat stance\.$"
   name="sympstumblestance"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function () stance:reset () end, "sympstumblestance", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Ent"
   match="^You stumble as you feel invisible strands of force wrap around you\, followed by a high\-pitched thrum\.$"
   name="summon_attempt"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>for i=1,5 do
display.warning ("Summon")
end
prompt:add_alert ("summon", "Summon", 5)</send>
  </trigger>
  <trigger
   group="System_Poisons"
   match="^You stumble as your (left|right) leg shrivels into a useless appendage\.$"
   name="poison_calcise"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:poison ("broken_%1leg")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You suddenly feel incapable of falling asleep\.$"
   name="ondef_insomniaherb"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>prompt:queue (function ()
system:cured ("no_insomnia", "silent")
defs:ondef ("insomnia")
end, "ondef_insomniaherb", true)</send>
  </trigger>
  <trigger
   group="System_Poisons"
   match="^You suddenly feel lightheaded and faint\.$"
   name="poison_vapors"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:poison ("vapors")
affs:add ("blackout")</send>
  </trigger>
  <trigger
   group="System_Poisons"
   match="^You suddenly feel lightheaded\.$"
   name="poison_hemophilia"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:poison ("hemophilia")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Offense"
   match="^You suddenly perceive the vague outline of an aura of rebounding around ([A-Z][a-z]+)\.$"
   name="offense_highlight_rebound"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>offense:rebound ("%1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You suddenly relive events that happened just moments ago\.$"
   name="aff_aeonics_timeechoes2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if affs:has("time_echoes") then
 affs:add_queue ("insawarped", "timewarped", 4)
 prompt:queue (function ()
  affs:add_custom ("echoes2", "herb", "eat pennyroyal", nil, true)
  affs:masked (1)
 end, "affs_add_echoes2", true) 
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You suffer acute pain as you (?:chew|swallow)\.$"
   name="sympbrokenjaw"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if not affs:has("shatteredjaw") then
  affs:add_queue("brokenjaw")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^You swing .+? with all your might\, smashing it into the head of @system_target with a resounding ring\.$"
   name="shieldstun_"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("shieldstun")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You swoon as you suffer a toxic relapse\.$"
   name="symprelapse"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("relapsing")
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You take a deep breath and mentally shift into performance mode\.$"
   name="ondef_performance"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:add_queue ("performance")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^You take a deep gasp and regain better control of your lungs\.$"
   name="cureshortbreath"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("shortbreath")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You take a long drag off your pipe\.$"
   name="smoking_"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if flags:get ("smoking") then
 pipes:smoking ()
else
 flags:add ("forced_smoking")
 prompt:queue (function ()
  prompt:queue (function () flags:del ("forced_smoking") end, "inside_job")
 end, "smoking_")
end
system:cures_on ()</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^You take out some healing potion and quickly rub it on your (head|chest|gut|arms|legs)\.$"
   name="applying_health"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTrigger ("applying_health", false)
EnableTrigger ("applying_healthfail", false)
act:applying_health ("%1")
system:cures_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You take out some oil and quickly rub it on your skin\.$"
   name="defup_perfumes"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>-------WTFWTF TO ADD HERE?!?!</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^You take out some salve and quickly rub it on your (head|chest|gut|arms|legs|skin)\.$"
   name="applying_salve"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTrigger ("applying_salve", false)
act:applying_salve ("%1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Calendar"
   match="^You think that it is currently day\-time up above\.$"
   name="cal_day16"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>calendar:time (false)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Calendar"
   match="^You think that it is currently night\-time up above\.$"
   name="cal_night13"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>calendar:time (true)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^You throw a Lovers tarot at @system_target and as it strikes true\, a look of utter love covers (?:[Hh]is|[Hh]er) face\.$"
   name="lovers_"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("Lovers")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^You toss the Hanged Man tarot card at @system_target and as it reaches ([Hh]im|[Hh]er)\, a huge mass of rope bursts out of it to entrap and hinder \1\.$"
   name="hangedman_"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("roped")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You touch the cosmos and allow your eyes to pierce through the veil of death\.$"
   name="ondef_deathsight"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:add_queue ("deathsight")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   lines_to_match="2"
   match="^You tousle your hair and rub dirt on your face\, then hunch your shoulders in a slouch\.\nYou transform yourself into a vagabond\!$"
   multi_line="y"
   name="defup_role_vagabond"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:add_queue ("role", "vagabond")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You try to raise the strength in your limbs\, but find yourself too weary\.$"
   name="sympweakness"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("weakness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You try to speak\, but the hole in your throat inhibits your speaking abilities\.$"
   name="sympslitthroat2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("slitthroat")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You try to speak\, but your crushed windpipe inhibits your speaking abilities\.$"
   name="sympcrushedpipe2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("windpipe")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You try to speak\, but your mangled tongue inhibits your abilities\.$"
   name="symp_shofangitongue"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("mangledtongue")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^You tug at the cosmic fabric that binds @system_target\, in an effort to send (?:[Hh]im|[Hh]er) to sleep\.$"
   name="sleep_"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("sleep")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_WContinue"
   match="^You twist and turn as you attempt to escape from your entanglement\.$"
   name="centangled"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local aff_msgs = {"trussed", "entangled", "grappled", "hoisted", "roped", "shackled", }
for k, a in ipairs (aff_msgs) do
 if flags:get ("writhing") or flags:get ("writhing_start") or affs:has (a) then
  prompt:queue (function () act:writhing () end, "centangled", true)
  break
 end--if
end--for</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_WStart"
   match="^You twist and turn as you struggle to break free of the (?:shackles that bind you|grapple that holds you)\.$"
   name="cshackled_grappled"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function () 
 affs:impaled (0)
 affs:pinleg (0)  
 act:writhing_start () 
end, "cshackled", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_WStart"
   match="^You twist and turn as you struggle to break free of the ropes that bind you\.$"
   name="startroped"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
 affs:impaled (0)
 affs:pinleg (0)  
 act:writhing_start () 
end, "start_roped", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   lines_to_match="2"
   match="^You use \d+ of your divine essence\.\nYou exert your will and wreathe yourself in translucent divine fire\.$"
   multi_line="y"
   name="divine_fired"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:add_check("divine_fire")
  fst:enable ("divine_fire")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You use your (?:left|right) foot to stomp on your (?:left|right) as hard as possible\.$"
   name="sympmasochism1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("masochism")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You vigourously scrub off the slimy mucous that covers you\.$"
   name="curescrubmucuous"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if affs:has ("sap") then
 system:cured_queue ("sap")
  end--if
  affs:del_queue ({"muddy", "ectoplasm", "mucous"})</send>
  </trigger>
  <trigger
   group="System_NinjakariMods"
   match="^You vomit up hot blood as your chest crumples inward like wet parchment from the chain\'s impact\.$"
   name="ninjakari_crush_chest"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("crushedchest")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You watch helplessly as your lifeforce drains into [A-Z][a-z]+\.$"
   name="symphealthleech"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("healthleech")</send>
  </trigger>
  <trigger
   group="System_Poisons"
   match="^You watch\, in horror\, as your (left|right) arm shrivels up and becomes useless\.$"
   name="poison_dendroxin"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:poison ("broken_%1arm")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Nihilism"
   match="^You wave at your demonic thrall\, allowing the demoncloak to fade\.$"
   name="lostdef_demoncloak"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:lostdef ("demoncloak")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^You will now lip read to overcome the effects of deafness\.$"
   name="ondef_lipread"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:add_queue ("lipread")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You yell\, \&quot;I like cheese\!\&quot;$"
   name="affstupidity1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("stupidity")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You yell\, \&quot;[A-Z][a-z]+ is cute\!\&quot;$"
   name="affstupidity6"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("stupidity")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You yell\, \&quot;[A-Z][a-z]+ smells like a goat\!\&quot;$"
   name="affstupidity2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("stupidity")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You're already climbing as fast as you can\!$"
   name="pit_alreadyclimbing"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if affs:has ("pit") then
  prompt:queue (function ()
  fst:disable ("climbing")
  fst:enable ("pit")
  sca:check ()
  EnableTrigger ("pit_climbedout", true)
  end, "pit_climbing", true)
end--if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Necromancy"
   match="^You(?: concentrate briefly and your flesh is once again|r flesh is already) solid\.$"
   name="lostdef_putrefaction"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:lostdef ("putrefaction")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_MagicRecharge"
   match="^You(?: pay \d+ gold to)? recharge (.*) with \d+ charges from an energy cube\.$"
   name="magicrecharge"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (flags:get ("todo_free") or "nil") == "recharge" then
magic:recharged ()
todo:done ("recharge", "free")
end --if</send>
  </trigger>
  <trigger
   group="System_TahtetsoMods"
   match="^You\'re thrown off balance and fall down from the whirling strike\.$"
   name="tahtetso_dervish"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone()</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^Your (?:artistic )?eye immediately notices the flaws in what is obviously an illusion\.$"
   name="illusioned"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:unqueue ()</send>
  </trigger>
  <trigger
   group="System_NekotaiMods"
   match="^Your (\w+) starts to throb(?:\, and blood trickles out of your \1)?\.$"
   name="nekotai_kaiga"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("vessel", 1)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your (ceremonially )?enhanced (insight|movement|passion|vivaciousness) repels (\w+)\.$"
   name="affrepel1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local tea_defs = {
  ["insight"] = "white",
  ["movement"] = "green",
  ["passion"] = "oolong",
  ["vivaciousness"] = "black"
}
if defs:has("tea") == tea_defs["%2"] then
  affs:repel("%3")
  if #"%1" == 0 then
    defs:lostdef("tea")
    bals:offbal ("brew", "silent")
  end
end</send>
  </trigger>
  <trigger
   group="System_Highmagic"
   match="^Your (chest|gut|head|left arm|left leg|right arm|right leg) is (?:already )?fully healed\.$"
   name="puer_healed"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local part = string.gsub("%1", " ", "")
if flags:get ("puer") == part then
 wounds:set (part, 0)
 wounds:scan ()
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your (chest|gut|head|left arm|left leg|right arm|right leg) is grappled by ([A-Z][a-z]+)\. You must writhe to escape\.$"
   name="kata_grappled"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local part = string.gsub("%1", " ", "")
if not affs ["grapples"] [part] then
  affs:add_queue ("grappled", part, "%2")
end</send>
  </trigger>
  <trigger
   group="System_NinjakariMods"
   match="^Your (chest|gut|head|left arm|left leg|right arm|right leg) numbs as the entangled .+? cuts off the flow of blood and constricts the nerves\.$"
   name="ninjakari_numb"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
affs:add_simple ("numb_" .. (string.gsub("%1", " ", "")))
end, "ninjakari_numb", true)</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your (face|chest|gut|left arm|right arm) muscles loosen ever so slightly\.$"
   name="curestiffnon"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>local part = string.gsub("%1", " ", "")
if part == "face" then
  part = "head"
end
system:cured_queue ("stiff_" .. part)
if not affs ["ootangk"] [part] then
 affs:add_queue ("grappled", part, "Someone", "ootangk")
end</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your (face|chest|gut|left arm|right arm) muscles loosen up\.$"
   name="curestiff"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>if "%1" == "face" then
  system:cured_queue ("stiff_head")
else
  system:cured_queue ("stiff_" .. (string.gsub("%1", " ", "")))
end</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^Your (left|right) (arm|leg) is crushed under the fierce stomping\!$"
   name="affstagstomp2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("broken_%1%2")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your (left|right) (arm|leg) is greatly healed\, but still damaged\.$"
   name="curemangledlimb"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("mangled_%1%2")
affs:add ("broken_%1%2")</send>
  </trigger>
  <trigger
   group="System_NekotaiMods"
   match="^Your (left|right) (arm|leg) is mangled into a twisted mass of bloody\, broken bone\!$"
   name="nekotai_oriama2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("twisted_%1%2")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   lines_to_match="2"
   match="^Your (left|right) (arm|leg) is sliced to shreds as the thorny vines are ripped away\.\nYou have writhed free of your thorny vines\.$"
   multi_line="y"
   name="curelashedwrithe"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
system:cured ("lashed_%1%2")
affs:add ("bleeding", 200)
end, "curelashed", true)</send>
  </trigger>
  <trigger
   group="System_NekotaiMods"
   match="^Your (left|right) (arm|leg) snaps painfully\.$"
   name="nekotai_oriama1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("broken_%1%2")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your (left|right) (arm|leg) strengthens\.$"
   name="curetwistedlimb"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("twisted_%1%2")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your (left|right) (arm|leg) suddenly stiffens and loses all feeling sensation\, rendering it useless\.$"
   name="symprigormortis"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue({"rigormortis", "broken_%1%2",})</send>
  </trigger>
  <trigger
   group="System_TahtetsoMods"
   match="^Your (left|right) arm breaks with a loud crack\.$"
   name="tahtetso_bomrakini_arm"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("broken_%1arm")</send>
  </trigger>
  <trigger
   group="System_KataMods"
   match="^Your (left|right) arm breaks with a loud crack\.$"
   name="kata_breakarm"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("broken_%1arm")</send>
  </trigger>
  <trigger
   group="System_NinjakariMods"
   match="^Your (left|right) arm breaks with a loud crack\.$"
   name="ninjakari_ninughi_arm1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("broken_%1arm")</send>
  </trigger>
  <trigger
   group="System_KataMods"
   match="^Your (left|right) arm flops uselessly as your elbow emits a loud popping crack\.$"
   name="kata_crackelbow"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("elbow_%1arm")</send>
  </trigger>
  <trigger
   group="System_NinjakariMods"
   match="^Your (left|right) arm flops uselessly as your elbow emits a loud popping crack\.$"
   name="ninjakari_ninughi_arm2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("elbow_%1arm")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your (left|right) arm is off balance\.$"
   name="symparmoffbal"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if system:is_enabled ("armbalance") then
  local side = "%1"
  if
    not affs:has("hemiplegy_" .. side) and
    not affs:has ("clamped_"..side.."arm") and
    not affs:has ("pierced_"..side.."arm")
 then
    flags:add_check ("check_arm", side)
    prompt:queue (function () flags:del_check ("check_arm") end, "symparmoffbal")
  end
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your (left|right) arm must be free\.$"
   name="sympfreearm"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if system:is_enabled ("armbalance") then
  if
    not affs:has("hemiplegy_%1") and
    not affs:has ("clamped_%1arm") and
    not affs:has ("pierced_%1arm")
      then
    flags:add_check ("check_arm", "%1")
    prompt:queue (function () flags:del_check ("check_arm") end, "sympfreearm")
  end
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your (left|right) eye socket itches as a new eyeball suddenly fills the empty cavity\.$"
   name="curelosteye"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
system:cured ("peckedeye_%1")
affs:del ({ "concussion", "damagedhead"})
end, "cured_peckedeye", true)</send>
  </trigger>
  <trigger
   group="System_NinjakariMods"
   match="^Your (left|right) leg buckles as the chain nearly saws it off\.$"
   name="ninjakari_illgathoru_leg"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("tendon_%1leg")
affs:add_queue ("bleeding", 175)</send>
  </trigger>
  <trigger
   group="System_NinjakariMods"
   match="^Your (left|right) leg buckles as your kneecap emits a loud popping crack\.$"
   name="ninjakari_ninughi_leg2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("kneecap_%1leg")</send>
  </trigger>
  <trigger
   group="System_KataMods"
   match="^Your (left|right) leg buckles as your kneecap emits a loud popping crack\.$"
   name="kata_crackkneecap"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("kneecap_%1leg")</send>
  </trigger>
  <trigger
   group="System_TahtetsoMods"
   match="^Your (left|right) leg is hit with a loud crack\, breaking your kneecap and causing your leg to twist unnaturally\.$"
   name="tahtetso_raktiini_leg"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("kneecap_%1leg")</send>
  </trigger>
  <trigger
   group="System_KataMods"
   match="^Your (left|right) leg shatters under the force of the blow\.$"
   name="kata_breakleg"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("broken_%1leg")</send>
  </trigger>
  <trigger
   group="System_TahtetsoMods"
   match="^Your (left|right) leg shatters under the force of the blow\.$"
   name="tahtetso_shatter"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("broken_%1leg")</send>
  </trigger>
  <trigger
   group="System_NinjakariMods"
   match="^Your (left|right) leg shatters under the force of the blow\.$"
   name="ninjakari_ninughi_leg1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("broken_%1leg")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your (left|right) side tingles as feeling returns\.$"
   name="curehemiplegy_side"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("hemiplegy_%1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your (right|left) hand must be fully functional\.$"
   name="sympchecklimbs2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:check_limbs ("arms", "%1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your ability to breathe greatly improves as your collapsed lung fills with air once again\.$"
   name="curecollapsedlungs"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:cured_queue ("collapsedlungs")
affs:add_queue ("puncturedlung")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your aching\, pain\-wracked body is soothed and calmed\.$"
   name="curehealthleech"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("healthleech")</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^Your actions are cloaked in secrecy\.$"
   name="def_shroud1"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("shroud", nil, nil, "fromdef")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your amplified fears start to settle down\.$"
   name="cureomniphobia"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("omniphobia")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^Your aura of weapons rebounding disappears\.$"
   name="lostdef_reboundattk"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:del_queue ("rebound")</send>
  </trigger>
  <trigger
   group="System_Poisons"
   match="^Your belly gurgles and rumbles\.$"
   name="poison_worms"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:poison ("worms")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your bleeding slows as your blood clots\.$"
   name="curebleeding"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>prompt:queue (function ()
affs:add ("bleeding", -40)
system:del_cure ()
system:unqueue_cure ("eat_chervil")
bals:offbal ("herb", "silent")
display.cured ("bleeding")
end, "cured_bleeding_chervil", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your bleeding wounds sting painfully\, causing your limbs to stiffen up\.$"
   name="affshadowbeat4"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone("paralysis")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your blood refuses to clot\.$"
   name="symphemophilia"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if flags:get ("clotting") then
affs:add_queue("hemophilia")
end</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your blood regains its ability to clot\.$"
   name="curehemophilia"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>prompt:queue (function ()
system:cured ("hemophilia")
if flags:get ("clotting") then
  fst:fire ("clotting", "now")
end--if
end, "curehemophilia", true)</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your blood surges as the black tea enters your system\.$"
   name="ondef_blacktea"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>prompt:queue (function ()
flags:del ("brew")
fst:disable ("brew")
bals:onbal ("brew", "silent")
end, "brew", true)
defs:add_queue ("tea", "black")</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^Your body and soul are cloaked\.$"
   name="def_cloak"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("cloak", nil, nil, "fromdef")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your body warms up and you stop shivering\.$"
   name="cureshivering"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue("chills")
affs:del_queue("frozen")
defs:del_queue("fire", "silent")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your bout of bad luck has ended\.$"
   name="curebadluck"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:del_queue("bad_luck")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your bowels calm themselves\.$"
   name="curedysentery"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue("dysentery")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your bowels turn to water and are voided as you double over from a sharp pain in your stomach\.$"
   name="sympdysentery"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:bal ("dysentery")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your breath returns to you\.$"
   name="curephrenicnerve"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("phrenicnerve")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your bronchial tubes open up and your asthma is cured\.$"
   name="cureasthma"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>prompt:queue (function ()
  system:cured ("asthma")
  local aff, cure=flags:bals_try ("herb")
 --if I diaged before I could smoke
  if
 flags:get ("smoking") or
 (bals:get ("herb")==0.5 and not cure)
  then
 fst:fire ("herb", "now")
  end--if
  end, "cured_asthma", true)</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your burnt flesh is soothed\.$"
   name="cureburns1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTrigger("cureburns2", true)
for i=1,4 do
local aff = "burns_"..tostring (i)
if affs:has (aff) then
  system:cured_queue (aff)
  break
end--if
end--for
prompt:queue (function () EnableTrigger("cureburns2", false) end, "cureburns1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Nihilism"
   match="^Your channels are already open\.$"
   name="has_channnels"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("channels")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your chest expands as your entire ribcage heals and cracks into place\.$"
   name="curecrushedchest"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:cured_queue ("crushedchest")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your crucified state makes that impossible\.$"
   name="affnecrocrucified2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("crucified")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your crushed windpipe inhibits your ability to swallow\.$"
   name="sympcrushedpipe1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("windpipe")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Nihilism"
   match="^Your demonic thrall does not stand with you\.$"
   name="unable_demoncloak"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del ("demoncloak")
flags:del ("deffing")
fst:disable ("deffing")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your double vision subsides as the breaks in your skull fuse together\.$"
   name="curefracturedskull"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("fracturedskull")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^Your ears open up\, though you lose your true hearing\.$"
   name="lostdef_truehearingblank"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ("truehearing")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your elbow splinters as [A-Z][a-z]+ smashes your (left|right) arm with (.+?)\.$"
   name="shofangi_boganj_arm"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if affs:has("elbow_%1arm") then
  affs:add_queue ("broken_%1larm")
else
  affs:add_queue("elbow_%1arm")
end
parry:reset ()
wounds:monk_attack ({"Shofangi",}, "%1arm", nil, "%2")
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your empty eyesockets can see nothing but the oblivion of utter darkness\.$"
   name="sympeyes"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
if affs:has ("blindness") then
  affs:add ({ "peckedeye_left", "peckedeye_right" })
end, "sympeyes", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your enhanced gift of lichdom protects you from the affliction\.$"
   name="reject_lichdom"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:reject ("lichdom")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^Your enhanced sense of music fades from your mind as quickly as it came\.$"
   name="lostdef_tempo"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:del_queue ("tempo")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your exhausted mind can stay awake no longer\, and you fall into a deep sleep\.$"
   name="affasleep3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone("asleep")
affs:prone ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^Your eyes are already attuned to the shadows of night\.$"
   name="has_nightsight"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:add_queue ("nightsight")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Ent"
   match="^Your eyes droop and you cannot stop yourself from yawning\.$"
   name="slumber"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>display.warning ("Dreamweaver attack!")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your fear has been cured\.$"
   name="curefear2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:cured_queue ("fear")
fst:disable ("fear")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your fear of heights subsides\.$"
   name="curevertigo"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("vertigo")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your fingers and toes begin to tingle\, and before long the grey fades from your skin and flushes a healthy colour\. You are no longer a statue\!$"
   name="curestatued"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:del_queue ("statue")
if affs:has ("stun") then
 system:cured_queue ("stun")
end
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your flesh blisters as you reach through the ring of fire that surrounds [A-Z][a-z]+\.$"
   name="aff_pyro_flamering"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:burning()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your flesh burns as a sheet of shimmering fire envelops you\.$"
   name="aff_pyro_damage1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:burning()
flags:add_check ("recklessness")</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^Your flesh is charred\, and you receive (first|second|third|fourth) degree burns\.$"
   name="aff_pyro_burnlevel"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("burned", "%1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your flesh is sliced to shreds as all the thorny vines are ripped away\.$"
   name="cureallthorns1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:del_queue({ "lashed_leftarm", "lashed_leftleg", "lashed_rightarm", "lashed_rightleg" })
affs:add_queue ("bleeding", 250)
display.free ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your gashed cheek violently spasms\, causing your entire body to jerk reflexively\.$"
   name="sympgashedcheek"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:bal ("gashedcheek")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your glands cease their oily secretion\.$"
   name="cureslickness"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("slickness")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your gluttonous desires subside\.$"
   name="curegluttony"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("gluttony")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your hallucinations cease to plague you\.$"
   name="curehallucinations"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue("hallucinations")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your head begins throbbing to the beat of the ominous noise\.$"
   name="affmanabarbs1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("manabarbs")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your head feels stronger and healthier\.$"
   name="curedamagedhead"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("damagedhead")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your head is greatly healed\, but still damaged\.$"
   name="cureconcussion1"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("damagedhead")
affs:add_queue ("damagedhead")</send>
  </trigger>
  <trigger
   group="System_Poisons"
   match="^Your head spins as a sudden fit of dizziness overwhelms you\.$"
   name="poison_dizziness"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:poison ("dizziness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your health continues to drain away as your impaled body shudders on the end of [A-Z][a-z]+\'s antlers\.$"
   name="affstaggore2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone ("impaled")s</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your health continues to drain away as your impaled body shudders on the end of the weapon\.$"
   name="sympimpaled1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if not affs:has("impaled") and not affs:has ("pinleg") then
  affs:add_queue ("impaled")
end</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your hearing sharpens as your (left|right) ear regenerates\.$"
   name="cureseveredear"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue("severedear_%1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your heart is filled with divine love\, violence is abhorrent to you\.$"
   name="symppeace"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("peace")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your heart thumps as you gaze at ([A-Z][a-z]+) with love and adoration\.$"
   name="lusted"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:lusted ("%1")
affs:add_queue ("love", true, "silent")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your hypersomnia prevents your insomnia\.$"
   name="symphypersomnia"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("hypersomnia")
defs:del_queue("insomnia")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^Your inner rage subsides\.$"
   name="lostdef_enraged"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:del_queue ("enraged")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your insides twist and turn\, causing your hands to uncontrollably shudder\.$"
   name="affaurawarp_apply"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("aurawarp")
for i=1,5 do
display.warning("Homeostasis")
end
prompt:add_alert ("homeo", "Homeo", 10)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your insides twist and turn\, closing up your throat\.$"
   name="affaurawarp_eat_smoke"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("aurawarp")
affs:add_queue("homeostasis")
for i=1,5 do
display.warning("Homeostasis")
end
prompt:add_alert ("homeo", "Homeo", 10)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your insides twist as the dread plague ravages your internal homeostasis\.$"
   name="affaurawarp_homeostasis"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("aurawarp")
affs:add_queue("homeostasis")
for i=1,5 do
display.warning("Homeostasis")
end
prompt:add_alert ("homeo", "Homeo", 10)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^Your insomnia has cleared up\.$"
   name="lostdef_insomniapoison"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>if flags:get_check ("sting") then
prompt:unqueue ("sting")
flags:del_check ("sting")
end--if
defs:del_queue ("insomnia")
system:del_cure ()</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your jaw clicks into place as the bones there heal\.$"
   name="curebroken_jaw"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("brokenjaw")
  affs:del_queue ("shatteredjaw")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your jaw partially realigns into place as the bones there partially heal\.$"
   name="cureshatteredjaw"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("shatteredjaw")
affs:add_queue ("brokenjaw")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your legs collapse from under you and consciousness leaves you as you pass out from extreme hunger\.$"
   name="sympunconscious1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("unconscious")</send>
  </trigger>
  <trigger
   custom_colour="17"
   enabled="y"
   group="System_Tracking"
   match="^Your legs tremble slightly as a yellow jaundice begins to creep through your now\-pale features\.$"
   name="sympcrotamine3"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="deeppink"
  >
  <send>affs:del_queue ({"crotamine_1", "crotamine_2", "crotamine_4"})
affs:add_queue ("crotamine_3")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your limbs begin to jerk and shake uncontrollably\, and you begin to foam at the mouth\.$"
   name="sympepilepsy"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:bal ("epilepsy")</send>
  </trigger>
  <trigger
   group="System_Poisons"
   match="^Your limbs grow heavy and you groan feebly\.$"
   name="poison_weakness"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:poison ("weakness")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your limbs strengthen and you feel stronger\.$"
   name="cureweakness"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("weakness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your limbs twitch of their own volition under the curse of the jinx\, refusing to obey your commands\.$"
   name="sympjinx"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("jinx")
display.system ("Repeat Action!")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your lower body tingles as feeling returns\.$"
   name="curehemiplegylower"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("hemiplegy_lower")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your lungs are much too constricted to smoke\.$"
   name="sympasthma1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if flags:get ("smoking") then
 affs:add_queue ("asthma")
end--if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^Your magical protection is blown away\.$"
   name="lostdef_shieldpollute"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ("shield")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your magical protection is blown away\.$"
   name="aff_aero_unshield"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ("shield")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^Your mark is already upon this one\.$"
   name="deathmark_already"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.success ("deathmark", "already")
prompt:add_alert ("dm", "DM", 240, -1)</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your mind feels stronger and more alert\.$"
   name="curemana"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("mana")</send>
  </trigger>
  <trigger
   group="System_Def"
   match="^Your mind has been quickened\.$"
   name="def_quickened"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("quickened", nil, nil, "fromdef")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your mind is able to focus once again\.$"
   name="onbal_focus"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>bals:onbal ("focus")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^Your mind is already linked to the strings of fate\.$"
   name="has_deathsense"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:add_queue ("deathsense")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your mind relaxes and you feel as if you could sleep\.$"
   name="affhealaura"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ("insomnia")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your mind suddenly cuts through the loopholes in the discussion\.$"
   name="curedebateloophole"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:del_queue("debate_loophole")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your mind swims as dizziness overtakes you\.$"
   name="affhypochondria1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("hypochondria")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your mind swirls in a fog as you try to remember what you were doing a moment ago\.$"
   name="sympamnesia"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
fst:autofire ()
end , "sympamnesia", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your mood lightens as the oppressive melancholy lifts from your thoughts\.$"
   name="curedepression"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
 affs:del ("depression")
 display.cured ("depression")
 end, "cured_depression", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your movement causes you to sink further into the quicksand\!$"
   name="sympquicksand"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>display.warning("Quicksand! DON'T MOVE!")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your movements become fluid as you drink the green tea\.$"
   name="ondef_greentea"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>prompt:queue (function ()
flags:del ("brew")
fst:disable ("brew")
bals:onbal ("brew", "silent")
end, "brew", true)
defs:add_queue ("tea", "green")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your muscles relax as the rigormortis subsides\.$"
   name="curerigormortis"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("rigormortis")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your muscles spasm and start to lock up\.$"
   name="affrigormortis"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("rigormortis")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your muscles unlock\; you are no longer paralysed\.$"
   name="cureparalysis"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("paralysis")</send>
  </trigger>
  <trigger
   group="System_Poisons"
   match="^Your nerves feel suddenly jangled\.$"
   name="poison_epilepsy"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:poison ("epilepsy")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your nerves suddenly calm down\.$"
   name="cureepilepsy"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue("epilepsy")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your nervous system calms down as the collapsed nerve in your (left|right) (arm) mends\.$"
   name="curenervecollapse"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("collapsednerve_%1%2")</send>
  </trigger>
  <trigger
   group="System_NinjakariMods"
   match="^Your nose is savagely \w+ and breaks\, causing blood to splurt forth\.$"
   name="ninjakari_breaknose"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("brokennose")</send>
  </trigger>
  <trigger
   group="System_KataMods"
   match="^Your nose is savagely hit and breaks\, causing blood to splurt forth\.$"
   name="kata_breaknose"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("brokennose")</send>
  </trigger>
  <trigger
   group="System_TahtetsoMods"
   match="^Your nose is savagely hit and breaks\, causing blood to splurt forth\.$"
   name="tahtetso_bomrakini_head"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("brokennose")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your pipe has gone cold and dark\.$"
   name="pipesunlit"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>pipes:set_unlit ("myrtle")
pipes:set_unlit ("faeleaf")
pipes:set_unlit ("coltsfoot")
pipes:scan ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^Your posture relaxes as you allow your charismatic aura to drain away\, your mind feeling less strained\, though those loyal to you appear slightly disappointed\.$"
   name="lostdef_charismaticaura"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ("charismaticaura")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^Your psionic barrier (?:dissolves|shatters from a massive blast of psionic energy emanating from [A-Z][a-z]+)\.$"
   name="lostdef_psishield"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:del_queue ("psishield")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your sanity partially returns\, but you still suffer from a (slight|moderate|major|massive) case of temporary insanity\.$"
   name="cureinsanity1"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:add_queue ("insawarped", "insanity", -4, "%1")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your scalp grows back but your forehead still has some remaining wounds\.$"
   name="curescalped"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue("scalped")
affs:add_queue("artery", "head")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Highmagic"
   match="^Your shroud dissipates and you return to the realm of perception\.$"
   name="lostdef_shroud2"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:lostdef ("shroud")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your shyness has been cured\. You can now face the world boldly\.$"
   name="cureshyness"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("shyness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your skin and lips crack amid this parching heatwave\.$"
   name="aff_pyro_sunallergy"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("sunallergy")
affs:burning()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Rituals"
   match="^Your skin is already thick\.$"
   name="has_draconis"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:ondef ("draconis")</send>
  </trigger>
  <trigger
   group="System_ShofangiMods"
   match="^Your skin is scraped by the shofa\, raising angry red welts on the skin\.$"
   name="shofangi_shoflai"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
 fst:fire ("salve", "now")
 bals:offbal ("salve")
end, "shoflai", true)</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^Your speed defence is destroyed\.$"
   name="afftarotaeon1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
defs:lostdef ("speed")
flags:del ("no_speed")
fst:disable ("speed")
fst:disable ("ondef_speed")
bals:onbal ("speed", "silent")
if flags:get_check ("aeonfield") then
  affs:add ("insawarped", "timewarped", 4)
end
prompt:add_alert ("nospeed", "NO speed", 3)
end, "tarotaeon1", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^Your spirit stirs and inner rage builds against those who stand against your people\.$"
   name="ondef_enraged"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:add_queue ("enraged")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your state of paralysis prevents you from doing that\.$"
   name="sympparalysis5"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if not affs:has("severedspine") then
  affs:prone("paralysis")
end</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your step becomes more confident as the bones in your (left|right) foot mend\.$"
   name="curecrushedfoot"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("crushedfoot_%1leg")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your stomach becalms itself\.$"
   name="curevomiting"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("vomiting")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your stomach rumbles and you cough up dead worms\.$"
   name="cureworms"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("worms")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your strength returns as your punctured chest mends\.$"
   name="curepuncturedchest"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue("puncturedchest")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your strength surges as your (left|right) (thigh|bicep) mends\.$"
   name="curethighbicep"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>if "%2"=="bicep" then
  system:cured_queue ("sliced_%1arm")
else
  system:cured_queue ("sliced_%1leg")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Offense"
   match="^Your tail is not in position to strike\, yet\.$"
   name="offbal_tail"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>if flags:get ("no_sting") then
defs:ondef ("barbedtail", true, "silent")
bals:offbal ("tail", "silent")
flags:del ("no_sting")
fst:disable ("no_sting")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Offense"
   match="^Your tail is poised high above your head\, ready to strike\.$"
   name="onbal_tail"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>bals:onbal ("tail", "silent")
defs:ondef ("barbedtail", true, "silent")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tarot"
   match="^Your tarot will already be flung with the power of the Warrior\.$"
   name="has_warrior"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:ondef ("warrior")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your terrible addiction to lovely elixirs seems to wane\.$"
   name="cureaddiction"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue("addiction")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your thoughts coalesce into better focus\.$"
   name="curescrambledbrain"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("scrambledbrain")</send>
  </trigger>
  <trigger
   group="System_Cures"
   match="^Your thoughts coalesce into coherence\.$"
   name="curevoid"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>system:cured_queue ("void")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Offense"
   match="^Your thrall already stands beside you\.$"
   name="demon_summonalready"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if GetVariable ("demon_lasthit") == "-1" then
--SetVariable ("demon_power", "0")
SetVariable ("demon_lasthit", "0")
SetVariable ("demon_willhit", "8")
ResetTimer ("demon_four")
end--if
EnableTrigger ("demon_summon", false)
EnableTrigger ("demon_summonalready", false)
display.system ("Demon Already Summoned")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your throat has been locked\, and thus you cannot swallow\.$"
   name="sympthroatlocked"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("throatlock")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="System_Offense"
   match="^Your vision blurs as your target suddenly shifts away from you\, causing you to lose track of your target\.$"
   name="miss4"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>display.miss ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^Your vision darkens as the power of the unholy water within you strikes back at [A-Z][a-z]+\.$"
   name="lostdef_orgpotion"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:del_queue ("orgpotion")
flags:del ({"orgpotion", "ondef_orgpotion"})
fst:disable ("orgpotion")
fst:disable ("ondef_orgpotion")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your vision goes white with pain as [A-Z][a-z]+ slams your (head|chest|gut) into [hH](?:is|er) raised knee with a loud crunch of bone\.$"
   name="shofangi_crunchy"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("grappled", "%1")
wounds:monk_attack (nil, "%1", nil, "crunch")</send>
  </trigger>
  <trigger
   group="System_Poisons"
   match="^Your vision is flooded with light\, and your face suddenly reddens\.$"
   name="poison_sunallergy1"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:poison ("sunallergy")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^Your vision sharpens with light as you gain night sight\.$"
   name="ondef_nightsight"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:add_queue ("nightsight")</send>
  </trigger>
  <trigger
   group="System_Poisons"
   match="^Your will to harm anything leaves you\.$"
   name="poison_peace"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:poison ("peace")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^Your wound status is\:$"
   name="wound_status"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTriggerGroup ("System_WoundStatus", true)
EnableTrigger ("wound_status", false)
prompt:queue (function ()
  EnableTriggerGroup ("System_WoundStatus", false)
  wounds:scan ()
end, "wound_status")</send>
  </trigger>
  <trigger
   group="System_Arena"
   match="^[A-Z][a-z]+ accepts your challenge\, and you walk through the portal after (?:[hH]im|[hH]er)\, ready to do battle\."
   name="arena_spar_accepted"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
flags:add_check ("arena")
display.system ("Arena Mode Enabled")
fst:disable ("arena")
end, "arena_spar_accepted", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   lines_to_match="2"
   match="^[A-Z][a-z]+ appears to play .+?\, but you hear no sound\.\nYou cry out as your deaf ears open up to the sound of a high\-pitched note\.$"
   multi_line="y"
   name="affblankchord"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("blanknote")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ begins to chant in a deep and baleful voice\, and an iron cross rises up from the ground before you\. Vicious spikes slam into your flesh and nail you to the cross\. You scream in pain and agony as blood is splattered in all directions\.$"
   name="affnecrocrucify"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("crucified") </send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ brands you a heretic for your crimes against the Light\.$"
   name="affheretic"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("heretic")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ carefully rushes directly at you and trusses you up in the most clever manner possible\.$"
   name="affrushtruss"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone()
affs:add_queue("trussed")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ chants harshly at you\, while cracking [hH](?:is|er) knuckles loudly\.$"
   name="affnecroshrivel1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTrigger("affnecroshrivel2", true)
prompt:queue (function () EnableTrigger("affnecroshrivel2", false) end, "necroshrivel1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ chants harshly while laying ([Hh]is|[Hh]er) hand upon you\. Searing pain flashes through \1 touch and where \1 palm touched\, a deathly mark has been burned into your skin\.$"
   name="necrodeathmark"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("deathmark", 1)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ clenches [hH](?:is|er) muscles until they bulge and pop\, roaring menacingly at you\. Clearly\, (?:[hH]|[sS]h)e is going to tear you limb from limb\!$"
   name="affathfear"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("fear")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ cracks (.+?) precisely into your (left|right) (arm|leg)\, causing spasms to numb your stiffening (?:side|muscles)\.$"
   name="tahtetso_bomol"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if "%3" == "arm" then
  affs:add_queue("hemiplegy_%2")
else
  affs:add_queue("hemiplegy_legs")
end
wounds:monk_attack (nil, "%2%3")
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^[A-Z][a-z]+ creates a sparkling cloud and then molds it until it appears exactly like you\.$"
   name="ondef_reflectionother"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:add_queue ("reflection")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ curses you with the visage of a rotting corpse\.$"
   name="affnecrodisfigure"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("disloyalty")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ cuts .+? with an Angkhai arc into your (chest|gut|head|left arm|left leg|right arm|right leg)\.$"
   name="nekotai_angkhai"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local part = string.gsub("%1", " ", "")
wounds:monk_attack ({"Nekotai",}, part)
system:poisons_on ()
affs:add_queue("relapsing")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ dips a dart into a vial\, and then shoots it through a blowgun at you\.$"
   name="affblowgun2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^[A-Z][a-z]+ dissolves the shimmering field around you\.$"
   name="lostdef_protection"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>defs:del_queue ("protection")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ draws a glowing glyph in the air and flings it at you\. Your mind suddenly grows befuddled and clouded\.$"
   name="affjinx"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("jinx")
display.warning ("You've been Jinxed!")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ expertly tosses you\, sending you careening through the air away from (?:[hH]im|[hH]er)\.$"
   name="kata_toss"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("grappled")
affs:prone()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ flings [hH](?:is|er) leg out in a vicious jumpkick that slams ringingly into your head\, sending you toppling to the ground\.$"
   name="affacroprone1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone ({"prone", "stun"})
flags:damaged()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ flings a tarot card at you which turns an ominous\, sickly red before striking you in the head\.$"
   name="afftarotmoon"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--confusion (focus mind, penny), stupidity (penny, focus mind), hypersomnia (sanguine)
affs:reject_try ()
prompt:queue (function ()
 affs:add ("moon", "herb", "eat pennyroyal", 10, true)
 affs:masked (1)
end, "affs_add_tarotmoon", true)
</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ flings a tarot card at you\, and a jester appears with a slack jawed expression\. With a mad jingling of his bells\, the fool (?:plants an enormous kiss on your lips\.|pinches your nose and shouts\, \&quot;WHOOP\! WHOOP\! WHOOP\!\&quot;\.?|squirts water at you from a large flower\.)$"
   name="afftarotfool"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:reject_try ()
prompt:queue (function ()
 defs:lostdef ("speed")
 affs:masked (1)
end, "affs_add_fool", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ flings a tarot card at you\, which expands into an image of Juliana\. A set of scales appears above your head and one side of the scale quickly descends\. You have a bad feeling about this\.$"
   name="afftarotjustice"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("justice")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ gathers a handful of runes in [hH](?:is|er) hands and casts them furiously upon the ground\. (?:H|Sh)e points a crooked finger at you and declares in a rasping voice a malign prophesy of sickness upon you as a sudden wave of intense nausea washes over you\.$"
   name="aff_hex_prophesy1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ gazes deep into your eyes\, revealing oracular visions of the darkest possible of futures\.$"
   name="aff_aeonics_oracle1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("oracle")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ gestures sharply\, then pushes you into a shimmering rift\. You find yourself frozen and can only look helplessly about you\.$"
   name="aff_aeonics_displaced1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
affs:add ("displacement")
fst:enable ("displacement")
end, "displaced1", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ gouges .+? (?:with|in) the Angknek style into your gut\, spilling your steaming entrails\.$"
   name="nekotai_angknek_gut"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack ({"Nekotai",}, "gut")
system:poisons_on ()
affs:add_queue("slicedopengut")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ grabs you by the back of the neck and pulls you forward into an embrace\. H(?:is|er) cold lips press against the neck\, and you are momentarily frozen in pain as your lifeforce is sucked from you\.$"
   name="affnightkiss"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:add_check ("recklessness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ hurls a tarot card with the image of the Hanged Man on it at you\. As it reaches you\, a huge mass of rope bursts out of it\, entrapping and hindering you\.$"
   name="afftarothangedman"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone("roped")</send>
  </trigger>
  <trigger
   group="System_NinjakariMods"
   match="^[A-Z][a-z]+ jerks back .+? as it strikes\, lacerating the flesh\.$"
   name="ninjakari_blood"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("bleeding", 100)
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ languidly gestures at you and the world tilts as time itself warps\.$"
   name="aff_aeonics_timewarp"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("insawarped", "timewarped", 7)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ lashes out at your (left|right) (arm|leg) with .+?\, mangling it with a fleshy thud\.$"
   name="ninjakari_ashlamkh_limb_mangle"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack (nil, "%1%2", nil, "ashlamkh")
affs:add_queue ("mangled_%1%2")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ lashes out at your (left|right) (arm|leg) with .+?\, snapping the bone with a crunch\.$"
   name="ninjakari_ashlamkh_limb_break"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack (nil, "%1%2", nil, "ashlamkh")
affs:add_queue ("broken_%1%2")
if "%2" == "leg" then
  affs:prone()
end
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ lashes out at your chest with .+?\, crushing it with a heavy thud and making breathing difficult\.$"
   name="ninjakari_ashlamkh_chest"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack (nil, "chest", nil, "ashlamkh")
affs:add_queue("crushedchest")
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ lashes out at your gut with .+?\, rupturing it and leaving a gaping wound\.$"
   name="ninjakari_ashlamkh_gut"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack (nil, "gut", nil, "ashlamkh")
affs:add_queue ("rupturedstomach")
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ lashes out at your head with .+?\, causing (?:it|your jaw) to shatter into pieces\.$"
   name="ninjakari_ashlamkh_head"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack (nil, "head", nil, "ashlamkh")
affs:add_queue("shatteredjaw")
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   keep_evaluating="y"
   match="^[A-Z][a-z]+ leaps at you and slams [hH](?:is|er) head into your face\.$"
   name="shofangi_headbutt"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add ("blackout")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   lines_to_match="2"
   keep_evaluating="y"
   match="^[A-Z][a-z]+ leaps at you and slams [hH](?:is|er) head into your face\.\nYou suddenly stumble\.$"
   multi_line="y"
   name="shofangi_headbutt_prone"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   lines_to_match="2"
   match="^[A-Z][a-z]+ leaps in from the \w+ straight at \w+\!\n[A-Z][a-z]+ pounces on you from an unseen hiding place\.$"
   multi_line="y"
   name="affambush"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone()
defs:del_queue ("shield")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ lightly strokes your flesh\, and the cold of the grave seeps into your bones\.$"
   name="affnecrocold"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("chills")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ locks (?:[hH]is|[hH]er) arms about you and carries you up into the trees\.$"
   name="seized_trees"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
flags:add_check ("intrees")
if system:is_enabled ("notrees") then
  affs:add ("intrees")
end--if
end, "seized_trees", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ lowers ([hH]is|[hH]er) head and charges you\, impaling you on \1 antlers\.$"
   name="affstaggore1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone ("impaled")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ moves [hH](?:is|er) feet in a rhythmic dance and raises a palm before [hH](?:is|er) eyes\, blocking you from sight\. As (?:[hH]e|[sS]he) slowly turns widdershins\, a dark silver glow pours down from above\, surrounding you briefly\.$"
   name="affmoondarkmoon"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("darkmoon")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ mutters and traces complex glowing symbols before (?:[hH]im|[hH]er)\. The symbols lash out at you\, and your body painfully desiccates as vitality is drained from you\.$"
   name="affbinah"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("binah_sphere")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ plays .+? and your magical shield dissipates into nothingness\.$"
   name="affblanknote1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ("shield")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ plays .+?\, and you cry out as your deaf ears open up to the sound of a high\-pitched note\.$"
   name="affblanknote2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("blanknote")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ points .+? at you and a beam of flickering light shoots forth\, covering you with colourful flame\.$"
   name="affnatureillum"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("illuminated")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ points .+? at you and vines shoot forth\, entangling you with a thorny embrace\.$"
   name="affnaturevines"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone("entangled")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ points .+? at you\, and sparks fly out of it\.$"
   name="affablaze1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTrigger("affablaze2", true)
prompt:queue (function () EnableTrigger("affablaze2", false) end, "affablaze1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ points a amethyst wand at you which releases a stream of corruscating energies which rips into your body\.$"
   name="harmonics_wandattack"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:damaged ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ points at you and utters a string of terrible sounds\, which leech away your mental reserves\.$"
   name="necroleech"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>display.warning("Watch mana!")
flags:add_check ("recklessness")
prompt:queue (function () 
 system ["hme_priority"] = "mana" 
 display.option ("priority", "mana")
 if affs:has ("blackout") then
  flags:add_check ("reset_hme")
 end --if
end, "leech", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ pops something into ([hH]is|[hH]er) mouth\, and rolls it around in \1 cheek\. (?:He|She) cups a fist against \1 mouth and spits a sickly green beetle at you\, which burrows into your flesh\.$"
   name="affdruidscarab1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>display.warning ("Scarab!")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ powerfully bullkicks your (head|chest|gut)\, impacting with a sickening crunch\."
   name="shofangi_bullkick"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack (nil, "%1")
for i=1, 5 do
display.warning("Moved!")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ pronounces that you are under an ill omen\, and a sense of imminent foreboding descends upon you\.$"
   name="affnecroomen"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("omen")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ punctures .+? into your chest (?:with|in) the Angknek style\, and a sharp pain streaks across your lungs\.$"
   name="nekotai_angknek_chest"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack ({"Nekotai",}, "chest")
system:poisons_on ()
affs:add_queue("puncturedchest")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ raises [hH](?:is|er) arms and dances around you\, spinning faster and faster\. With each pass around you\, (?:[sS]he|[hH]e) shimmers with a dark beauty while your thoughts become cloudier and cloudier\.$"
   name="affnightdrain"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>display.warning("Watch mana!")
flags:add_check ("recklessness")
prompt:queue (function () 
 system ["hme_priority"] = "mana" 
 display.option ("priority", "mana")
 if affs:has ("blackout") then
  flags:add_check ("reset_hme")
 end --if
end, "lash", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ raises [hH](?:is|er) arms to the sky\, as an incandescent glow surrounds (?:[hH]im|[hH]er)\.$"
   name="affastroray1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTrigger("affastroray2", true)
prompt:queue (function () EnableTrigger("affastroray2", false) end, "affastroray1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ raises [hH](?:is|er) hands and a hideous monstrosity rises up from the ground and looms over you\. It stares at you with bulging eyes and dozens of scabrous claws\. This nightmare then opens its massive maw\, which drips with thick mucus and reveals rows of dagger\-like teeth\, and a primal fear surges up the length of your spine\.$"
   name="affillfear"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("fear")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ raises [hH](?:is|er) staff\,? and a blast of wind whips around you\, stripping your levitation defen[cs]e and forcing you to the ground\.$"
   name="aff_aero_nolev"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue("levitate")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   lines_to_match="2"
   match="^[A-Z][a-z]+ raises [hH](?:is|er) staff\,? and a blast of wind whips around you\.\nThe wind lifts you up into (?:the )?the air and flings you into the sky\.$"
   multi_line="y"
   name="aff_aero_flyer"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:add_queue("flying")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ raises a hand towards you and blasts you with cold\, frigid air\.$"
   name="aqpreserve"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("chills")
EnableTrigger ("aqpreservedead", true)
prompt:queue (function ()EnableTrigger ("aqpreservedead", false)end, "aqpreserve")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^[A-Z][a-z]+ razes your aura of rebounding with .+?\.$"
   name="lostdef_reboundraze"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ("rebound")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^[A-Z][a-z]+ razes your speed defence with .+?\.$"
   name="lostdef_speedraze"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ("speed")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Ent"
   match="^[A-Z][a-z]+ recharges .+? from an energy cube\.$"
   name="enemy_recharging"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ regurgitates a chunk of rotting flesh and spits it in your face\, and you cannot help but gag as the warm\, stinking glob slides down your skin\.$"
   name="affcrowspit1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:masked (1)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   lines_to_match="2"
   match="^[A-Z][a-z]+ retches suddenly before belching loudly\, sending a fresh stench of rotting flesh to waft through the air\.\nYou cannot help but gag as you inhale the rotting stench\, the aroma wrecking your form and causing a sharp inner pain\.$"
   multi_line="y"
   name="affcrowstench"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("bleeding", 300)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ rips .+? through your (left|right) leg tendon in an Angkhai arc\, leaving you crippled\.$"
   name="nekotai_angkhai_leg"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack ({"Nekotai"}, "%1leg", 0)
system:poisons_on ()
affs:add_queue({ "tendon_%1leg", "relapsing" })
affs:prone()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ scoops [hH](?:is|er) hand through the air as though (?:[hH]e|[sS]he) just caught something\. (?:He|She) then appears to fling something at you but you see nothing\. Curiously\, your skin begins to itch\.$"
   name="affdruiddarkseed1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("darkseed")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ sends a tendril of shadows into your face\. You try to cry out as your vision is blotted and spears of pain stab into your eye sockets\.$"
   name="affnightblind"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ("sixthsense")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ sends a tendril of shadows into your face\. You try to cry out as your vision is blotted and spears of pain stab into your eye sockets\.$"
   name="affphaneyes"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ("sixthsense")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ shreds .+? across your gut in a vicious Angkai arc\, painfully traumatizing your liver\.$"
   name="nekotai_angkai_gut"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack ({"Nekotai",}, "gut")
system:poisons_on ()
affs:add_queue("relapsing")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ sinks [Hh](?:is|er) fangs into your neck\, and you feel yourself drained of blood and energy\.$"
   name="affbloodfangs"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:damaged ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ slams [hH](?:is|er) forehead into your skull\, the shock of which stuns you and makes stars dance before your eyes\.$"
   name="affathheadslam1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTrigger("affathheadslam2", true)
prompt:queue (function () EnableTrigger("affathheadslam2", false) end, "headslam")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ slams [hH](?:is|er) hand into the air in front of you\, and you suddenly feel lightheaded and weak\.$"
   name="affdreampuncture"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("lightheaded")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ slams you hard to the ground\, and you are crushed under [hH](?:is|er) weight\.$"
   name="affathprone1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ slashes .+? into your head (?:with|in) the Angknek style\, adorning your cheek with a gash of crimson\.$"
   name="nekotai_angknek_head"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack ({"Nekotai",}, "head")
system:poisons_on ()
affs:add_queue ("gashedcheek")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ slices (.+?) cleanly through the air in front of you\. You blink several times as it appears that (?:[sS]h|[hH])e missed you\, but then pain blossoms in a line across your neck as blood gushes out of a long\, razor\-thin cut\.$"
   name="shofangi_butojo2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack ({"Shofangi"}, "head")
affs:add_queue("slitthroat")
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ slices .+? (?:with|in) the Angknek style through your (left|right) (arm|leg)\, the pain making you slow and weak\.$"
   name="nekotai_angknek_limb"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local part = "%1%2"
wounds:monk_attack ({"Nekotai",}, part)
system:poisons_on ()
affs:add_queue("sliced_"..part)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ slices .+? through your chest (?:with|in) the Angkai style\, and you suddenly have trouble breathing\.$"
   name="nekotai_angkai_chest"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack ({"Nekotai",}, "chest")
system:poisons_on ()
affs:add_queue("phrenicnerve")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ slices across your head with (.+?)\, spilling blood into your eyes\.$"
   name="shofangi_eyes"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ("sixthsense")
wounds:monk_attack ({"Shofangi"}, "head", 0, "%1")
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ slices across your head with (.+?)\, spilling stinging blood into your eyes\.$"
   name="shofangi_whibuta"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack ({"Shofangi",}, "head")
defs:del_queue ("sixthsense")
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ slices cleanly through your mouth with (.+?)\, shredding your tongue\.$"
   name="shofangi_butojo1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack ({"Shofangi",}, "head")
affs:add_queue("mangledtongue")
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ slices through your (chest|gut|head|left arm|left leg|right arm|right leg) in a graceful arc with (.+?)\.$"
   name="shofangi_arc"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local part = string.gsub("%1", " ", "")
wounds:monk_attack ({"Shofangi",}, part)
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ smashes your (left|right) leg with (.+?)\, splintering your kneecap\.$"
   name="shofangi_kneecap"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if affs:has("kneecap_%1leg") then
  affs:add_queue ("broken_%1leg")
else
  affs:add_queue("kneecap_%1leg")
end
stance:reset ()
wounds:monk_attack ({"Shofangi",}, "%1leg", nil, "%2")
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ smashes your head with (.+?)\, shattering your jaw\.$"
   name="shofangi_broken_jaw"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("brokenjaw")
wounds:monk_attack ({"Shofangi",}, "head")
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ snaps .+? at your (left|right) (arm|leg)\, which then dangles uselessly at your side\.$"
   name="ninjakari_ninombhi_limb"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack (nil, "%1%2", nil, "ninombhi")
affs:add_queue ("lacerated", "%1%2")
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ snaps .+? at your chest\, snapping some ribs\.$"
   name="ninjakari_ninombhi_chest"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack (nil, "chest", nil, "ninombhi")
affs:add_queue("snappedrib")
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ snaps .+? at your gut\, making you double over and spew bloody vomit\.$"
   name="ninjakari_ninombhi_gut"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack (nil, "gut", nil, "ninombhi")
affs:add_queue("vomiting")
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ snaps .+? at your throat\, crushing your windpipe\.$"
   name="ninjakari_ninombhi_head"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack (nil, "head", nil, "ninombhi")
affs:add_queue ("windpipe")
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ spins [hH](?:is|er) shofa in each hand\, crisscrossing them back and forth in elaborate patterns just before slashing them into your (chest|gut|head|left arm|left leg|right arm|right leg)\.$"
   name="shofangi_shotah"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local part = string.gsub("%1", " ", "")
wounds:monk_attack ({"Shofangi",}, part, nil, "shotah")
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Ent"
   match="^[A-Z][a-z]+ spreads ([Hh]er|[Hh]is) black wings and flaps madly, creating a foul windy squall that whips around \1\.$"
   name="squall"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTrigger ("squalled_away", true)
prompt:queue (function () EnableTrigger ("squalled_away", false) end, "squall")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ spreads [hH](?:is|er) hands wide and weaves a vibrant spray of prismatic colours that dance and swirl through the air in a riotous pandemonium of hues\.\nWild\, abstract shapes of (.+?) splatter across your vision\, sending you reeling\.$"
   name="affprismatic2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("glamour", "%1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ springs in from the \w+\, landing in a silent arc\.$"
   name="nekotai_spring"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack ("Nekotai")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ stands an Aeon tarot on [hH](?:is|er) palm and blows it at you\.$"
   name="afftarotaeon"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTrigger("afftarotaeon1", true)
EnableTrigger("afftarotaeon2", true)
prompt:queue (function ()
EnableTrigger("afftarotaeon1", false)
EnableTrigger("afftarotaeon2", false)
end, "tarotaeon")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ steps forward with one foot and simultaneously slams .+? into your (left|right) arm\. You gasp in agony as your fingers loosen their grip on (.+?)\.$"
   name="tahtetso_raktisho_arm"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack (nil, "%1arm")
system:poisons_on ()
if defs:has ("grip") then
  defs:del_queue ("grip")
else
  affs:add_queue ("disarmed")
end--if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ steps forward with one foot and simultaneously slams .+? into your (left|right) leg\. Your vision spins\, capturing all that is above you in a fleeting glimpse before it is consumed by the ground\.$"
   name="tahtetso_raktisho_leg"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack(nil, "%1leg")
system:poisons_on ()
affs:prone()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ steps forward with one foot and simultaneously slams .+? into your chest\. You are dimly aware of your ribs splintering in dozens of places as you fall backwards to the ground\.$"
   name="tahtetso_raktisho_chest"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack(nil, "chest")
system:poisons_on ()
affs:prone ()
affs:add_queue ("brokenchest")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ steps forward with one foot and simultaneously slams .+? into your chest\. You stumble backwards\, trying to stay standing while your ribs feel as though they\'ve splintered into a hundred pieces\.$"
   name="tahtetso_raktisho_chest1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack (nil, "chest")
system:poisons_on ()
affs:add_queue("brokenchest")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ steps forward with one foot and simultaneously slams .+? into your gut\. You stumble backwards\, your head ringing painfully\.$"
   name="tahtetso_raktisho_gut"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack(nil, "head")
system:poisons_on ()
affs:prone ("stun")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ steps forward with one foot and simultaneously slams .+? into your head\, sending a thick fog over your consciousness\.$"
   name="tahtetso_raktisho_head"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack(nil, "head")
system:poisons_on ()
affs:add_queue("scrambledbrain")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ stomps at you and snorts loudly in your face\, startling you with [hH](?:is|er) rage\.$"
   name="shofangi_bullsnort"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add ("disrupted")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   match="^[A-Z][a-z]+ suddenly jumps up into the air from far below\, grabbing you firmly around the torso and flinging you towards the earth as it rushes up to meet you\.$"
   name="lostdef_flyinghighjump"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:del_queue ("flying")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ suddenly leaps forward\, flipping into the air and slamming [hH](?:is|er) feet against you\.$"
   name="affacroprone2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone()
EnableTrigger("affacro_flipleg", true)
prompt:queue (function () EnableTrigger("affacro_flipleg", false) end, "affacroprone2")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ suddenly releases (?:[hH]is|[hH]er) vice\-like grip on you\.$"
   name="curehoisted"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:cured_queue ("hoisted")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ sweeps (.+?) into you\, sending painful vibrations up your gut\.$"
   name="tahtetso_gotisho"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack ("gut")
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ sweeps (.+?) into your (head|chest|gut|left arm|left leg|right arm|right leg) with a loud crack\, causing the staff to vibrate\."
   name="tahtetso_tahtosho"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local part = string.gsub("%2", " ", "")
wounds:monk_attack (nil, part)
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ sweeps .+? in a low\, wide circle\, attempting to trip [hH](?:is|er) foes\.$"
   name="tahtetso_tidesweep"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack ({"Tahtetso",})</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ swiftly stomps on your (chest|gut|head)\, causing you to wince\.$"
   name="shofangi_stomp"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack ({"Shofangi"}, "%1", nil, stomp)
if affs:has("prone") then
  if "%1" == "chest" then
    affs:add_queue("snappedrib")
  elseif "%1" == "head" then
    affs:add_queue("brokenjaw")
  end
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ swiftly stomps on your (left|right) (arm|leg)\, causing you to wince\.$"
   name="shofangi_stomp_limb"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local part = "%1%2"
wounds:monk_attack ({"Shofangi",}, part, nil, "stomp")
prompt:queue (function ()
if string.find (prompt ["status"], p) then
  affs:add ("broken_"..part)
else if "%2" == "leg" then
 affs:add ("crushedfoot_%1leg")
end
end, "stomp_limb", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ swings .+? at you\, but you duck out of its way\.$"
   name="shofangi_quacker"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:del_check ("recklessness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ swings [hH](?:is|er) leg high into the air at your head(\, sending you reeling)?\.$"
   name="tahtetso_starkick"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack (nil, "head")
if #"%1" &gt; 0 then
  affs:prone ({"prone", "confusion"})
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ throws a Lovers tarot at you and as it strikes true\, you fall hopelessly in love with (?:[hH]er|[hH]im)\.$"
   name="afftarotlovers"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("lovers")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ thrusts [hH](?:is|er) palm towards you and a burst of silver light shoots from it and hits you\, burning you painfully\.$"
   name="affmoonburst"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:add_check ("recklessness")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ thrusts [hH](?:is|er) palm towards you\, and you feel the air sizzle around you\.$"
   name="aff_aeonics_timeechoes1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("time_echoes")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ thrusts a clawed fist towards you\, ripping at the air before your face\.$"
   name="monk_raze"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack ({"Shofangi"})</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ tosses a scintillating stone into the air\, which explodes in a glittering cloud of green and pink motes\.$"
   name="harmonics_mendingstone"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTrigger ("harmonics_mendingstonecure", true)
prompt:queue(function () EnableTrigger("harmonics_mendingstonecure", false) end, "harmonics_mendingstone")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ traces blasphemous patterns in the air with [hH](?:is|er) finger\, weaving a deadly glamour that constricts tightly around you\, unraveling your defenses\.\n\d+h\,"
   name="affdeadlypattern"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>affs:reject_try ()
display.warning("Check your defenses!")
affs:add_queue ("add_custom", "deadly pattern", "herb", "eat merbloom")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ tumbles into a backflip to the \w+\, kicking you in the back of the knee\, which gives out and trips you to the ground in the process\.$"
   name="affacroprone3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ twirls [hH](?:is|er) staff in front of you\, which spews forth vile black oil that covers you in a sticky morass of filth\.$"
   name="affgeogunk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("gunk")</send>
  </trigger>
  <trigger
   group="System_TahtetsoMods"
   match="^[A-Z][a-z]+ twists .+? painfully as it strikes\.$"
   name="tahtetso_twister"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("bleeding", 100)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ twists [hH](?:is|er) twin shofa painfully deeper into you\, ripping them apart with an elegant twirl\.$"
   name="shofangi_twirl"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt:queue (function ()
 affs:add ("grappled")
end, "ungrappled_%1", true)
wounds:monk_attack (nil, "leftleg")
wounds:monk_attack (nil, "rightleg")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ viciously twists (.+?) out of your (chest|gut|head|left arm|left leg|right arm|right leg)\, shredding the flesh into bloody strips\.$"
   name="shofangi_shred"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local part = string.gsub("%2", " ", "")
affs:add_queue ("grappled", part)
wounds:monk_attack ({"Shofangi",}, part)
affs:add_queue ("bleeding", 100)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ waves [hH](?:is|er) hands at you\, and momentarily you see nothing but a throbbing red glow\.$"
   name="affillwounds"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:add_check ("illusory_wounds")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   lines_to_match="2"
   match="^[A-Z][a-z]+ weaves [hH](?:is|er) hands and fountains of dazzling light flare across your vision\, erupting in novas of colour that burn into your eyes\.\n(A dazzling orange afterimage burns into your sight\.|Vision returns\, though you no longer see the world through the sixth sense\.)$"
   multi_line="y"
   name="affilldazzle"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if string.find("%1", "afterimage") then
  affs:add_queue ("afterimage")
end
-- TODO: auto-enable sixthsense?</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ weaves [hH](?:is|er) hands towards you and light erupts into fascinating patterns that overwhelm your senses\.$"
   name="afftransfixed"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if not affs:has("blindness") and not defs:has("sixthsense") then
affs:add_queue("transfixed")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ weaves a beautiful swirl of rainbow\-coloured lights\, casting them into alluring patterns of barely restrained imagery\. With a graceful gesture\, (?:[hH]e|[sS]he) conducts the rainbow patterns to spin recklessly around you\.$"
   name="affrainbows"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("rainbow_patterns")
EnableTriggerGroup("System_Rainbows", true)
fst:enable ("rainbow_patterns")
-- TODO: auto-enable sixthsense?</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ weaves a fierce phantasm and sets it upon you\, where it begins to hungrily rake your skin with its claws\.$"
   name="affphanclaws2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("bleeding", 400)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ weaves a glamour of radiant prismatic colours\, dazzling you with a burst of (.+?)\.$"
   name="affprismatic1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("glamour", "%1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ whips (.+?) into a fury\, bucking and racing dangerously in a circle\, trampling the ground in a frenzy\.$"
   name="afftrample1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>trampler = string.lower("%1")
EnableTrigger("afftrample2", true)
prompt:queue (function ()
EnableTrigger("afftrample2", false)
trampler = nil
end, "afftrample1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ whips you with (.+?)\, lashing the skin from your (chest|gut|head|left arm|left leg|right arm|right leg)\.$"
   name="ninjakari_whoopin"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local part = string.gsub("%2", " ", "")
wounds:monk_attack ({"Ninjakari",}, part, nil, "%1")
system:poisons_on ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ whispers your name under [hH](?:is|er) breath as (?:[hH]e|[sS]he) chants\, and you suddenly feel drained and muddled\.$"
   name="affamissio"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>display.warning("Watch mana!")
flags:add_check ("recklessness")
prompt:queue (function ()
 system ["hme_priority"] = "mana"
 display.option ("priority", "mana")
 if affs:has ("blackout") then
  flags:add_check ("reset_hme")
 end --if
end, "affamissio", true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ wiggles [hH](?:is|er) fingers before you\, and you sense a shadow passing overhead\.$"
   name="affphantoms"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue("phantoms")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ wildly twists and turns\, kicking [hH](?:is|er) legs out behind [hH](?:im|er)\. One thunderous kick slams into your (left|right) (arm|leg)\, which flails about limply as the bones are crushed to powder\.$"
   name="shofangi_buck_limb"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack ({"Shofangi",}, "%1%2")
affs:add_queue ("mangled_%1%2")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ wildly twists and turns\, kicking [hH](?:is|er) legs out behind [hH](?:im|er)\. One thunderous kick slams into your chest\, which caves in with a sickening crunch\.$"
   name="shofangi_buck_chest"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack (nil, "chest")
affs:add_queue("crushedchest")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ wildly twists and turns\, kicking [hH](?:is|er) legs out behind [hH](?:im|er)\. One thunderous kick slams into your gut\, and you double over and spit out blood\.$"
   name="shofangi_buck_gut"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>wounds:monk_attack (nil, "gut")
affs:add_queue("rupturedstomach")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+ wildly twists and turns\, kicking [hH](?:is|er) legs out behind [hH](?:im|er)\. One thunderous kick slams into your head\, and the world momentarily fades to black\.$"
   name="shofangi_buck_head"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add ("blackout")
wounds:monk_attack ({"Shofangi",}, "head")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+(?:\'s phantom sightstealer projects thousands of voices into your mind| raises an arm\, pointing in your direction and suddenly thousands of voices bombard you)\, urging you to watch your back\, to kill\, while startling you with unexpected screeches\.$"
   name="affphanwhisper"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add ("disrupted")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+\'s eyes glow red as five jagged rifts open up in the air around [hH](?:im|er)\, each shooting forth a blast of seething fire at you\. Your flesh chars as you are knocked senseless in the blinding explosion\.$"
   name="aff_pyro_blackout"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add ("blackout")
affs:burning()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^[A-Z][a-z]+\'s feet transform into golden hooves\, and s?he raises one up high and stomps down upon you\, knocking the wind out of your lungs\.$"
   name="affstagstomp1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone("disrupted")
affs:prone ()
EnableTrigger("affstagstomp2", true)
prompt:queue (function () EnableTrigger("affstagstomp2", false) end, "stagstomp1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^\&quot;The voices\! The voices\! Get them out of my head\!\!\&quot; you moan\, holding your head in pain\.$"
   name="affstupidity8"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add_queue ("stupidity")</send>
  </trigger>
  <trigger
   match="^\(.+?\)\: \w+ says\, \&quot;Targeting (\d+)\.\&quot;$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute ("x ".."%1")
if not system:is_auto ("bashing") then
Execute ("sys auto bashing")
end</send>
  </trigger>
  <trigger
   group="System_Aetherhunt"
   match="^\(Ship\)\: (?:\w+) say(?:s)?\, \&quot;Target (\w+)\.\&quot;$"
   name="gunner_target"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:del ("retarget")
Send ("turret target creature %1")
EnableTrigger ("gunner_onbal", true)
EnableTrigger ("gunner_down", true)
gunner_target = "%1"</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Bashing"
   match="^\(Ship\)\: .+? says\, \&quot;I have been infested by an aetheretic slivven\!\&quot;$"
   name="slivvens_infest"
   regexp="y"
   sequence="100"
   sound="C:\WINDOWS\Media\ding.wav"
  >
  </trigger>
  <trigger
   match="^\(Ship\)\: \w+ says\, \&quot;Siphon 2\.\&quot;$"
   regexp="y"
   sequence="100"
  >
  <send>siphon vortex</send>
  </trigger>
  <trigger
   match="^\(Ship\)\: \w+ says\, \&quot;Siphon\.\&quot;$"
   regexp="y"
   sequence="100"
  >
  <send>siphon vortex</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^\* (Head|Chest|Gut|Left arm|Left leg|Right arm|Right leg) has (no|negligible|trifling|light|medium|heavy|critical) wounds\.$"
   name="assessing_wounds"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>offense:assess ("%1", "%2")</send>
  </trigger>
  <trigger
   group="System_Arena"
   lines_to_match="3"
   match="^\*{58}\nYou have been defeated and are thrown out of the Arena\..*?\n\*{58}$"
   multi_line="y"
   name="arena_defeat"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>flags:add_check ("reset_defs")</send>
  </trigger>
  <trigger
   match="^\d+\s+(?:\w+|B-S)+\s+(.*)$"
   regexp="y"
   sequence="100"
  >
  <send>tell jax "%1"</send>
  </trigger>
  <trigger
   group="System_Tracking"
   lines_to_match="4"
   keep_evaluating="y"
   match="^\| .+? \-+ \#(\d+) \|\n\| Essence\:\s+(\d+)\s+\s+Power\:\s+\d+p \(\s*(\d+)\%\)\s+Karma\:\s+(\d+)\%\s+Esteem\:\s+(\d+)\%\s+\|\n\| Health \:\s+(?P&lt;ch&gt;\d+)\/(?P&lt;mh&gt;\d+)\s+Mana \:\s+(?P&lt;cmana&gt;\d+)\/(?P&lt;mmana&gt;\d+)\s+Ego  \:\s+(?P&lt;cego&gt;\d+)\/(?P&lt;mego&gt;\d+)\s+\w+\s+\|\n\|\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\|$"
   multi_line="y"
   name="qsc_demi"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt ["vitals"] ["c_health"] = %&lt;ch&gt;
prompt ["vitals"] ["max_health"] = %&lt;mh&gt;
prompt ["vitals"] ["c_mana"] = %&lt;cmana&gt;
prompt ["vitals"] ["max_mana"] = %&lt;mmana&gt;
prompt ["vitals"] ["c_ego"] = %&lt;cego&gt;
prompt ["vitals"] ["max_ego"] = %&lt;mego&gt;
fst:fire ("score", "now", "silent")</send>
  </trigger>
  <trigger
   group="System_Tracking"
   lines_to_match="4"
   keep_evaluating="y"
   match="^\| .+? \-+ \#(\d+) \|\n\| Level  \:\s+(\d+) \((\d+\.\d+)\%\)\s+Power\:\s+\d+p \(\s*(\d+)\%\)\s+Karma\:\s+(\d+)\%\s+Esteem\:\s+(\d+)\%\s+\|\n\| Health \:\s+(?P&lt;ch&gt;\d+)\/(?P&lt;mh&gt;\d+)\s+Mana \:\s+(?P&lt;cmana&gt;\d+)\/(?P&lt;mmana&gt;\d+)\s+Ego  \:\s+(?P&lt;cego&gt;\d+)\/(?P&lt;mego&gt;\d+)\s+\w+\s+\|\n\|\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\|$"
   multi_line="y"
   name="qsc"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt ["vitals"] ["c_health"] = %&lt;ch&gt;
prompt ["vitals"] ["max_health"] = %&lt;mh&gt;
prompt ["vitals"] ["c_mana"] = %&lt;cmana&gt;
prompt ["vitals"] ["max_mana"] = %&lt;mmana&gt;
prompt ["vitals"] ["c_ego"] = %&lt;cego&gt;
prompt ["vitals"] ["max_ego"] = %&lt;mego&gt;
fst:fire ("score", "now", "silent")</send>
  </trigger>
  <trigger
   group="System_Tracking"
   lines_to_match="6"
   match="^\| Race   \: (?P&lt;race&gt;.+?)Age.+?\n.+?\n\|\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\- VITALS\|\n\| Health \: (?P&lt;ch&gt;\d+)\/(?P&lt;mh&gt;\d+)\s+Endurance \: (?P&lt;cend&gt;\d+)\/(?P&lt;mend&gt;\d+)\s+Power    \: \d+p\s+\|\n\| Mana   \: (?P&lt;cmana&gt;\d+)\/(?P&lt;mmana&gt;\d+)\s+Willpower \: (?P&lt;cwill&gt;\d+)\/(?P&lt;mwill&gt;\d+)\s+Reserves \: (\d+)\%\s+\|\n\| Ego    \: (?P&lt;cego&gt;\d+)\/(?P&lt;mego&gt;\d+)\s+Mindset   \: \w+\s+Esteem   \: (\d+)\%\s+\|$"
   multi_line="y"
   name="score_vitals"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>prompt ["vitals"] ["c_health"] = %&lt;ch&gt;
prompt ["vitals"] ["max_health"] = %&lt;mh&gt;
prompt ["vitals"] ["c_endurance"] = %&lt;cend&gt;
prompt ["vitals"] ["max_endurance"] = %&lt;mend&gt;
prompt ["vitals"] ["c_mana"] = %&lt;cmana&gt;
prompt ["vitals"] ["max_mana"] = %&lt;mmana&gt;
prompt ["vitals"] ["c_willpower"] = %&lt;cwill&gt;
prompt ["vitals"] ["max_willpower"] = %&lt;mwill&gt;
prompt ["vitals"] ["c_ego"] = %&lt;cego&gt;
prompt ["vitals"] ["max_ego"] = %&lt;mego&gt;
local r = "%&lt;race&gt;"
if string.find (r, "Archlich") then
 defs:ondef ("archlich", nil, true)
elseif string.find (r, "Undead") then
 defs:ondef ("lich", nil, true)
else
 defs:lostdef ("lich", true)
 defs:lostdef ("archlich", true)
end--if
fst:fire ("score", "now", "silent")</send>
  </trigger>
  <trigger
   group="System_Gear"
   match="^^Id       Container                      Contents                   Sips  Months $"
   name="potionlist_start"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>gear:reset ("vials")
EnableTrigger ("potionlist_get", true)
EnableTrigger ("potionlist_more", true)
EnableTrigger ("potionlist_end", true)</send>
  </trigger>
  <trigger
   group="System_Gear"
   match="^^\d+\s+(?:.+?)  \s+(.+?)  \s+\d+\s+\d+$"
   name="potionlist_get"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local name = "%1"
name = string.gsub (name, "a ", "")
name = string.gsub (name, "an ", "")
name = string.gsub (name, "the ", "")
name = string.gsub (name, "potion", "")
name = string.gsub (name, "poison", "")
name = string.gsub (name, "of ", "")
name = string.gsub (name, "salve", "")
name = string.gsub (name, "purgative", "")
if not string.find (name, "tea") and not string.find (name, "water") then
 name = string.gsub (name, " ", "")
end--if
gear:update ("vials", "current", name)</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^cursed by bad luck\.$"
   name="diag172"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add("bad_luck")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^haunted by grey whispers\.$"
   name="diag173"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add("grey_whispers")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^pinned at the (left|right) leg\.$"
   name="diag179"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>display.affs ("pinleg %1")
flags:add_check ("pinlegs", flags:get_check ("pinlegs")+1)</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^strangled by (\d+) coils of cloud\.$"
   name="diag174"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add ("coil", %1)</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^suffering from a (slight|moderate|major|massive) case of temporary insanity\.$"
   name="diag171"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local v = affs ["insanity"] ["number"]
if v &lt; affs ["insanity"] ["%1"] then
  if "%1" == "slight" then
    affs:insawarped ("insanity", (affs ["insanity"] ["moderate"] - affs ["insanity"] ["slight"]) / 2 +affs ["insanity"] ["slight"])
  elseif "%1" == "moderate" then
    affs:insawarped ("insanity", (affs ["insanity"] ["major"] - affs ["insanity"] ["moderate"]) / 2 + affs ["insanity"] ["moderate"])
  elseif "%1" == "major" then
    affs:insawarped ("insanity", (affs ["insanity"] ["massive"] - affs ["insanity"] ["major"]) / 2 + affs ["insanity"] ["major"])
  else
    affs:insawarped ("insanity", 60)
  end
end</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^suffering from echoes in time\.$"
   name="diag175"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add("time_echoes")</send>
  </trigger>
  <trigger
   group="System_Diag"
   match="^under the gaze of an oracle\.$"
   name="diag177"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:add("oracle")</send>
  </trigger>
  <trigger
   custom_colour="2"
   enabled="y"
   match="dissonance"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   group="System_Cleanse"
   match="scrub all over until the oil on your skin is gone\.$"
   name="cureslickness_cleanse"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:del_queue({"mucous", "gunk", "muddy", "ectoplasm", "mucous", "stinky", "ablaze"})
if affs:has ("sap") then
 system:cured_queue ("sap")
end
if affs:has ("slickness") then
 system:cured_queue ("slickness")
end --if</send>
  </trigger>
  <trigger
   group="System_Cleanse"
   match="scrub all over\, trying to wipe away the dark mark that stains your skin\.$"
   name="curedeathmark_cleanse"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:del_queue({"mucous", "gunk", "muddy", "ectoplasm", "mucous", "stinky", "ablaze",})
local dm = affs:has("deathmark") or 1
if dm &gt; 2 then
  affs:del_queue("deathmark")
else
  affs:add_queue("deathmark", dm - 1)
end
if affs:has ("sap") then
 system:cured_queue ("sap")
end
if affs:has ("slickness") then
 system:cured_queue ("slickness")
end --if</send>
  </trigger>
  <trigger
   group="System_Cleanse"
   match="to wash away that awful mud caked all over your body\.$"
   name="curemuddy"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:del_queue({"gunk", "muddy" })
if affs:has ("sap") then
system:cured_queue ("sap")
end</send>
  </trigger>
  <trigger
   group="System_Cleanse"
   match="to wash away that horrible stench\.$"
   name="curestinky"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:del_queue({"gunk", "muddy", "ectoplasm", "mucous", "stinky",})
if affs:has ("sap") then
 system:cured_queue ("sap")
end</send>
  </trigger>
  <trigger
   group="System_Cleanse"
   match="to wash away that sticky sap\.$"
   name="curesap"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>system:cured_queue ("sap")</send>
  </trigger>
  <trigger
   group="System_Cleanse"
   match="to wash away the horrible ectoplasm\.$"
   name="cureectoplasm"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:del_queue({"gunk", "muddy", "ectoplasm" })
if affs:has ("sap") then
 system:cured_queue ("sap")
end</send>
  </trigger>
  <trigger
   group="System_Cleanse"
   match="to wash away the slimy mucous\.$"
   name="curemucous"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if affs:has ("sap") then
 system:cured_queue ("sap")
end
affs:del_queue({"gunk", "muddy", "ectoplasm", "mucous"})</send>
  </trigger>
  <trigger
   group="System_Cleanse"
   match="you are squeaky clean\.$"
   name="cureall_cleanse"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:del_queue({"mucous", "gunk", "muddy", "ectoplasm","mucous", "stinky", "ablaze", "deathmark" })
if affs:has ("sap") then
 system:cured_queue ("sap")
end
if affs:has ("slickness") then
 system:cured_queue ("slickness")
end--if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="you sprawling to the ground\.$"
   name="affridingram"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>affs:prone()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Bashing"
   match="^.+? mutters and traces a cobalt blue pentagram in the air that remains hovering before (?:[Hh]im|[Hh]er)\.$"
   name="bashing_pentagram"
   regexp="y"
   send_to="12"
   sequence="101"
  >
  <send>display.mult ("yellow", "", "((SHIELD))")
if system:is_auto ("bashing") then
 flags:add_check ("raze")
end--if</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Bashing"
   match="^Eyes glowing red\, .+? bellows and a shield of protection flickers into view around (?:[Hh]is|[Hh]er) form\.$"
   name="bashing_circle"
   regexp="y"
   send_to="12"
   sequence="101"
  >
  <send>display.mult ("yellow", "", "((SHIELD))")
if system:is_auto ("bashing") then
 flags:add_check ("raze")
end--if</send>
  </trigger>
  <trigger
   group="System_Herbs"
   match="^The plant refuses to release its bounty\.$"
   name="harvesting_guarded"
   regexp="y"
   send_to="14"
   sequence="1000"
  >
  <send>display.system ("Herb Guarded")
herbs:del ()</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Defs"
   keep_evaluating="y"
   match="^.+? lowers ([hH](?:is|er)) head and stares at you\, eyes alight with a preternatural glow\, as a stream of sparkling smoke blows out \1 nostrils and forms a reflection of you\.$"
   name="ondef_beastreflection"
   regexp="y"
   send_to="12"
   sequence="9000"
  >
  <send>defs:add_queue ("reflection")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^An enormous gutteral croak reverberates through the air\, shaking the ground\.$"
   name="affthroatcroak"
   regexp="y"
   send_to="12"
   sequence="10000"
  >
  <send>EnableTrigger("affthroatcroaked", true)
prompt:queue(function () EnableTrigger("affthroatcroaked", false) end, "affthroatcroak")</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^H(?:is|er) eyes glowing a fearsome yellow\, a homunculus resembling a deformed \w+ stares at you with a burning gaze\, and you cannot help but shudder at the intensity of the malice directed towards you\.$"
   name="transmology_homunculus1"
   regexp="y"
   send_to="12"
   sequence="10000"
  >
  <send>affs:add_queue ("insawarped", "insanity", 3)
affs.add_queue("bad_luck")</send>
  </trigger>
  <trigger
   group="System_Tracking"
   match="^The cloying presence of an aeon field envelops you\, causing the air around you to shimmer\.$"
   name="aeonics_aeonfieldhit"
   regexp="y"
   send_to="12"
   sequence="10000"
  >
  <send>EnableTrigger("afftarotaeon1", true)
EnableTrigger("afftarotaeon2", true)
prompt:queue (function () EnableTrigger("afftarotaeon1", false) EnableTrigger("afftarotaeon2", false) end, "aeonfield")
affs:add_queue ("insawarped", "timewarped", 4)</send>
  </trigger>
  <trigger
   enabled="y"
   group="System_Tracking"
   match="^You succeed and carry ([hH]im|[hH]er)\, knocking \1 to the ground\.$"
   name="affathtackling__"
   regexp="y"
   send_to="12"
   sequence="10000"
  >
  <send>affs:prone()</send>
  </trigger>
</triggers>

<!-- aliases -->

<aliases
   muclient_version="4.72"
   world_file_version="15"
   date_saved="2012-08-25 10:16:24"
  >
  <alias
   name="aetherhunt_job"
   match="^sys set (gunner) (0|1|true|false|on|off)$"
   enabled="y"
   group="System_Aetherhunt"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="99"
  >
  <send>if "%1" == "0" or "%1" == "false" or "%1" == "off" then
EnableTrigger ("%1_target", false)
display.system ("Gunner OFF")
else
EnableTrigger ("%1_target", true)
display.system ("Gunner ON")
end</send>
  </alias>
  <alias
   name="say_"
   match="^'(.*)$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>Send ("say (With a sharp hiss) %1")</send>
  </alias>
  <alias
   name="score_"
   match="^(?:old)?(?:q)?sc(?:ore)?$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>prompt:score ("%0")</send>
  </alias>
  <alias
   name="def_"
   match="^(?:show )?def(?:enses)?$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>Send ("%0")
flags:add ("waiting_for_def")
fst:enable ("deffing")
EnableTrigger ("defstart", true)</send>
  </alias>
  <alias
   name="powercuring"
   match="^(invoke green|moondance full|evoke gedulah)$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>Send ("%1")
flags:add ("powercure", "%1")
sca:check ("powercure")</send>
  </alias>
  <alias
   name="ml_"
   match="^(magiclist|ml)$"
   enabled="y"
   group="System_Magiclist"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>magic:sync ()
EnableTrigger ("magiclist_start", true)</send>
  </alias>
  <alias
   name="quit_"
   match="^(qq|quit)$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>Send ("%1")
EnableTrigger ("logout", true)</send>
  </alias>
  <alias
   name="gear_update_"
   match="^(v)(d|c) (\d+) (.+?)$"
   enabled="y"
   group="System_Gear"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>local number = tonumber ("%3")
if not number then return display.error ("Invalid Number") end
local name = "%4"
local index = {
 ["v"] = "vials",
 ["d"] = "desired",
 ["c"] = "current",}
gear:update (index ["%1"], index ["%2"], name, number)
</send>
  </alias>
  <alias
   name="arena_accept_"
   match="^accept(?: \w+)?$"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>Send ("%0")
EnableTriggerGroup ("System_Arena", true)
fst:disable ("arena")</send>
  </alias>
  <alias
   name="afk_"
   match="^afk$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>if IsTimer ("afk") == 0 then
 if GetTimerInfo ("afk", 6) == true then
  EnableTimer ("afk", false)
  display.system ("Afk mode OFF")
 else
  EnableTimer ("afk", true)
  ResetTimer ("afk")
  display.system ("Afk mode ON")
 end--if
else
 ImportXML([[&lt;timers&gt;
&lt;timer
name="afk"
minute="10"
second="0"
offset_second="0.00"
send_to="12"
group="System_Interface" &gt;
&lt;send&gt;Send ("ql")&lt;/send&gt;
&lt;/timer&gt;
&lt;/timers&gt;]])
EnableTimer ("afk", true)
ResetTimer ("afk")
display.system ("Afk mode ON")
end</send>
  </alias>
  <alias
   name="allies_"
   match="^allies$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>Send ("allies")
EnableTrigger ("start_allies", true)</send>
  </alias>
  <alias
   name="apply_salve"
   match="^apply \w+( to (skin|head|chest|gut|legs|arms))?$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>act:apply ("%0")
act:exec ()</send>
  </alias>
  <alias
   name="assess_"
   match="^as(?:sess)?( \w+)?$"
   enabled="y"
   expand_variables="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>if #"%1"==0 then
Send ("assess @system_target")
else
Send ("assess%1")
end
EnableTrigger ("start_assess", true)</send>
  </alias>
  <alias
   name="toggle_bashing"
   match="^ba$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>if GetTriggerInfo ("getgold", 8) then
EnableTriggerGroup ("System_Bashing", false)
display.system ("Bashing OFF")
else
EnableTriggerGroup ("System_Bashing", true)
display.system ("Bashing ON")
end</send>
  </alias>
  <alias
   name="bdef"
   match="^bdef$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>defs:bdef ()</send>
  </alias>
  <alias
   name="bow2"
   match="^bow (\w+)$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>Send ("emote turns his gaze upon ^%1, then bows his head and veins start throbbing on his forehead.")</send>
  </alias>
  <alias
   name="bow1"
   match="^bow$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>Send ("emote bows his head and veins start throbbing on his forehead as his sternal mouth loosens. His inner serpent squirms out of his chest and it hisses menacingly as it absorbs the mental energies of those around him.")</send>
  </alias>
  <alias
   match="^cb (\d+) (\d+)$"
   enabled="y"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>Send ("get gold from pack")
Send ("credits buy %1 at %2")
Send ("put gold in pack")</send>
  </alias>
  <alias
   name="credits_for_sale"
   match="^cfs$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   sequence="100"
  >
  <send>credits for sale</send>
  </alias>
  <alias
   name="arena_challenge"
   match="^challenge \w+$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>Send ("%0")
EnableTriggerGroup ("System_Arena", true)
fst:enable ("arena")</send>
  </alias>
  <alias
   name="icewall_"
   match="^ci(n|s|e|w|u|d|i|o|ne|nw|se|sw)$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local dirs = {
n = "north",
s = "south",
e = "east",
w = "west",
i = "in",
o = "out",
ne = "northeast",
nw = "northwest",
se = "southeast",
sw = "southwest",
u = "up",
d = "down",}
if magic:is_available ("icewall") then
 magic:use ("icewall", dirs ["%1"], "now")
else
 display.system ("Icewall Not Available")
end</send>
  </alias>
  <alias
   name="contemplate_"
   match="^con(?:emplate)( \w+)?$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>if #"%1"==0 then 
 Send ("contemplate "..GetVariable ("system_target"))
else
 Send ("contemplate %1")
end
EnableTrigger ("contemplating", true)</send>
  </alias>
  <alias
   name="darkbond_"
   match="^d(?:ark)?b(?:ond)?$"
   enabled="y"
   group="System_Offense"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send ("darkbond")---this will see the current list of powers
EnableTrigger ("start_powers", true)
EnableTrigger ("get_double", true)
</send>
  </alias>
  <alias
   name="darkcall_thrall_"
   match="^d(?:arkcall)?t(?:hrall)?$"
   enabled="y"
   group="System_Offense"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send ("darkcall thrall")
EnableTrigger ("demon_summon", true)
EnableTrigger ("demon_summonalready", true)
</send>
  </alias>
  <alias
   name="feed_settings_"
   match="^df( \w+)?( \d+)?$"
   enabled="y"
   group="System_Offense"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#"%1" &lt;=1) then
 offense ["feeds"] = {}
 offense ["feeds"] = nil
elseif (#"%2" &gt;1) then
 local name = string.upper (string.sub ("%1", 2,2))..string.lower (string.sub ("%1",3))
 Note (name)
 offense ["feeds"] = offense ["feeds"] or {}
 offense ["feeds"] [name] = tonumber ("%2")
elseif next (offense ["feeds"]) then
 local name = string.upper (string.sub ("%1", 2,2))..string.lower (string.sub ("%1",3))
 Note (name)
 offense ["feeds"] [name] = nil
end</send>
  </alias>
  <alias
   name="diag"
   match="^diag(?:nose)?$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>act:diag ()
act:exec ()</send>
  </alias>
  <alias
   name="system_dpr"
   match="^dpr$"
   enabled="y"
   group="System_Offense"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>if #offense ["current"]==#offense ["precision"] then
  local is_wielded = true
  for k, id in ipairs (offense ["current"]) do
    if
   offense ["precision"] [1] ~= id and
   offense ["precision"] [2] ~= id
  then
   is_wielded = nil
   break
 end --if
  end --for
  if is_wielded then
    return display.system ("Weapons already wielded")
  end--if
end--if  
if next (offense ["current"]) then
for k, id in ipairs (offense ["current"]) do
  Send ("sheathe "..id.." "..(offense ["sheathes"] [id] or "ERROR - NO SHEATHE STORED!"))
end --for
end--if
flags:add_check ("reset_current_weapons")
for k, id in ipairs (offense ["precision"]) do
Send ("draw "..id.." from "..(offense ["sheathes"] [id] or "ERROR - NO SHEATHE STORED!"))
if offense ["sheathes"] [id] then
  if flags:get_check ("reset_current_weapons") then
    offense ["current"] = {}
    flags:del_check ("reset_current_weapons")
  end --if
  offense ["current"] [#offense ["current"]+1] = id
  offense:save ()
end
flags:del_check ("reset_current_weapons")
end</send>
  </alias>
  <alias
   name="drink"
   match="^drink (\w+)$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>act:drink ("%0")
act:exec ()</send>
  </alias>
  <alias
   name="demon_settings_"
   match="^ds (double|power|lasthit|willhit) (\d+)$"
   enabled="y"
   group="System_Offense"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable ("demon_%1", "%2")</send>
  </alias>
  <alias
   name="system_dsp"
   match="^dsp$"
   enabled="y"
   group="System_Offense"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>if #offense ["current"]==#offense ["speed"] then
  local is_wielded = true
  for k, id in ipairs (offense ["current"]) do
    if
   offense ["speed"] [1] ~= id and
   offense ["speed"] [2] ~= id
  then
   is_wielded = nil
   break
 end --if
  end --for
  if is_wielded then
    return display.system ("Weapons already wielded")
  end--if
end--if  
if next (offense ["current"]) then
for k, id in ipairs (offense ["current"]) do
  Send ("sheathe "..id.." "..(offense ["sheathes"] [id] or "ERROR - NO SHEATHE STORED!"))
end --for
end--if
flags:add_check ("reset_current_weapons")
for k, id in ipairs (offense ["speed"]) do
Send ("draw "..id.." from "..(offense ["sheathes"] [id] or "ERROR - NO SHEATHE STORED!"))
if offense ["sheathes"] [id] then
  if flags:get_check ("reset_current_weapons") then
    offense ["current"] = {}
    flags:del_check ("reset_current_weapons")
  end --if
  offense ["current"] [#offense ["current"]+1] = id
  offense:save ()
end
flags:del_check ("reset_current_weapons")
end</send>
  </alias>
  <alias
   name="symbol_evoke_"
   match="^e(d|r|a|s|w)$"
   enabled="y"
   group="System_Offense"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local pactpowers = {
["d"] = "darksilver",
["r"] = "rigormortis",
["a"] = "anorexia",
["s"] = "scabies",
["w"] = "worms",}
offense:exec ("powah", {"symbol evoke "..pactpowers ["%1"], "target"})</send>
  </alias>
  <alias
   name="eat_herb"
   match="^eat (calamus|chervil|coltsfoot|galingale|horehound|kafe|kombu|marjoram|myrtle|pennyroyal|reishi|wormwood|yarrow|sparkleberry|earwort|faeleaf|merbloom)$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>act:eat ("eat %1")
act:exec ()</send>
  </alias>
  <alias
   name="emperor_"
   match="^em( \w+)?$"
   enabled="y"
   group="System_Offense"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SendNoEcho ("outd emperor")
if (#"%1" &lt;=1) then
 Send ("fling emperor at "..GetVariable ("system_target"))
else
 Send ("fling emperor at %1")
end</send>
  </alias>
  <alias
   name="enemies_"
   match="^en(?:emies)?$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>Send ("enemies")
EnableTrigger ("start_enemies", true)</send>
  </alias>
  <alias
   name="enemying_"
   match="^en(?:emy)? (\w+)$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>if  "%1" == "def" or "%1" == "default" then
 if not next (adven.default_enemies) then
  return display.error ("You Have No Default Enemies Stored!")
 else
  local to_enemy = ""
  for n, v in pairs (adven.default_enemies) do
   to_enemy = to_enemy.." "..n
  end--for
  adven:queue_enemy (to_enemy, true)
 end--if
else
 Send ("enemy %1")
 flags:add ("enemying")
end--if</send>
  </alias>
  <alias
   name="get_ent_"
   match="^ent(?:.+)?$"
   enabled="y"
   group="System_Offense"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send ("%0")
EnableTrigger ("demon_startid", true)</send>
  </alias>
  <alias
   name="ignite_"
   match="^f(n|s|e|w|u|d|i|o|ne|nw|se|sw|me)$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local dirs = {
n = "north",
s = "south",
e = "east",
w = "west",
i = "in",
o = "out",
ne = "northeast",
nw = "northwest",
se = "southeast",
sw = "southwest",
u = "up",
d = "down",}
if magic:is_available ("ignite") then
 if dirs ["%1"] then
  magic:use ("ignite", "wall "..dirs ["%1"], "now")
 else
  magic:use ("ignite", "me", "now")
 end 
else
 display.system ("Ignite Not Available")
end</send>
  </alias>
  <alias
   name="fashion_vial_"
   match="^fashion(.+?) (\w+)( inv)?$"
   enabled="y"
   group="System_Gear"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>local number = string.gsub ("%1", " ", "")
local in_inv = #"%3" &gt;=2
if number == "all" then
 gear:makevial ("%2", nil, in_inv)
else
 gear:makevial ("%2", tonumber (number), in_inv)
end
if IsConnected () then
 Send ("")
end--if</send>
  </alias>
  <alias
   name="fdef"
   match="^fdef$"
   enabled="y"
   expand_variables="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>defs:fdef ()</send>
  </alias>
  <alias
   name="focus"
   match="^focus (mind|body|spirit)$"
   enabled="y"
   expand_variables="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>act:focus ("%0")
act:exec ()</send>
  </alias>
  <alias
   name="get_enemy"
   match="^ge (mind|qw)$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>if "%1"=="mind" then
 Send ("mindsense")
 EnableTrigger ("start_mindsense", true)
elseif "%1"=="qw" then
 Send ("qw")
 EnableTrigger ("qw_getenemy", true)
end--if</send>
  </alias>
  <alias
   name="grin2"
   match="^grin (\w+)$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>Send ("emote turns his gaze upon ^%1, then grins disturbingly, dislocating his jaw with a muffled crack and a devious rictus forms on his face as his mouth opens from ear to ear")</send>
  </alias>
  <alias
   name="grin1"
   match="^grin$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>Send ("emote grins disturbingly, dislocating his jaw with a muffled crack and a devious rictus forms on his face as his mouth opens from ear to ear")</send>
  </alias>
  <alias
   name="harvest_"
   match="^harv (\w+)(?: (\d+))?$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>herbs:pick ("%1", tonumber ("%2"))</send>
  </alias>
  <alias
   name="healer_"
   match="^he( \w+)?$"
   enabled="y"
   group="System_Offense"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SendNoEcho ("outd healer")
if (#"%1" &lt;=1) then
 Send ("fling healer at me")
else
 Send ("fling healer at%1")
end</send>
  </alias>
  <alias
   name="hermit_"
   match="^he(a|t|f)$"
   enabled="y"
   group="System_Offense"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if ("%1" == "a") then
 SendNoEcho ("outd hermit")
 Send ("activate hermit")
elseif ("%1" == "t") then
 Send ("touch hermit")
else
 Send ("fling hermit at ground")
end</send>
  </alias>
  <alias
   name="wielding"
   match="^i(?:nfo)?(?:\s)?i(?:nv)?(?:nventory)? wield(?:.*)?$"
   enabled="y"
   group="System_Offense"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send ("%0")
EnableTrigger ("wielding_start", true)
EnableTrigger ("wielding_id", true)</send>
  </alias>
  <alias
   name="invest_powers_"
   match="^inv (.+?)$"
   enabled="y"
   group="System_Offense"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send ("invest archdemon with %1")
EnableTrigger ("invest_powers", true)</send>
  </alias>
  <alias
   name="system_toggle_love"
   match="^l(0|1)"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>settings.love = tonumber ("%1")</send>
  </alias>
  <alias
   match="^lkn$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send ("link node")
links = 0</send>
  </alias>
  <alias
   name="auto_pipes_light_"
   match="^lp(1|0)$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>system:set_auto ("pipes_light", "%1")</send>
  </alias>
  <alias
   name="magician_"
   match="^ma( \w+)?$"
   enabled="y"
   group="System_Offense"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if not sca:is_slowed () then
Send ("outd magician")
end
if (#"%1" &lt;=1) then
 Send ("fling magician at me")
else
 Send ("fling magician at%1")
end</send>
  </alias>
  <alias
   match="^mdl$"
   enabled="y"
   regexp="y"
   ignore_case="y"
   sequence="100"
  >
  <send>module lock</send>
  </alias>
  <alias
   match="^mdu$"
   enabled="y"
   regexp="y"
   ignore_case="y"
   sequence="100"
  >
  <send>module unlock</send>
  </alias>
  <alias
   name="med_"
   match="^med(?:itate)?$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>Send ("med")
flags:add ("prone", "userinput")
</send>
  </alias>
  <alias
   name="magic_recharge_"
   match="^mr$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>magic:recharge ("all")
if IsConnected () then Send ("") end</send>
  </alias>
  <alias
   name="ndef"
   match="^ndef$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>defs ["free"] = {}
defs ["ubal"] = {}
defs ["rbal"] = {}
fst:fire ("deffing", "now", "silent")</send>
  </alias>
  <alias
   name="potionlist_"
   match="^p(?:otion)?l(?:ist)?$"
   enabled="y"
   group="System_Gear"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>Send ("%0")
EnableTrigger ("potionlist_start", true)
EnableTrigger ("potionlist_none", true)</send>
  </alias>
  <alias
   name="system_parry_"
   match="^parry$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>Send ("parry")
flags:add ("waiting_for_parry")
fst:enable ("parry")
EnableTrigger ("parry_start", true)</send>
  </alias>
  <alias
   match="^pea$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   sequence="100"
  >
  <send>portal enter ari</send>
  </alias>
  <alias
   name="pipelist"
   match="^pipel(?:ist)?$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>Send ("pipel")
EnableTrigger ("start_pipel", true)
if affs:has ("aeon") or affs:has ("sap") then
 flags:add ("curing", "pipel")
 sca:check ("pipel")
end</send>
  </alias>
  <alias
   name="plants_"
   match="^plants$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>Send ("plants")
EnableTrigger ("start_herbs", true)</send>
  </alias>
  <alias
   name="exiting_aetherplex_"
   match="^portal exit$"
   enabled="y"
   expand_variables="y"
   group="System_Interface"
   regexp="y"
   ignore_case="y"
   sequence="100"
  >
  <send>portal exit aetherplex</send>
  </alias>
  <alias
   name="profiling_"
   script="show_profile"
   match="^profile$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   ignore_case="y"
   sequence="100"
  >
  </alias>
  <alias
   match="^px(m)?$"
   enabled="y"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>if #"%1"&gt;=1 then
Send ("portal exit magnagora")
else
Send ("portal exit aetherplex")
end--if</send>
  </alias>
  <alias
   name="auto_rebound_"
   match="^r(0|1)$"
   enabled="y"
   expand_variables="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>system:set_auto ("rebound", "%1")</send>
  </alias>
  <alias
   name="raisedead"
   match="^rd (\w+)$"
   enabled="y"
   group="System_Offense"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send ("darkchant raisedead %1")</send>
  </alias>
  <alias
   name="refill_vial_"
   match="^refill (all|\d+ .+?)$"
   enabled="y"
   group="System_Gear"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>local option = "%1"
local s, e = string.find (option, " ")
if s then
 local number = string.sub (option, 1, s-1)
 local potion = string.sub (option, e+1)
 gear:refill (tonumber (number), potion)
else
 gear:refill ()
end
if IsConnected then
 Send ("")
end--if</send>
  </alias>
  <alias
   name="reject_enemy"
   match="^rej( \w+)?$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>if (#"%1" &lt;=1) then
affs:add ("lust", GetVariable ("system_target"))
else
 affs:add ("lust", "%1")
end</send>
  </alias>
  <alias
   name="rejecting_"
   match="^reject \w+$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>Send ("%0")
flags:add ("rejecting")</send>
  </alias>
  <alias
   name="restore"
   match="^restore$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>act:restore ()
act:exec ()</send>
  </alias>
  <alias
   name="sheathe"
   match="^sht$"
   enabled="y"
   group="System_Offense"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>if next (offense ["current"]) then
  for k, id in ipairs (offense ["current"]) do
    if offense ["sheathes"] [id] then
  Send ("sheathe "..id.." "..offense ["sheathes"] [id])
    else
   return display.warning ("You must set SHEATHES for your weapons!")
    end--if
 offense ["current"] = {}
 offense:save ()
  end--for
  else
    display.warning ("Set your current Weapons!")
  end--if</send>
  </alias>
  <alias
   name="sit3"
   match="^sit (?:in|on)(.*)$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>Send ("%0")
flags:add ("prone", "userinput")</send>
  </alias>
  <alias
   name="sit2"
   match="^sit chair$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>Send ("sit chair")
flags:add ("prone", "userinput")</send>
  </alias>
  <alias
   name="sit"
   match="^sit$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>Send ("sit")
flags:add ("prone", "userinput")</send>
  </alias>
  <alias
   name="sleep"
   match="^sleep$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>Send ("sleep")
flags:add ("asleep", "user")</send>
  </alias>
  <alias
   name="smile2"
   match="^smile (\w+)$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>Send ("emote turns his gaze upon ^%1, then contorts his features in what could be interpreted as a smile, the mouth on his sternum clenching slightly.")</send>
  </alias>
  <alias
   name="smile1"
   match="^smile$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>Send ("emote contorts his features in what could be interpreted as a smile, the mouth on his sternum clenching slightly.")</send>
  </alias>
  <alias
   name="interface_smoking"
   match="^smoke (myrtle|faeleaf|coltsfoot)$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>act:smoke ("%0")
act:exec ()</send>
  </alias>
  <alias
   name="starleaper_"
   match="^st$"
   enabled="y"
   group="System_Offense"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send ("outd starleaper")
Send ("flind starleaper at ground")</send>
  </alias>
  <alias
   match="^stocking$"
   enabled="y"
   regexp="y"
   ignore_case="y"
   sequence="100"
  >
  <send>get stocking from pack
pull item from stocking
put stocking in pack</send>
  </alias>
  <alias
   name="stop_"
   match="^stop (\w+)$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>if "%1" == "harvest" then
herbs:del ("user")
elseif "%1" == "def" then
 defs ["free"] = {}
 defs ["ubal"] = {}
 defs ["rbal"] = {}
 fst:fire ("deffing", "now", "silent")
 display.system ("Deffing Stopped")
end </send>
  </alias>
  <alias
   name="system_auto"
   match="^sys auto (\w+)(?:\s)?(.*)?$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>system:set_auto (string.lower ("%1"), "%2")</send>
  </alias>
  <alias
   name="system_show_autos"
   match="^sys auto$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>system:show_autos ()</send>
  </alias>
  <alias
   name="system_debug"
   match="^sys deb$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>if settings.deb == 1 then
&#9;settings.deb = 0
&#9;sysprint ("white", "", "debug off")
else
&#9;settings.deb = 1
&#9;sysprint ("white", "", "debug on")
end </send>
  </alias>
  <alias
   name="system_off"
   match="^sys off$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>system:off ()</send>
  </alias>
  <alias
   name="system_on"
   match="^sys on$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>system:on ()</send>
  </alias>
  <alias
   name="system_set_pipes"
   match="^sys pipes (myrtle|coltsfoot|faeleaf) (\d+|\w+) (\d+) (\w+)$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>pipes:assign ("%1", "%2", "%3", string.lower ("%4"))
display.tprint (pipes)</send>
  </alias>
  <alias
   name="priority_change"
   match="^sys priority (health|mana|ego)$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>system:set_settings ("priority", string.lower("%1"))</send>
  </alias>
  <alias
   match="^sys rdef$"
   enabled="y"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>Execute ("sys auto waterbreathe 0")
Execute ("sys auto truehearing 0")
Execute ("sys auto tea 0")
Execute ("sys auto speed 0")
Execute ("sys auto sparklies 0")
Execute ("sys auto sixthsense 0")
Execute ("sys auto rebound 0")
Execute ("sys auto kafe 0")
Execute ("sys auto healing 0")
Execute ("sys auto fire 0")
Execute ("sys auto frost 0")
Execute ("sys auto galvanism 0")
Execute ("sys auto love 0")
Execute ("sys auto selfishness 0")</send>
  </alias>
  <alias
   match="^sys reset$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>DoCommand "ReloadScriptFile"</send>
  </alias>
  <alias
   name="add_enemy"
   match="^sys se (.+?) (\d+)( \d+)?$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>if #"%3"&lt;=1 then
 local pos = string.sub ("%3", 2)
 adven:se ("%1", %2, tonumber (pos))
else
 adven:se ("%1", %2)
end</send>
  </alias>
  <alias
   name="set_settings"
   match="^sys set (.*) (.*)$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>system:set_settings ("%1", "%2")
</send>
  </alias>
  <alias
   name="skills"
   match="^sys set skills( ?P&lt;verbose&gt;verbose)?$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>skills:reset (true)
if string.len("%&lt;verbose&gt;)")&gt;1 then
 silent =nil
else
 silent = true
end
Send ("skills")
EnableTriggerGroup ("System_Skills", true)</send>
  </alias>
  <alias
   name="system_show_settings"
   match="^sys settings$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>system:show_settings ()</send>
  </alias>
  <alias
   name="target_check"
   match="^sys targets$"
   enabled="y"
   expand_variables="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>if (not (next (system ["targets"]))) then
 Note ("NO TARGETS QUEUED")
else
 Note ("CURRENT TARGETS: ")
 for k, v in ipairs (system ["targets"]) do
  if (string.lower (GetVariable ("system_target")) == string.lower (v)) then
   ColourNote ("aqua", "", " **"..tostring (k).." : "..v.."**")
  else
   ColourNote ("aqua", "", "   "..tostring (k).." : "..v)
  end 
 end --for
end </send>
  </alias>
  <alias
   name="gust_"
   match="^u(?P&lt;caster&gt;p|c)?(?P&lt;dir&gt;n|s|e|w|u|d|i|o|ne|nw|se|sw)$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local dirs = {
n = "north",
s = "south",
e = "east",
w = "west",
i = "in",
o = "out",
ne = "northeast",
nw = "northwest",
se = "southeast",
sw = "southwest",
u = "up",
d = "down",}
%&lt;ch&gt;
if magic:is_available ("gust") then
 if #"%&lt;caster&gt;"==1 then
  local to_gust
  if "%&lt;caster&gt;" == "p" then
   to_gust = offense:get_caster ("pfifth")
  elseif "%&lt;caster&gt;" == "c" then
   to_gust = offense:get_caster ("choke")
  end --if
  magic:use ("gust", (to_gust or GetVariable ("system_target") or "nil").." "..dirs ["%&lt;dir&gt;"], "now")
 else
  magic:use ("gust", GetVariable ("system_target").." "..dirs ["%&lt;dir&gt;"], "now")
 end
else
 display.system ("Gust Not Available")
end</send>
  </alias>
  <alias
   name="unenemying_"
   match="^unen(?:emy)? (\w+)$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>Send ("unenemy %1")
flags:add ("unenemying")</send>
  </alias>
  <alias
   match="^unk$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send ("unlink node")</send>
  </alias>
  <alias
   match="^w(?:ound)?s$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>Send ("wounds")
EnableTrigger ("wound_status", true)</send>
  </alias>
  <alias
   name="warrior_"
   match="^wa$"
   enabled="y"
   group="System_Offense"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send ("outd warrior")
Send ("fling warrior at ground")</send>
  </alias>
  <alias
   name="target_alias"
   match="^x (\w+)$"
   enabled="y"
   expand_variables="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>target = string.upper(string.sub("%1", 1, 1))..string.lower(string.sub ("%1", 2))
SetVariable ("system_target", target)
if
not next (system ["targets"]) or 
not system:getkey (system ["targets"], target)
then
 table.insert (system ["targets"], target)
end 
Note ("CURRENT TARGETS: ")
for k, v in ipairs (system ["targets"]) do
 if (string.lower (target) == string.lower (v)) then
  ColourNote ("aqua", "", " **"..tostring (k).." : "..system ["targets"] [k].."**")
 else
  ColourNote ("aqua", "", "   "..tostring (k).." : "..system ["targets"] [k])
 end 
end --for
system:update_info ()
target = nil</send>
  </alias>
  <alias
   match="^x(?:\s)?(\d+)$"
   enabled="y"
   expand_variables="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>pos = tonumber("%1")
if pos &gt; #system ["targets"] then
 Note ("YOU DON'T HAVE THAT MANY CURRENT TARGETS!")
elseif pos == 0 then
 system ["targets"] = {}
 Note ("TARGETS RESET")
else
 SetVariable ("system_target", system ["targets"] [pos]) 
 system:update_info ()
 for k, v in ipairs (system ["targets"]) do
  if (string.lower (v) == string.lower (system ["targets"] [pos])) then
   ColourNote ("aqua", "","** ".. tostring (k).." : "..system ["targets"] [k].." **")
  else 
   ColourNote ("aqua", "", "   "..tostring (k).." : "..system ["targets"] [k])
  end 
 end --for
end</send>
  </alias>
  <alias
   name="scry_"
   match="^y(?: (\w+))?$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>if #"%1"&gt;1 then
 if skills:is_available ("window") then
  Send ("abjure window %1")
 else
  magic:use ("scry", "%1", "now")
 end--if
else
 if skills:is_available ("window") then
  Send ("abjure window "..GetVariable ("system_target"))
 else
  magic:use ("scry", GetVariable ("system_target"), "now")
 end--if
end </send>
  </alias>
  <alias
   name="farscout_"
   match="^y(e|a)?$"
   enabled="y"
   group="System_Interface"
   regexp="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>if "%1"=="e" then
 Send ("abjure farscout enemies")
else
 Send ("abjure farscout allies")
end </send>
  </alias>
</aliases>

<!-- timers -->

<timers
   muclient_version="4.72"
   world_file_version="15"
   date_saved="2012-08-25 10:16:24"
  >
  <timer name="fst_ondef_protection" second="10.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("ondef_protection")</send>

  </timer>
  <timer name="fst_diag" second="2.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("diag")</send>

  </timer>
  <timer name="fst_gn_ah" second="25.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:gain("ah")</send>

  </timer>
  <timer name="fst_apply_regeneration_to_legs" second="4.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("apply_regeneration_to_legs")</send>

  </timer>
  <timer name="fst_elixir" second="2.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("elixir")</send>

  </timer>
  <timer name="fst_ah" second="2.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("ah")</send>

  </timer>
  <timer name="fst_gn_focus" second="5.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:gain("focus")</send>

  </timer>
  <timer name="fst_apply_regeneration_to_chest" second="5.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("apply_regeneration_to_chest")</send>

  </timer>
  <timer name="fst_gn_salve" second="2.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:gain("salve")</send>

  </timer>
  <timer name="fst_prone" second="1.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("prone")</send>

  </timer>
  <timer name="fst_speed" second="2.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("speed")</send>

  </timer>
  <timer name="fst_no_metawake" second="1.50" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("no_metawake")</send>

  </timer>
  <timer name="fst_restore" second="2.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("restore")</send>

  </timer>
  <timer name="demon_four" second="4.00" offset_second="0.00"    send_to="12"
group="System_Offense" >
  <send>EnableTimer ("demon_four", false)
 EnableTimer ("demon_one", true)
 ResetTimer ("demon_one")
 ColourNote ("red", "", "  _  _")   
 ColourNote ("red", "", " | || |  ")
 ColourNote ("red", "", " | || |_ ")
 ColourNote ("red", "", " |__   _|")
 ColourNote ("red", "", "    | |  ")
 ColourNote ("red", "", "    |_|  ")</send>

  </timer>
  <timer name="fst_clotting" second="2.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("clotting")</send>

  </timer>
  <timer name="fst_no_insomnia" second="1.50" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("no_insomnia")</send>

  </timer>
  <timer name="demon_one" second="3.00" offset_second="0.00"    send_to="12"
group="System_Offense" >
  <send>EnableTimer ("demon_one", false)
EnableTrigger ("demon_attacked", true)
 ColourNote ("red", "", "  __ ")
 ColourNote ("red", "", " /_ |")
 ColourNote ("red", "", "  | |")
 ColourNote ("red", "", "  | |")
 ColourNote ("red", "", "  | |")
 ColourNote ("red", "", "  |_|")</send>

  </timer>
  <timer name="fst_arena" second="50.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("arena")</send>

  </timer>
  <timer name="fst_no_selfishness" second="2.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("no_selfishness")</send>

  </timer>
  <timer name="fst_focus" second="2.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("focus")</send>

  </timer>
  <timer name="fst_purg" second="2.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("purg")</send>

  </timer>
  <timer name="fst_salve" second="2.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("salve")</send>

  </timer>
  <timer name="fst_score" second="2.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("score")</send>

  </timer>
  <timer name="afk" minute="10" second="0.00" offset_second="0.00"    send_to="12"
group="System_Interface" >
  <send>Send ("ql")</send>

  </timer>
  <timer name="fst_unwield" second="2.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("unwield")</send>

  </timer>
  <timer name="fst_deffing" second="2.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("deffing")</send>

  </timer>
  <timer name="fst_pit" second="7.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("pit")</send>

  </timer>
  <timer name="fst_reject" second="2.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("reject")</send>

  </timer>
  <timer name="fst_fear" second="1.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("fear")</send>

  </timer>
  <timer name="fst_ondef_orgpotion" second="35.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("ondef_orgpotion")</send>

  </timer>
  <timer name="fst_gn_purg" second="3.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:gain("purg")</send>

  </timer>
  <timer name="fst_orgpotion" second="2.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("orgpotion")</send>

  </timer>
  <timer name="fst_cleanse" second="2.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("cleanse")</send>

  </timer>
  <timer name="fst_gn_scroll" second="9.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:gain("scroll")</send>

  </timer>
  <timer name="fst_stance" second="2.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("stance")</send>

  </timer>
  <timer name="fst_no_waterbreathe" second="2.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("no_waterbreathe")</send>

  </timer>
  <timer name="fst_climbing" second="1.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("climbing")</send>

  </timer>
  <timer name="fst_pipes_refill" second="2.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("pipes_refill")</send>

  </timer>
  <timer name="fst_no_sting" second="2.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("no_sting")</send>

  </timer>
  <timer name="fst_herb" second="1.50" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("herb")</send>

  </timer>
  <timer name="fst_brew" second="2.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("brew")</send>

  </timer>
  <timer name="fst_no_protection" second="2.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("no_protection")</send>

  </timer>
  <timer name="fst_todo_free" second="2.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("todo_free")</send>

  </timer>
  <timer name="fst_scroll" second="2.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("scroll")</send>

  </timer>
  <timer name="fst_gn_sparklies" second="9.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:gain("sparklies")</send>

  </timer>
  <timer name="fst_ondef_rebound" second="7.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("ondef_rebound")</send>

  </timer>
  <timer name="fst_fastwrithe" second="2.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("fastwrithe")</send>

  </timer>
  <timer name="fst_parry" second="2.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("parry")</send>

  </timer>
  <timer name="fst_gn_tail" second="10.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:gain("tail")</send>

  </timer>
  <timer name="fst_gn_herb" second="3.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:gain("herb")</send>

  </timer>
  <timer name="fst_ondef_speed" second="7.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("ondef_speed")</send>

  </timer>
  <timer name="fst_gn_brew" minute="1" second="0.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:gain("brew")</send>

  </timer>
  <timer name="fst_sparklies" second="2.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("sparklies")</send>

  </timer>
  <timer name="fst_todo_bal" second="2.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("todo_bal")</send>

  </timer>
  <timer name="fst_sca" second="2.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("sca")</send>

  </timer>
  <timer name="fst_gn_elixir" second="7.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:gain("elixir")</send>

  </timer>
  <timer name="fst_pipes_unlit" second="2.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("pipes_unlit")</send>

  </timer>
  <timer name="fst_disrupted" second="2.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("disrupted")</send>

  </timer>
  <timer name="fst_ondef_sixthsense" second="7.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("ondef_sixthsense")</send>

  </timer>
  <timer name="fst_asleep" second="2.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("asleep")</send>

  </timer>
  <timer name="fst_stun" second="1.50" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("stun")</send>

  </timer>
  <timer name="fst_no_waterwalk" second="2.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("no_waterwalk")</send>

  </timer>
  <timer name="fst_writhing" second="3.00" offset_second="0.00"    send_to="12"
group="System_Fst" >
  <send>fst:fire("writhing")</send>

  </timer>
</timers>

<!-- macros -->

<macros
   muclient_version="4.72"
   world_file_version="15"
   date_saved="2012-08-25 10:16:24"
  >

  <macro name="up" type="send_now" >
  <send>up</send>

  </macro>

  <macro name="down" type="send_now" >
  <send>down</send>

  </macro>

  <macro name="north" type="send_now" >
  <send>north</send>

  </macro>

  <macro name="south" type="send_now" >
  <send>south</send>

  </macro>

  <macro name="east" type="send_now" >
  <send>east</send>

  </macro>

  <macro name="west" type="send_now" >
  <send>west</send>

  </macro>

  <macro name="examine" type="replace" >
  <send>examine </send>

  </macro>

  <macro name="look" type="replace" >
  <send>look </send>

  </macro>

  <macro name="page" type="replace" >
  <send>page </send>

  </macro>

  <macro name="say" type="replace" >
  <send>say </send>

  </macro>

  <macro name="whisper" type="replace" >
  <send>whisper </send>

  </macro>

  <macro name="doing" type="send_now" >
  <send>DOING</send>

  </macro>

  <macro name="who" type="send_now" >
  <send>WHO</send>

  </macro>

  <macro name="drop" type="replace" >
  <send>drop </send>

  </macro>

  <macro name="take" type="replace" >
  <send>take </send>

  </macro>

  <macro name="logout" type="send_now" >
  <send>LOGOUT</send>

  </macro>

  <macro name="quit" type="send_now" >
  <send>QUIT</send>

  </macro>
</macros>

<!-- variables -->

<variables
   muclient_version="4.72"
   world_file_version="15"
   date_saved="2012-08-25 10:16:24"
  >
  <variable name="demon_double">0</variable>
  <variable name="demon_id"></variable>
  <variable name="demon_lasthit">-1</variable>
  <variable name="demon_power">0</variable>
  <variable name="demon_willhit">0</variable>
  <variable name="gear_vials_current">gear_vials_current = {}
  gear_vials_current.galvanism = 2
  gear_vials_current.mana = 6
  gear_vials_current["white tea"] = 2
  gear_vials_current.dendroxin = 1
  gear_vials_current.frost = 2
  gear_vials_current.regeneration = 3
  gear_vials_current.empty = 1
  gear_vials_current.liniment = 2
  gear_vials_current.bromides = 4
  gear_vials_current.healing = 9
  gear_vials_current.mending = 3
  gear_vials_current.quicksilver = 2
  gear_vials_current.choleric = 2
  gear_vials_current.sanguine = 2
  gear_vials_current.phlegmatic = 2
  gear_vials_current.antidote = 2
  gear_vials_current.love = 2
  gear_vials_current.fire = 4
  gear_vials_current.allheale = 3
  gear_vials_current.melancholic = 3</variable>
  <variable name="gear_vials_desired">gear_vials_desired = {}
  gear_vials_desired.galvanism = 2
  gear_vials_desired.mana = 5
  gear_vials_desired["white tea"] = 2
  gear_vials_desired.frost = 2
  gear_vials_desired.choleric = 2
  gear_vials_desired.liniment = 2
  gear_vials_desired.bromides = 4
  gear_vials_desired.healing = 10
  gear_vials_desired.mending = 3
  gear_vials_desired.quicksilver = 2
  gear_vials_desired.sanguine = 2
  gear_vials_desired.allheale = 3
  gear_vials_desired.regeneration = 2
  gear_vials_desired.love = 2
  gear_vials_desired.antidote = 2
  gear_vials_desired.fire = 4
  gear_vials_desired.phlegmatic = 2
  gear_vials_desired.melancholic = 2</variable>
  <variable name="highlight_enemies">Talan|Pesukaru|Viynain|Miciah|Nydekion|Neos|Kregarn|Urazial|Shric|Senna|Aeral|Lorina|Haiden|Anisu|Krellan|Vadi|Siam|Celina|Veyrzhul|Rancoura|Albiorix|Alacardael|Daem|Diamante|Rayen|Marina|Tuck|Druken|Placeus|Azula|Saoirse|Lerad|Faenae|Jaamil|Shuyin|Yevah|Calina|Samyaza|Arte|Malicia|Sidd|Inagin|Sipelus|Iytha|Arcanis|Aysu|Quorre|Kelly|Czeslaw|Tylan|Calesta|Wigberht|Arix|Annick|Nidra|Staar|Herla|Dartien</variable>
  <variable name="highlight_enemy_list">Azula|Haiden|Walraven|Saoirse|Vladimere|Zula|Pesukaru|Prailie|Avianca|Iytha|Aeral|Miciah|Czeslaw|Veyrzhul|Tylan|Neos|Samyaza</variable>
  <variable name="system_ally_list">system_ally_list = {}
  system_ally_list.Azula = true
  system_ally_list.Haiden = true
  system_ally_list.Walraven = true
  system_ally_list.Saoirse = true
  system_ally_list.Vladimere = true
  system_ally_list.Zula = true
  system_ally_list.Pesukaru = true
  system_ally_list.Prailie = true
  system_ally_list.Avianca = true
  system_ally_list.Iytha = true
  system_ally_list.Aeral = true
  system_ally_list.Miciah = true
  system_ally_list.Czeslaw = true
  system_ally_list.Veyrzhul = true
  system_ally_list.Tylan = true
  system_ally_list.Neos = true
  system_ally_list.Samyaza = true</variable>
  <variable name="system_auto">system_auto = {}
  system_auto.galvanism = 0
  system_auto.sting = 0
  system_auto.adroitness = 1
  system_auto.clot = 1
  system_auto.metawake = 0
  system_auto.pipes_light = 1
  system_auto.sharpness = 0
  system_auto.fire = 0
  system_auto.truehearing = 0
  system_auto.frost = 0
  system_auto.selfishness = 0
  system_auto.medbag = 0
  system_auto.speed = 0
  system_auto.orgpotion = 0
  system_auto.tea = 0
  system_auto.protection = 0
  system_auto.sparklies = 0
  system_auto.waterbreathe = 0
  system_auto.kafe = 0
  system_auto.rebound = 0
  system_auto.healing = 0
  system_auto.love = 0
  system_auto.hme = 1
  system_auto.parry = 1
  system_auto.bashing = 0
  system_auto.recharge = 1
  system_auto.insomnia = 1
  system_auto.scroll = 0
  system_auto.pickup = 1
  system_auto.waterwalk = 1
  system_auto.sixthsense = 0
  system_auto.stance = 1</variable>
  <variable name="system_default_enemies">system_default_enemies = {}</variable>
  <variable name="system_enchantments">system_enchantments = {}
  system_enchantments.waterbreathe = {}
    system_enchantments.waterbreathe.id = "352072"
    system_enchantments.waterbreathe.charges = 10
    system_enchantments.waterbreathe.verb = "rub"
    system_enchantments.waterbreathe.maxcharges = 10
  system_enchantments.levitate = {}
    system_enchantments.levitate.id = "37259"
    system_enchantments.levitate.charges = 10
    system_enchantments.levitate.verb = "rub"
    system_enchantments.levitate.maxcharges = 10
  system_enchantments.mercy = {}
    system_enchantments.mercy.id = "114587"
    system_enchantments.mercy.charges = 10
    system_enchantments.mercy.verb = "rub"
    system_enchantments.mercy.maxcharges = 10
  system_enchantments.beauty = {}
    system_enchantments.beauty.id = "136909"
    system_enchantments.beauty.charges = 10
    system_enchantments.beauty.verb = "rub"
    system_enchantments.beauty.maxcharges = 10
  system_enchantments.cleanse = {}
    system_enchantments.cleanse.id = "355772"
    system_enchantments.cleanse.charges = 40
    system_enchantments.cleanse.verb = "rub"
    system_enchantments.cleanse.maxcharges = 10
  system_enchantments.ignite = {}
    system_enchantments.ignite.id = "86696"
    system_enchantments.ignite.charges = 20
    system_enchantments.ignite.verb = "point"
    system_enchantments.ignite.maxcharges = 10
  system_enchantments.icewall = {}
    system_enchantments.icewall.id = "13796"
    system_enchantments.icewall.charges = 10
    system_enchantments.icewall.verb = "point"
    system_enchantments.icewall.maxcharges = 10
  system_enchantments.perfection = {}
    system_enchantments.perfection.id = "338983"
    system_enchantments.perfection.charges = 10
    system_enchantments.perfection.verb = "rub"
    system_enchantments.perfection.maxcharges = 10
  system_enchantments.kingdom = {}
    system_enchantments.kingdom.id = "122960"
    system_enchantments.kingdom.charges = 10
    system_enchantments.kingdom.verb = "rub"
    system_enchantments.kingdom.maxcharges = 10
  system_enchantments.gust = {}
    system_enchantments.gust.id = "32860"
    system_enchantments.gust.charges = 20
    system_enchantments.gust.verb = "point"
    system_enchantments.gust.maxcharges = 10</variable>
  <variable name="system_enemies">system_enemies = {}
  system_enemies[1] = {}
    system_enemies[1][1] = "Talan"
    system_enemies[1][2] = "Pesukaru"
    system_enemies[1][3] = "Viynain"
    system_enemies[1][4] = "Miciah"
    system_enemies[1][5] = "Nydekion"
    system_enemies[1][6] = "Neos"
    system_enemies[1][7] = "Kregarn"
    system_enemies[1][8] = "Urazial"
    system_enemies[1][9] = "Shric"
    system_enemies[1][10] = "Senna"
    system_enemies[1][11] = "Aeral"
    system_enemies[1][12] = "Lorina"
    system_enemies[1][13] = "Haiden"
    system_enemies[1][14] = "Anisu"
    system_enemies[1][15] = "Krellan"
  system_enemies[2] = {}
    system_enemies[2][1] = "Vadi"
    system_enemies[2][2] = "Siam"
    system_enemies[2][3] = "Celina"
    system_enemies[2][4] = "Veyrzhul"
    system_enemies[2][5] = "Rancoura"
    system_enemies[2][6] = "Albiorix"
    system_enemies[2][7] = "Alacardael"
    system_enemies[2][8] = "Daem"
    system_enemies[2][9] = "Diamante"
    system_enemies[2][10] = "Rayen"
    system_enemies[2][11] = "Marina"
    system_enemies[2][12] = "Tuck"
    system_enemies[2][13] = "Druken"
    system_enemies[2][14] = "Placeus"
    system_enemies[2][15] = "Azula"
    system_enemies[2][16] = "Saoirse"
    system_enemies[2][17] = "Lerad"
    system_enemies[2][18] = "Faenae"
    system_enemies[2][19] = "Jaamil"
    system_enemies[2][20] = "Shuyin"
    system_enemies[2][21] = "Yevah"
    system_enemies[2][22] = "Calina"
    system_enemies[2][23] = "Samyaza"
    system_enemies[2][24] = "Arte"
    system_enemies[2][25] = "Malicia"
  system_enemies[3] = {}
    system_enemies[3][1] = "Sidd"
    system_enemies[3][2] = "Inagin"
    system_enemies[3][3] = "Sipelus"
    system_enemies[3][4] = "Iytha"
    system_enemies[3][5] = "Arcanis"
    system_enemies[3][6] = "Aysu"
    system_enemies[3][7] = "Quorre"
    system_enemies[3][8] = "Kelly"
    system_enemies[3][9] = "Czeslaw"
    system_enemies[3][10] = "Tylan"
  system_enemies[4] = {}
    system_enemies[4][1] = "Calesta"
    system_enemies[4][2] = "Wigberht"
    system_enemies[4][3] = "Arix"
    system_enemies[4][4] = "Annick"
    system_enemies[4][5] = "Nidra"
  system_enemies[5] = {}
    system_enemies[5][1] = "Staar"
    system_enemies[5][2] = "Herla"
    system_enemies[5][3] = "Dartien"</variable>
  <variable name="system_enemy_list">system_enemy_list = {}
  system_enemy_list.Azula = true
  system_enemy_list.Haiden = true
  system_enemy_list.Walraven = true
  system_enemy_list.Saoirse = true
  system_enemy_list.Vladimere = true
  system_enemy_list.Zula = true
  system_enemy_list.Pesukaru = true
  system_enemy_list.Prailie = true
  system_enemy_list.Avianca = true
  system_enemy_list.Iytha = true
  system_enemy_list.Aeral = true
  system_enemy_list.Miciah = true
  system_enemy_list.Czeslaw = true
  system_enemy_list.Veyrzhul = true
  system_enemy_list.Tylan = true
  system_enemy_list.Neos = true
  system_enemy_list.Samyaza = true</variable>
  <variable name="system_hme_priority">health</variable>
  <variable name="system_miss">\, and you smoothly step away from the blow|\, and you make ready with .+?|\, and you raise .+?|\, but his thrust hits your powerful aura and rebounds back into himself|\, but her thrust hits your powerful aura and rebounds back into herself|\. His weapon \w+ through the air\, missing you completely|\. Her weapon cuts through the air\, missing you completely|\. [A-Z][a-z]+\'s .+? \w+ your .+?\, which completely absorbs the blow|\. [A-Z][a-z]+\'s .+? \w+ your .+?\, and you easily deflect the blow|\. With a flick of your \w+\, you easily deflect [A-Z][a-z]+\s \w+|\.[A-Z][a-z]+\'s .+? strikes your .+? and bounces harmlessly off</variable>
  <variable name="system_offense">system_offense = {}
  system_offense.attacks = {}
    system_offense.attacks["vomits forth a stream of noxious fluid"] = {}
      system_offense.attacks["vomits forth a stream of noxious fluid"].worms = true
      system_offense.attacks["vomits forth a stream of noxious fluid"].rigormortis = true
      system_offense.attacks["vomits forth a stream of noxious fluid"].darksilver = true
      system_offense.attacks["vomits forth a stream of noxious fluid"].scabies = true
      system_offense.attacks["vomits forth a stream of noxious fluid"].anorexia = true
    system_offense.attacks["With a cold smile"] = {}
      system_offense.attacks["With a cold smile"].shackles = true
      system_offense.attacks["With a cold smile"].sensitivity = true
      system_offense.attacks["With a cold smile"].masochism = true
      system_offense.attacks["With a cold smile"].hemiplegy = true
      system_offense.attacks["With a cold smile"].bleeding = true
  system_offense.current = {}
    system_offense.current.symbol192653 = "a blighted symbol of pestilence"
    system_offense.current.shield116989 = "a barbed greatshield of tortured verses"
  system_offense.bashing = {}
    system_offense.bashing[1] = {}
      system_offense.bashing[1][1] = "symbol strike"
      system_offense.bashing[1][2] = "target"
  system_offense.pacts = {}
    system_offense.pacts.Gorgulu = {}
      system_offense.pacts.Gorgulu.worms = true
      system_offense.pacts.Gorgulu.rigormortis = true
      system_offense.pacts.Gorgulu.scabies = true
      system_offense.pacts.Gorgulu.anorexia = true
      system_offense.pacts.Gorgulu.darksilver = true
    system_offense.pacts.Baalphegar = {}
      system_offense.pacts.Baalphegar.epilepsy = true
      system_offense.pacts.Baalphegar.confusion = true
      system_offense.pacts.Baalphegar.stupidity = true
      system_offense.pacts.Baalphegar.dementia = true
      system_offense.pacts.Baalphegar.paranoia = true
    system_offense.pacts.Nifilhema = {}
      system_offense.pacts.Nifilhema.shackles = true
      system_offense.pacts.Nifilhema.sensitivity = true
      system_offense.pacts.Nifilhema.masochism = true
      system_offense.pacts.Nifilhema.hemiplegy = true
      system_offense.pacts.Nifilhema.bleeding = true
    system_offense.pacts.Ashtorath = {}
      system_offense.pacts.Ashtorath.crunch = true
      system_offense.pacts.Ashtorath.flame = true
      system_offense.pacts.Ashtorath.impatience = true
      system_offense.pacts.Ashtorath.loneliness = true
      system_offense.pacts.Ashtorath.recklessness = true
    system_offense.pacts.Luciphage = {}
      system_offense.pacts.Luciphage.powersink = true
      system_offense.pacts.Luciphage.dominate = true
      system_offense.pacts.Luciphage.amnesia = true
      system_offense.pacts.Luciphage.healthleech = true
      system_offense.pacts.Luciphage.paralysis = true</variable>
  <variable name="system_pipes">system_pipes = {}
  system_pipes.arties = {}
    system_pipes.arties["247634"] = true
    system_pipes.arties["177570"] = true
    system_pipes.arties["194033"] = true
  system_pipes.myrtle = {}
    system_pipes.myrtle.id = "194033"
    system_pipes.myrtle.maxpuffs = 20
    system_pipes.myrtle.status = "artie"
    system_pipes.myrtle.puffs = 7
  system_pipes.coltsfoot = {}
    system_pipes.coltsfoot.id = "247634"
    system_pipes.coltsfoot.maxpuffs = 20
    system_pipes.coltsfoot.status = "artie"
    system_pipes.coltsfoot.puffs = 16
  system_pipes.faeleaf = {}
    system_pipes.faeleaf.id = "177570"
    system_pipes.faeleaf.maxpuffs = 20
    system_pipes.faeleaf.status = "artie"
    system_pipes.faeleaf.puffs = 20</variable>
  <variable name="system_scrolls">system_scrolls = {}</variable>
  <variable name="system_settings">system_settings = {}
  system_settings.default_parry = "head"
  system_settings.armbalance = 1
  system_settings.gunner = "on"
  system_settings.focus_spirit = 0
  system_settings.soulwash = 1
  system_settings.clot_cost = 60
  system_settings.pipelist = 1
  system_settings.wounds = 1
  system_settings.tea = "white"
  system_settings.masked = 2
  system_settings.sparklies = "sparkleberry"
  system_settings.rejecting = "none"
  system_settings.tumble = 1
  system_settings.badluck = 7
  system_settings.clot = 1
  system_settings.rockclimbing = 1
  system_settings.insomnia = 1
  system_settings.geburah = 1
  system_settings.restore = 1
  system_settings.ignite = 2
  system_settings.hexagram = 1
  system_settings.tipheret = 1
  system_settings.scroll_healing = 0
  system_settings.notrees = 1
  system_settings.tscroll = 0.7
  system_settings.focus_body = 1
  system_settings.cleanse = 1
  system_settings.metawake = 1
  system_settings.potionlist = 1
  system_settings.focus_mind = 1
  system_settings.default_stance = "legs"
  system_settings.weaponparry = true
  system_settings.diag = 1
  system_settings.orgpotion = "unholy_water"
  system_settings.max_enemies = 30
  system_settings.magic_defs = 1
  system_settings.magiclist = 1
  system_settings.deb = 0
  system_settings.on = 0
  system_settings.reject = "all"
  system_settings.medbag_threshold = 0.5
  system_settings.bashing = 0
  system_settings.cannibalize = 1
  system_settings.deathmark = 10
  system_settings.allheale = 2
  system_settings.clot_threshold = 100</variable>
  <variable name="system_skills">system_skills = {}
  system_skills.available = {}
    system_skills.available.demonscales = {}
      system_skills.available.demonscales.syntax = "darkcall demonscales"
      system_skills.available.demonscales.use = "defs_ubal"
    system_skills.available.nightsight = {}
      system_skills.available.nightsight.syntax = "nightsight"
      system_skills.available.nightsight.use = "defs_free"
    system_skills.available.chockmah = {}
      system_skills.available.chockmah.syntax = "evoke chockmah"
      system_skills.available.chockmah.use = "defs_ubal"
    system_skills.available.window = {}
      system_skills.available.window.syntax = "abjure window"
      system_skills.available.window.use = "encha"
    system_skills.available.draconis = {}
      system_skills.available.draconis.syntax = "chant draconis"
      system_skills.available.draconis.use = "defs_ubal"
    system_skills.available.soulwash = {}
      system_skills.available.soulwash.syntax = "abjure soulwash"
      system_skills.available.soulwash.use = "cures"
    system_skills.available.tipheret = {}
      system_skills.available.tipheret.syntax = "evoke tipheret"
      system_skills.available.tipheret.use = "cures"
    system_skills.available.pipelist = {}
      system_skills.available.pipelist.syntax = "pipelist"
      system_skills.available.pipelist.use = "cures"
    system_skills.available.upper = {}
      system_skills.available.upper.syntax = "stance upper"
      system_skills.available.upper.use = "stance"
    system_skills.available.wounds = {}
      system_skills.available.wounds.syntax = "wounds"
      system_skills.available.wounds.use = "cures"
    system_skills.available.adroitness = {}
      system_skills.available.adroitness.syntax = "adroitness"
      system_skills.available.adroitness.use = "defs_free"
    system_skills.available.selfishness = {}
      system_skills.available.selfishness.syntax = "selfishness"
      system_skills.available.selfishness.use = "defs_ubal"
    system_skills.available.hexagram = {}
      system_skills.available.hexagram.syntax = "evoke hexagram"
      system_skills.available.hexagram.use = "cures"
    system_skills.available.rubeus = {}
      system_skills.available.rubeus.syntax = "chant rubeus"
      system_skills.available.rubeus.use = "defs_ubal"
    system_skills.available.rockclimbing = {}
      system_skills.available.rockclimbing.syntax = "climb rocks"
      system_skills.available.rockclimbing.use = "cures"
    system_skills.available.barbedtail = {}
      system_skills.available.barbedtail.syntax = "darkcall barbedtail"
      system_skills.available.barbedtail.use = "defs_ubal"
    system_skills.available.right = {}
      system_skills.available.right.syntax = "stance right"
      system_skills.available.right.use = "stance"
    system_skills.available.thirdeye = {}
      system_skills.available.thirdeye.syntax = "thirdeye"
      system_skills.available.thirdeye.use = "defs_free"
    system_skills.available.deathsight = {}
      system_skills.available.deathsight.syntax = "abjure deathsight"
      system_skills.available.deathsight.use = "defs_ubal"
    system_skills.available.contemplate = {}
      system_skills.available.contemplate.syntax = "contemplate"
      system_skills.available.contemplate.use = "instakill"
    system_skills.available.fortuna = {}
      system_skills.available.fortuna.syntax = "chant fortuna"
      system_skills.available.fortuna.use = "defs_ubal"
    system_skills.available.waterwalk = {}
      system_skills.available.waterwalk.syntax = "abjure waterwalk"
      system_skills.available.waterwalk.use = "defs_ubal"
    system_skills.available.wings = {}
      system_skills.available.wings.syntax = "darkcall wings"
      system_skills.available.wings.use = "defs_ubal"
    system_skills.available.chest = {}
      system_skills.available.chest.syntax = "stance chest"
      system_skills.available.chest.use = "stance"
    system_skills.available.insomnia = {}
      system_skills.available.insomnia.syntax = "insomnia"
      system_skills.available.insomnia.use = "cures"
    system_skills.available.left = {}
      system_skills.available.left.syntax = "stance left"
      system_skills.available.left.use = "stance"
    system_skills.available.focus_body = {}
      system_skills.available.focus_body.syntax = "focus body"
      system_skills.available.focus_body.use = "cures"
    system_skills.available.clot = {}
      system_skills.available.clot.syntax = "clot"
      system_skills.available.clot.use = "cures"
    system_skills.available.metawake = {}
      system_skills.available.metawake.syntax = "metawake on"
      system_skills.available.metawake.use = "cures"
    system_skills.available.potionlist = {}
      system_skills.available.potionlist.syntax = "potionlist"
      system_skills.available.potionlist.use = "cures"
    system_skills.available.malkuth = {}
      system_skills.available.malkuth.syntax = "evoke malkuth"
      system_skills.available.malkuth.use = "defs_ubal"
    system_skills.available.legs = {}
      system_skills.available.legs.syntax = "stance legs"
      system_skills.available.legs.use = "stance"
    system_skills.available.focus_mind = {}
      system_skills.available.focus_mind.syntax = "focus mind"
      system_skills.available.focus_mind.use = "cures"
    system_skills.available.lower = {}
      system_skills.available.lower.syntax = "stance lower"
      system_skills.available.lower.use = "stance"
    system_skills.available.shroud = {}
      system_skills.available.shroud.syntax = "evoke yesod"
      system_skills.available.shroud.use = "defs_ubal"
    system_skills.available.gut = {}
      system_skills.available.gut.syntax = "stance gut"
      system_skills.available.gut.use = "stance"
    system_skills.available.deathsense = {}
      system_skills.available.deathsense.syntax = "deathsense"
      system_skills.available.deathsense.use = "defs_ubal"
    system_skills.available.tumble = {}
      system_skills.available.tumble.use = "cures"
    system_skills.available.middle = {}
      system_skills.available.middle.syntax = "stance middle"
      system_skills.available.middle.use = "stance"
    system_skills.available.cloak = {}
      system_skills.available.cloak.syntax = "abjure cloak"
      system_skills.available.cloak.use = "defs_ubal"
    system_skills.available.populus = {}
      system_skills.available.populus.syntax = "chant populus"
      system_skills.available.populus.use = "defs_ubal"
    system_skills.available.demoncloak = {}
      system_skills.available.demoncloak.syntax = "darkcall demoncloak on"
      system_skills.available.demoncloak.use = "defs_rbal"
    system_skills.available.vitals = {}
      system_skills.available.vitals.syntax = "stance vitals"
      system_skills.available.vitals.use = "stance"
    system_skills.available.magiclist = {}
      system_skills.available.magiclist.syntax = "magiclist"
      system_skills.available.magiclist.use = "cures"
    system_skills.available.head = {}
      system_skills.available.head.syntax = "stance head"
      system_skills.available.head.use = "stance"
    system_skills.available.weaponparry = {}
      system_skills.available.weaponparry.syntax = "nothing"
      system_skills.available.weaponparry.use = "cures"
    system_skills.available.arms = {}
      system_skills.available.arms.syntax = "stance arms"
      system_skills.available.arms.use = "stance"
    system_skills.available.cannibalize = {}
      system_skills.available.cannibalize.syntax = "darkchant cannibalize"
      system_skills.available.cannibalize.use = "cures"
    system_skills.available.netzach = {}
      system_skills.available.netzach.syntax = "evoke netzach"
      system_skills.available.netzach.use = "defs_ubal"
    system_skills.available.diag = {}
      system_skills.available.diag.syntax = "diag"
      system_skills.available.diag.use = "cures"
    system_skills.available.pentagram = {}
      system_skills.available.pentagram.syntax = "evoke pentagram"
      system_skills.available.pentagram.use = "shield"
    system_skills.available.web = {}
      system_skills.available.web.syntax = "abjure web"
      system_skills.available.web.use = "encha"
    system_skills.available.geburah = {}
      system_skills.available.geburah.syntax = "evoke geburah"
      system_skills.available.geburah.use = "cures"
    system_skills.available.acquisitio = {}
      system_skills.available.acquisitio.syntax = "chant acquisitio on"
      system_skills.available.acquisitio.use = "defs_ubal"
    system_skills.available.timeslip = {}
      system_skills.available.timeslip.syntax = "abjure timeslip"
      system_skills.available.timeslip.use = "defs_ubal"
    system_skills.available.restore = {}
      system_skills.available.restore.syntax = "restore"
      system_skills.available.restore.use = "cures"
  system_skills.levels = {}
    system_skills.levels.highmagic = "fabled"
    system_skills.levels.dramatics = "inept"
    system_skills.levels.cosmic = "transcendent"
    system_skills.levels.aethercraft = "apprentice"
    system_skills.levels.planar = "expert"
    system_skills.levels.arts = "capable"
    system_skills.levels.discernment = "virtuoso"
    system_skills.levels.necromancy = "transcendent"
    system_skills.levels.tarot = "mythical"
    system_skills.levels.discipline = "transcendent"
    system_skills.levels.combat = "transcendent"
    system_skills.levels.influence = "inept"
    system_skills.levels.environment = "expert"
    system_skills.levels.rituals = "transcendent"
    system_skills.levels.beastmastery = "inept"
    system_skills.levels.nihilism = "transcendent"
    system_skills.levels.resilience = "transcendent"</variable>
  <variable name="system_target">Aslaran</variable>
</variables>

<!-- colours -->

<colours
   muclient_version="4.72"
   world_file_version="15"
   date_saved="2012-08-25 10:16:24"
  >

<ansi>

 <normal>
   <colour seq="1" rgb="black" />
   <colour seq="2" rgb="maroon" />
   <colour seq="3" rgb="green" />
   <colour seq="4" rgb="olive" />
   <colour seq="5" rgb="navy" />
   <colour seq="6" rgb="purple" />
   <colour seq="7" rgb="teal" />
   <colour seq="8" rgb="silver" />

 </normal>

 <bold>
   <colour seq="1" rgb="gray" />
   <colour seq="2" rgb="red" />
   <colour seq="3" rgb="lime" />
   <colour seq="4" rgb="yellow" />
   <colour seq="5" rgb="blue" />
   <colour seq="6" rgb="magenta" />
   <colour seq="7" rgb="cyan" />
   <colour seq="8" rgb="white" />

 </bold>

</ansi>

<custom>
  <colour seq="1" name="Custom1" text="#FF8080" back="black" />
  <colour seq="2" name="Custom2" text="#FFFF80" back="black" />
  <colour seq="3" name="Custom3" text="#80FF80" back="black" />
  <colour seq="4" name="Custom4" text="#80FFFF" back="black" />
  <colour seq="5" name="Custom5" text="#0080FF" back="black" />
  <colour seq="6" name="Custom6" text="#FF80C0" back="black" />
  <colour seq="7" name="Custom7" text="red" back="black" />
  <colour seq="8" name="Custom8" text="#0080C0" back="black" />
  <colour seq="9" name="Custom9" text="magenta" back="black" />
  <colour seq="10" name="Custom10" text="#804040" back="black" />
  <colour seq="11" name="Custom11" text="#FF8040" back="black" />
  <colour seq="12" name="Custom12" text="teal" back="black" />
  <colour seq="13" name="Custom13" text="#004080" back="black" />
  <colour seq="14" name="Custom14" text="#FF0080" back="black" />
  <colour seq="15" name="Custom15" text="green" back="black" />
  <colour seq="16" name="Custom16" text="blue" back="black" />

</custom>
</colours>

<!-- keypad -->

<keypad
   muclient_version="4.72"
   world_file_version="15"
   date_saved="2012-08-25 10:16:24"
  >

  <key name="0" >
  <send>climb up</send>
  </key>

  <key name="1" >
  <send>sw</send>
  </key>

  <key name="2" >
  <send>s</send>
  </key>

  <key name="3" >
  <send>se</send>
  </key>

  <key name="4" >
  <send>w</send>
  </key>

  <key name="5" >
  <send>look</send>
  </key>

  <key name="6" >
  <send>e</send>
  </key>

  <key name="7" >
  <send>nw</send>
  </key>

  <key name="8" >
  <send>n</send>
  </key>

  <key name="9" >
  <send>ne</send>
  </key>

  <key name="." >
  <send>cling</send>
  </key>

  <key name="/" >
  <send>seize</send>
  </key>

  <key name="*" >
  <send>shove</send>
  </key>

  <key name="-" >
  <send>u</send>
  </key>

  <key name="+" >
  <send>d</send>
  </key>

  <key name="Ctrl+0" >
  </key>

  <key name="Ctrl+1" >
  </key>

  <key name="Ctrl+2" >
  </key>

  <key name="Ctrl+3" >
  </key>

  <key name="Ctrl+4" >
  </key>

  <key name="Ctrl+5" >
  </key>

  <key name="Ctrl+6" >
  </key>

  <key name="Ctrl+7" >
  </key>

  <key name="Ctrl+8" >
  </key>

  <key name="Ctrl+9" >
  </key>

  <key name="Ctrl+." >
  </key>

  <key name="Ctrl+/" >
  </key>

  <key name="Ctrl+*" >
  </key>

  <key name="Ctrl+-" >
  </key>

  <key name="Ctrl++" >
  </key>
</keypad>

<!-- printing -->

<printing
   muclient_version="4.72"
   world_file_version="15"
   date_saved="2012-08-25 10:16:24"
  >

<ansi>

 <normal>

 </normal>

 <bold>
   <style seq="1" bold="y" />
   <style seq="2" bold="y" />
   <style seq="3" bold="y" />
   <style seq="4" bold="y" />
   <style seq="5" bold="y" />
   <style seq="6" bold="y" />
   <style seq="7" bold="y" />
   <style seq="8" bold="y" />

 </bold>

</ansi>
</printing>
</muclient>
